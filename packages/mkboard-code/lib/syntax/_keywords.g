kw_False -> { :class(keyword) "False" };
kw_None -> { :class(keyword) "None" };
kw_Self -> { :class(keyword) "Self" };
kw_True -> { :class(keyword) "True" };
kw_abstract -> { :class(keyword) "abstract" };
kw_alignas -> { :class(keyword) "alignas" };
kw_alignof -> { :class(keyword) "alignof" };
kw_and -> { :class(keyword) "and" };
kw_arguments -> { :class(keyword) "arguments" };
kw_as -> { :class(keyword) "as" };
kw_asm -> { :class(keyword) "asm" };
kw_assert -> { :class(keyword) "assert" };
kw_async -> { :class(keyword) "async" };
kw_auto -> { :class(keyword) "auto" };
kw_await -> { :class(keyword) "await" };
kw_become -> { :class(keyword) "become" };
kw_bool -> { :class(keyword) "bool" };
kw_boolean -> { :class(keyword) "boolean" };
kw_box -> { :class(keyword) "box" };
kw_break -> { :class(keyword) "break" };
kw_byte -> { :class(keyword) "byte" };
kw_case -> { :class(keyword) "case" };
kw_catch -> { :class(keyword) "catch" };
kw_char -> { :class(keyword) "char" };
kw_char16_t -> { :class(keyword) "char16_t" };
kw_char32_t -> { :class(keyword) "char32_t" };
kw_class -> { :class(keyword) "class" };
kw_co_await -> { :class(keyword) "co_await" };
kw_co_return -> { :class(keyword) "co_return" };
kw_co_yield -> { :class(keyword) "co_yield" };
kw_concept -> { :class(keyword) "concept" };
kw_const -> { :class(keyword) "const" };
kw_const_cast -> { :class(keyword) "const_cast" };
kw_constexpr -> { :class(keyword) "constexpr" };
kw_continue -> { :class(keyword) "continue" };
kw_crate -> { :class(keyword) "crate" };
kw_debugger -> { :class(keyword) "debugger" };
kw_decltype -> { :class(keyword) "decltype" };
kw_def -> { :class(keyword) "def" };
kw_default -> { :class(keyword) "default" };
kw_del -> { :class(keyword) "del" };
kw_delete -> { :class(keyword) "delete" };
kw_do -> { :class(keyword) "do" };
kw_double -> { :class(keyword) "double" };
kw_dyn -> { :class(keyword) "dyn" };
kw_dynamic_cast -> { :class(keyword) "dynamic_cast" };
kw_elif -> { :class(keyword) "elif" };
kw_else -> { :class(keyword) "else" };
kw_enum -> { :class(keyword) "enum" };
kw_except -> { :class(keyword) "except" };
kw_explicit -> { :class(keyword) "explicit" };
kw_export -> { :class(keyword) "export" };
kw_extends -> { :class(keyword) "extends" };
kw_extern -> { :class(keyword) "extern" };
kw_f32 -> { :class(keyword) "f32" };
kw_f64 -> { :class(keyword) "f64" };
kw_false -> { :class(keyword) "false" };
kw_final -> { :class(keyword) "final" };
kw_finally -> { :class(keyword) "finally" };
kw_float -> { :class(keyword) "float" };
kw_fn -> { :class(keyword) "fn" };
kw_for -> { :class(keyword) "for" };
kw_friend -> { :class(keyword) "friend" };
kw_from -> { :class(keyword) "from" };
kw_function -> { :class(keyword) "function" };
kw_global -> { :class(keyword) "global" };
kw_goto -> { :class(keyword) "goto" };
kw_i128 -> { :class(keyword) "i128" };
kw_i16 -> { :class(keyword) "i16" };
kw_i32 -> { :class(keyword) "i32" };
kw_i64 -> { :class(keyword) "i64" };
kw_i8 -> { :class(keyword) "i8" };
kw_if -> { :class(keyword) "if" };
kw_impl -> { :class(keyword) "impl" };
kw_implements -> { :class(keyword) "implements" };
kw_import -> { :class(keyword) "import" };
kw_in -> { :class(keyword) "in" };
kw_inline -> { :class(keyword) "inline" };
kw_instanceof -> { :class(keyword) "instanceof" };
kw_int -> { :class(keyword) "int" };
kw_interface -> { :class(keyword) "interface" };
kw_is -> { :class(keyword) "is" };
kw_isize -> { :class(keyword) "isize" };
kw_lambda -> { :class(keyword) "lambda" };
kw_let -> { :class(keyword) "let" };
kw_long -> { :class(keyword) "long" };
kw_loop -> { :class(keyword) "loop" };
kw_match -> { :class(keyword) "match" };
kw_mod -> { :class(keyword) "mod" };
kw_move -> { :class(keyword) "move" };
kw_mut -> { :class(keyword) "mut" };
kw_mutable -> { :class(keyword) "mutable" };
kw_namespace -> { :class(keyword) "namespace" };
kw_native -> { :class(keyword) "native" };
kw_new -> { :class(keyword) "new" };
kw_noexcept -> { :class(keyword) "noexcept" };
kw_nonlocal -> { :class(keyword) "nonlocal" };
kw_not -> { :class(keyword) "not" };
kw_null -> { :class(keyword) "null" };
kw_nullptr -> { :class(keyword) "nullptr" };
kw_number -> { :class(keyword) "number" };
kw_object -> { :class(keyword) "object" };
kw_operator -> { :class(keyword) "operator" };
kw_or -> { :class(keyword) "or" };
kw_override -> { :class(keyword) "override" };
kw_package -> { :class(keyword) "package" };
kw_pass -> { :class(keyword) "pass" };
kw_priv -> { :class(keyword) "priv" };
kw_private -> { :class(keyword) "private" };
kw_protected -> { :class(keyword) "protected" };
kw_pub -> { :class(keyword) "pub" };
kw_public -> { :class(keyword) "public" };
kw_raise -> { :class(keyword) "raise" };
kw_readonly -> { :class(keyword) "readonly" };
kw_ref -> { :class(keyword) "ref" };
kw_register -> { :class(keyword) "register" };
kw_reinterpret_cast -> { :class(keyword) "reinterpret_cast" };
kw_requires -> { :class(keyword) "requires" };
kw_return -> { :class(keyword) "return" };
kw_self -> { :class(keyword) "self" };
kw_short -> { :class(keyword) "short" };
kw_signed -> { :class(keyword) "signed" };
kw_sizeof -> { :class(keyword) "sizeof" };
kw_static -> { :class(keyword) "static" };
kw_static_assert -> { :class(keyword) "static_assert" };
kw_static_cast -> { :class(keyword) "static_cast" };
kw_str -> { :class(keyword) "str" };
kw_strictfp -> { :class(keyword) "strictfp" };
kw_string -> { :class(keyword) "string" };
kw_struct -> { :class(keyword) "struct" };
kw_super -> { :class(keyword) "super" };
kw_switch -> { :class(keyword) "switch" };
kw_symbol -> { :class(keyword) "symbol" };
kw_synchronized -> { :class(keyword) "synchronized" };
kw_template -> { :class(keyword) "template" };
kw_this -> { :class(keyword) "this" };
kw_thread_local -> { :class(keyword) "thread_local" };
kw_throw -> { :class(keyword) "throw" };
kw_throws -> { :class(keyword) "throws" };
kw_trait -> { :class(keyword) "trait" };
kw_transient -> { :class(keyword) "transient" };
kw_true -> { :class(keyword) "true" };
kw_try -> { :class(keyword) "try" };
kw_type -> { :class(keyword) "type" };
kw_typedef -> { :class(keyword) "typedef" };
kw_typeid -> { :class(keyword) "typeid" };
kw_typename -> { :class(keyword) "typename" };
kw_typeof -> { :class(keyword) "typeof" };
kw_u128 -> { :class(keyword) "u128" };
kw_u16 -> { :class(keyword) "u16" };
kw_u32 -> { :class(keyword) "u32" };
kw_u64 -> { :class(keyword) "u64" };
kw_u8 -> { :class(keyword) "u8" };
kw_undefined -> { :class(keyword) "undefined" };
kw_union -> { :class(keyword) "union" };
kw_unknown -> { :class(keyword) "unknown" };
kw_unsafe -> { :class(keyword) "unsafe" };
kw_unsigned -> { :class(keyword) "unsigned" };
kw_use -> { :class(keyword) "use" };
kw_using -> { :class(keyword) "using" };
kw_usize -> { :class(keyword) "usize" };
kw_var -> { :class(keyword) "var" };
kw_virtual -> { :class(keyword) "virtual" };
kw_void -> { :class(keyword) "void" };
kw_volatile -> { :class(keyword) "volatile" };
kw_wchar_t -> { :class(keyword) "wchar_t" };
kw_where -> { :class(keyword) "where" };
kw_while -> { :class(keyword) "while" };
kw_with -> { :class(keyword) "with" };
kw_yield -> { :class(keyword) "yield" };
kw_any -> { :class(keyword) "any" };
kw_bigint -> { :class(keyword) "bigint" };
kw_declare -> { :class(keyword) "declare" };
kw_keyof -> { :class(keyword) "keyof" };
kw_module -> { :class(keyword) "module" };
kw_never -> { :class(keyword) "never" };
kw_satisfies -> { :class(keyword) "satisfies" };
kw_unique -> { :class(keyword) "unique" };
kw_infer -> { :class(keyword) "infer" };
kw_is -> { :class(keyword) "is" };
kw_out -> { :class(keyword) "out" };
kw_override -> { :class(keyword) "override" };
