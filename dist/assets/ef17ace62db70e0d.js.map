{"version":3,"file":"ef17ace62db70e0d.js","mappings":"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b,MAChD,CAEA,MAAA5E,CAAO3W,GACL,OAAOR,KAAK+b,MAAM9c,SAASuB,EAC7B,CAEA,SAAAuf,CAAUC,GACR,OAAOA,EAAIC,KAAMzf,GAAOR,KAAK+b,MAAM9c,SAASuB,GAC9C,CAEA,UAAA0f,CAAWF,GACT,OAAOA,EAAIze,MAAOf,GAAOR,KAAK+b,MAAM9c,SAASuB,GAC/C,EAGF,SAASmf,EACP5D,EACAoE,GAEA,IAAK,MAAMjJ,KAAQ6E,EACjB,GAAIoE,EAAOlhB,SAASiY,GAClB,OAAOA,EAGX,OAAO,IACT,CCxGO,MAAMkJ,EACX7E,UAAqB,IAAI6E,EACb,KACI,SACG,MACD,gCAElB7E,UAAqB,IAAI6E,EACb,KACI,WACG,MACD,mCAElB7E,UAAqB,IAAI6E,EACb,KACI,QACG,MACD,2CAElB7E,UAAqB,IAAI6E,EACb,KACI,QACG,MACD,iCAElB7E,UAAqB,IAAI6E,EACb,KACI,QACG,MACD,kCAElB7E,UAAqB,IAAI6E,EACb,KACI,QACG,MACD,oCAElB7E,UAAqB,IAAI6E,EACb,KACI,QACG,MACD,8BAElB7E,UAAqB,IAAI6E,EACb,KACI,QACG,MACD,kCAElB7E,UAAqB,IAAI6E,EACb,KACI,SACG,MACD,oCAElB7E,UAAqB,IAAI6E,EACb,KACI,QACG,MACD,+BAElB7E,UAAqB,IAAI6E,EACb,KACI,SACG,MACD,+BAElB7E,UAAqB,IAAI6E,EACb,KACI,QACG,MACD,+BAElB7E,UAAqB,IAAI6E,EACb,KACI,QACG,MACD,uCAElB7E,UAAqB,IAAI6E,EACb,KACI,QACG,MACD,8BAElB7E,UAAqB,IAAI6E,EACb,KACI,QACG,MACD,oCAElB7E,UAAqB,IAAI6E,EACb,KACI,QACG,MACD,8BAElB7E,UAAqB,IAAI6E,EACb,KACI,QACG,MACD,8BAElB7E,UAAqB,IAAI6E,EACb,KACI,QACG,MACD,oCAElB7E,UAAqB,IAAI6E,EACb,KACI,QACG,MACD,uCAElB7E,UAAqB,IAAI6E,EACb,KACI,QACG,MACD,+BAElB7E,UAAqB,IAAI6E,EACb,KA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B,GAC7C,OAAOhB,OAAOykB,YACZzkB,OAAOC,QAAQP,GAAM5B,IACnB,EAAEgD,GAAMsH,IAAGE,IAAGD,IAAGE,IAAGuB,SAAQ3B,QAAOkU,QAAO5S,aAAc,CACtD3I,EACA,CAAEsH,IAAGE,IAAGD,IAAGE,IAAGuB,SAAQ3B,QAAOkU,MAAOrb,EAAIF,IAAOub,EAAO5S,YAI9D,CC5BO,MAAMib,EA8xCA5jB,GACA6jB,IACAhV,KACAiV,OACAzd,SACA0d,QACAC,WACA9jB,IApyCX,aAAOkG,CAAOC,GACZ,OAAO,IAAIud,EACC,SACC,IACC,SACE,SACEvd,GACD,EACGgV,EAASG,IAE/B,CAEAT,aAAwB,IAAI6I,EAChB,QACC,GACC,OACE,SACEhE,EAASO,IACV,EACG,IAAI,KACpB9E,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,iBAA4B,IAAI6I,EACpB,YACC,GACC,SACE,SACEhE,EAASO,IACV,EACG,IAAI,KACpB9E,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,sBAAiC,IAAI6I,EACzB,iBACC,GACC,uBACE,SACEhE,EAASO,IACV,EACG,IAAI,KACpB9E,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,kBAA6B,IAAI6I,EACrB,aACC,GACC,UACE,UACEhE,EAASO,IACV,EACG,IAAI,KACpB9E,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,0BAAqC,IAAI6I,EAC7B,gBACC,GACC,oBACE,aACEhE,EAASO,IACV,EACG,IAAI,KACpB9E,EAASI,SACTJ,EAASK,cACTL,EAASc,QAEAqH,GAEbzI,+BAA0C,IAAI6I,EAClC,qBACC,GACC,yBACE,kBACEhE,EAASO,IACV,EACG,IAAI,KACpB9E,EAASI,SACTJ,EAASK,cACTL,EAASc,QAEAuH,GAEb3I,yBAAoC,IAAI6I,EAC5B,oBACC,GACC,mBACE,iBACEhE,EAASO,IACV,EACG,IAAI,KACpB9E,EAASM,QACTN,EAASO,aACTP,EAASc,QAEAqH,GAEbzI,8BAAyC,IAAI6I,EACjC,yBACC,GACC,wBACE,sBACEhE,EAASO,IACV,EACG,IAAI,KACpB9E,EAASM,QACTN,EAASO,aACTP,EAASc,QAEAuH,GAEb3I,4BAAuC,IAAI6I,EAC/B,uBACC,GACC,sBACE,oBACEhE,EAASO,IACV,EACG,IAAI,KAAK9E,EAASc,SAEtCpB,kBAA6B,IAAI6I,EACrB,aACC,GACC,UACE,UACEhE,EAASO,IACV,EACG,IAAI,KACpB9E,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,GACC,OACE,SACEhE,EAASO,IACV,EACG,IAAI,KACpB9E,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,GACC,OACE,SACEhE,EAASO,IACV,EACG,IAAI,KACpB9E,EAASY,aACTZ,EAASa,oBAGbnB,aAAwB,IAAI6I,EAChB,QACC,GACC,OACE,SACEhE,EAASK,IACV,EACG,IAAI,KACpB5E,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,GACC,OACE,SACEhE,EAASK,IACV,EACG,IAAI,KACpB5E,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,gBAA2B,IAAI6I,EACnB,WACC,GACC,QACE,WACEhE,EAASK,IACV,EACG,IAAI,KACpB5E,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,eAA0B,IAAI6I,EAClB,UACC,GACC,OACE,UACEhE,EAASK,IACV,EACG,IAAI,KACpB5E,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,eAA0B,IAAI6I,EAClB,UACC,GACC,OACE,UACEhE,EAASK,IACV,EACG,IAAI,KACpB5E,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,gBAA2B,IAAI6I,EACnB,WACC,GACC,QACE,WACEhE,EAASK,IACV,EACG,IAAI,KACpB5E,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,eAA0B,IAAI6I,EAClB,UACC,GACC,OACE,UACEhE,EAASK,IACV,EACG,IAAI,KACpB5E,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,GACC,OACE,SACEhE,EAASU,IACV,EACG,IAAI,KACpBjF,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,GACC,OACE,SACEhE,EAASU,IACV,EACG,IAAI,KACpBjF,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,GACC,OACE,SACEhE,EAASU,IACV,EACG,IAAI,KACpBjF,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,eAA0B,IAAI6I,EAClB,UACC,GACC,OACE,UACEhE,EAASU,IACV,EACG,IAAI,KACpBjF,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,iBAA4B,IAAI6I,EACpB,WACC,GACC,SACE,WACEhE,EAASU,IACV,EACG,IAAI,KACpBjF,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,uBAAkC,IAAI6I,EAC1B,kBACC,GACC,eACE,kBACEhE,EAASU,IACV,EACG,IAAI,KACpBjF,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,kBAA6B,IAAI6I,EACrB,aACC,GACC,UACE,aACEhE,EAASU,IACV,EACG,IAAI,KACpBjF,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,kBAA6B,IAAI6I,EACrB,aACC,GACC,UACE,aACEhE,EAASU,IACV,EACG,IAAI,KACpBjF,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,GACC,OACE,SACEhE,EAASc,IACV,EACG,IAAI,KACpBrF,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,GACC,OACE,QACEhE,EAASe,IACV,EACG,IAAI,KACpBtF,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,GACC,OACE,SACEhE,EAASQ,IACV,EACG,IAAI,KACpB/E,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,GACC,OACE,SACEhE,EAASkB,IACV,EACG,IAAI,KACpBzF,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,GACC,eACE,SACEhE,EAASmB,IACV,EACG,IAAI,KACpB1F,EAASU,cACTV,EAASW,mBACTX,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,GACC,OACE,SACEhE,EAASmB,IACV,EACG,IAAI,KACpB1F,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,IACC,OACE,SACEhE,EAASqB,IACV,EACG,IAAI,KACpB5F,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,IACC,OACE,SACEhE,EAASE,IACV,EACG,IAAI,KACpBzE,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,IACC,OACE,SACEhE,EAAS0B,IACV,EACG,IAAI,KACpBjG,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,IACC,OACE,SACEhE,EAASuB,IACV,EACG,IAAI,KACpB9F,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,IACC,OACE,SACEhE,EAASG,IACV,EACG,IAAI,KACpB1E,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,IACC,OACE,SACEhE,EAASsB,IACV,EACG,IAAI,KACpB7F,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,IACC,OACE,QACEhE,EAASM,IACV,EACG,IAAI,KACpB7E,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,IACC,OACE,SACEhE,EAASgB,IACV,EACG,IAAI,KACpBvF,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,IACC,gBACE,SACEhE,EAASW,IACV,EACG,IAAI,KACpBlF,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,IACC,OACE,SACEhE,EAASiB,IACV,EACG,IAAI,KACpBxF,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,IACC,OACE,SACEhE,EAASiB,IACV,EACG,IAAI,KACpBxF,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,IACC,OACE,SACEhE,EAASa,IACV,EACG,IAAI,KACpBpF,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,eAA0B,IAAI6I,EAClB,UACC,IACC,SACE,SACEhE,EAASyB,IACV,EACG,IAAI,KACpBhG,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,eAA0B,IAAI6I,EAClB,UACC,IACC,SACE,UACEhE,EAASyB,IACV,EACG,IAAI,KACpBhG,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,iBAA4B,IAAI6I,EACpB,YACC,GACC,SACE,SACEhE,EAASO,IACV,EACG,IAAI,KACpB9E,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,wBAAmC,IAAI6I,EAC3B,mBACC,GACC,kBACE,gBACEhE,EAASO,IACV,EACG,IAAI,KAAK9E,EAASc,SAEtCpB,iBAA4B,IAAI6I,EACpB,YACC,IACC,SACE,SACEhE,EAASO,IACV,EACG,IAAI,KACpB9E,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,iBAA4B,IAAI6I,EACpB,YACC,IACC,SACE,SACEhE,EAASO,IACV,EACG,IAAI,KACpB9E,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,IACC,aACE,SACEhE,EAASC,IACV,EACG,IAAI,KACpBxE,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,iBAA4B,IAAI6I,EACpB,YACC,IACC,aACE,SACEhE,EAASC,IACV,EACG,IAAI,KACpBxE,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,oBAA+B,IAAI6I,EACvB,eACC,IACC,iCACE,UACEhE,EAASS,IACV,EACG,IAAI,KACpBhF,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,kBAA6B,IAAI6I,EACrB,aACC,IACC,cACE,cACEhE,EAASW,IACV,EACG,IAAI,KACpBlF,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,IACC,qCACE,UACEhE,EAASS,IACV,EACG,IAAI,KACpBhF,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,iBAA4B,IAAI6I,EACpB,YACC,IACC,SACE,YACEhE,EAASO,IACV,EACG,IAAI,KACpB9E,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,gBAA2B,IAAI6I,EACnB,WACC,IACC,QACE,QACEhE,EAASO,IACV,EACG,IAAI,KACpB9E,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,uBAAkC,IAAI6I,EAC1B,kBACC,IACC,iBACE,eACEhE,EAASO,IACV,EACG,IAAI,KAAK9E,EAASc,SAEtCpB,yBAAoC,IAAI6I,EAC5B,oBACC,IACC,iBACE,iBACEhE,EAASO,IACV,EACG,IAAI,KACpB9E,EAASc,OACTd,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,eAGbb,iBAA4B,IAAI6I,EACpB,YACC,IACC,SACE,SACEhE,EAASO,IACV,EACG,IAAI,KAAK9E,EAASc,SAEtCpB,aAAwB,IAAI6I,EAChB,QACC,IACC,OACE,SACEhE,EAASQ,IACV,EACG,IAAI,KACpB/E,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,eAA0B,IAAI6I,EAClB,UACC,IACC,OACE,OACEhE,EAASkB,IACV,EACG,IAAI,KACpBzF,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,mBAA8B,IAAI6I,EACtB,cACC,IACC,WACE,cACEhE,EAASO,IACV,EACG,IAAI,KACpB9E,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,IACC,gBACE,QACEhE,EAASwB,IACV,EACG,IAAI,KACpB/F,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,cAAyB,IAAI6I,EACjB,YACC,IACC,kBACE,YACEhE,EAASwB,IACV,EACG,IAAI,KACpB/F,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,cAAyB,IAAI6I,EACjB,YACC,IACC,qBACE,YACEhE,EAASwB,IACV,EACG,IAAI,KACpB/F,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,gBAA2B,IAAI6I,EACnB,cACC,IACC,QACE,QACEhE,EAASgB,IACV,EACG,IAAI,KACpBvF,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,gBAA2B,IAAI6I,EACnB,cACC,IACC,QACE,QACEhE,EAASgB,IACV,EACG,IAAI,KACpBvF,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,iBAA4B,IAAI6I,EACpB,eACC,IACC,SACE,SACEhE,EAASgB,IACV,EACG,IAAI,KACpBvF,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,aAAwB,IAAI6I,EAChB,QACC,IACC,OACE,SACEhE,EAASoB,IACV,EACG,IAAI,KACpB3F,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,kBAA6B,IAAI6I,EACrB,aACC,IACC,UACE,UACEhE,EAASO,IACV,EACG,IAAI,KACpB9E,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,yBAAoC,IAAI6I,EAC5B,oBACC,IACC,mBACE,iBACEhE,EAASO,IACV,EACG,IAAI,KAAK9E,EAASc,SAEtCpB,gCAA2C,IAAI6I,EACnC,2BACC,IACC,iCACE,2BACEhE,EAASO,IACV,EACG,IAAI,KAAK9E,EAASc,SAEtCpB,iBAA4B,IAAI6I,EACpB,WACC,IACC,QACE,WACEhE,EAASO,IACV,EACG,IAAI,KACpB9E,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,gBAA2B,IAAI6I,EACnB,WACC,IACC,QACE,QACEhE,EAASO,IACV,EACG,IAAI,KACpB9E,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGbpB,uBAAkC,IAAI6I,EAC1B,kBACC,IACC,eACE,UACEhE,EAASK,IACV,EACG,IAAI,KAAK5E,EAASc,SAEtCpB,aAAwB,IAAI6I,EAChB,QACC,IACC,OACE,SACEhE,EAASI,IACV,EACG,IAAI,KACpB3E,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGbpB,qBAAgC,IAAI6I,EACxB,gBACC,IACC,sBACE,UACEhE,EAASO,IACV,EACG,IAAI,KAAK9E,EAASc,SAEtCpB,sBAAiC,IAAI6I,EACzB,iBACC,IACC,uBACE,UACEhE,EAASO,IACV,EACG,IAAI,KAAK9E,EAASc,SAEtCpB,uBAAkC,IAAI6I,EAC1B,kBACC,IACC,iBACE,QACEhE,EAASO,IACV,EACG,IAAI,KAAK9E,EAASc,SAEtCpB,gBAA2B,IAAI6I,EACnB,WACC,IACC,QACE,QACEhE,EAASO,IACV,EACG,IAAI,KACpB9E,EAASc,OACTd,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,eAIbb,WAAsB,IAAI,KACxB6I,EAAOje,MACPie,EAAOK,UACPL,EAAOM,eACPN,EAAOO,WACPP,EAAOQ,mBACPR,EAAOS,wBACPT,EAAOU,kBACPV,EAAOW,uBACPX,EAAOY,qBACP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","sources":["webpack://tastatur.com/./packages/mkboard-widget/lib/components/toast/ErrorAlert.tsx","webpack://tastatur.com/./packages/mkboard-keyboard-io/lib/parser/parse-cldr-browser.ts","webpack://tastatur.com/./packages/mkboard-keyboard-io/lib/keys.ts","webpack://tastatur.com/./packages/mkboard-keyboard-io/lib/parser/diacritics.ts","webpack://tastatur.com/./packages/mkboard-keyboard-io/lib/layoutbuilder.ts","webpack://tastatur.com/./packages/mkboard-keyboard-io/lib/parser/parse-keymap.ts","webpack://tastatur.com/./packages/mkboard-keyboard-io/lib/parser/parse-klc.ts","webpack://tastatur.com/./packages/mkboard-keyboard-io/lib/text.ts","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/custom/context.tsx","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/Key.module.less?9b0d","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/shapes.tsx","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/Key.tsx","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/KeyLayer.tsx","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/VirtualKeyboard.tsx","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/VirtualKeyboard.module.less?91b0","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/custom/CharacterInfo.module.less?b85a","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/custom/CharacterInfo.tsx","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/custom/ModifierInfo.tsx","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/custom/KeyDetails.tsx","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/custom/LayoutJson.tsx","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/custom/LayoutTable.module.less?c4fe","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/custom/LayoutTable.tsx","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/custom/LayoutView.tsx","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/custom/LiveInputInfo.tsx","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/custom/LiveImport.tsx","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/custom/CustomLayoutDesigner.tsx","webpack://tastatur.com/./packages/mkboard-keyboard-io/lib/import.ts","webpack://tastatur.com/./packages/mkboard-keyboard-io/lib/export.ts","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/HeatmapLayer.module.less?c0d4","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/HeatmapLayer.tsx","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/KeyboardStats.tsx","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/PointersLayer.module.less?a165","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/PointersLayer.tsx","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/TransitionsLayer.module.less?e863","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/TransitionsLayer.tsx","webpack://tastatur.com/./packages/mkboard-keyboard-ui/lib/ZonesLayer.tsx","webpack://tastatur.com/./packages/mkboard-keyboard/lib/geometry/mod.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/geometry.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/geometry/ansi_101.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/geometry/extra.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/geometry/ansi_101_full.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/geometry/brazilian_104.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/geometry/brazilian_104_full.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/geometry/iso_102.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/geometry/iso_102_full.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/geometry/japanese_106.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/geometry/japanese_106_full.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/geometry/korean_103.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/geometry/korean_103_full.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/keymodifier.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/keycharacters.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/keycombo.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/keyshape.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/language.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/keyboard.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/mod.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/settings.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/load.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/ar_sa.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/ar_sa_102.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/be_by.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/cs_cz.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/da_dk.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/de_bone.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/de_ch.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/de_cmos.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/de_de.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/de_mine.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/de_neo_2.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/de_noted.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/el_gr.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_canary.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_canary_matrix.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_colemak.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_colemak_dh_ansi.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_colemak_dh_ansi_wide.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_colemak_dh_iso.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_colemak_dh_iso_wide.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_colemak_dh_matrix.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_dvorak.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_dvorak_prog.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_engram.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_enthium_v6.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_enthium_v10.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_focal.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_gallium.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_gallium_matrix.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_graphite.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_halmak.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_hands_down_neu.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_hands_down_promethium.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_mtgap.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/ja_jp_jis.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_nerps.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_nerps_matrix.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_night_matrix.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_norman.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_sturdy.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_aptv3.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_uk.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_us.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/en_workman.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/es_es.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/es_mx.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/fa_ir.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/fa_ir_legacy.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/fr_bepo.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/fr_ca.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/fr_ch.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/fr_erglace.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/fr_ergo_l.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/fr_ergopti.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/fr_fr.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/fr_optimot_ergo.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/he_il.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/he_il_arkn.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/hu_hu.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/it_it.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/lt_lt.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/nb_kvikk.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/nb_no.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/nb_skarp.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/nb_dvorak.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/nl_be.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/nl_nl.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/pl_fwyr.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/pl_pl.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/pt_br.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/pt_pt.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/ro_ro.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/ru_ru.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/sl_si.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/sv_se.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/th_th_man.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/th_th_pat.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/th_th.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/tr_tr_f.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/tr_tr_q.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/uk_ua.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/layout/de_adnw_but_xcv.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/geometry/matrix.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/context.tsx","webpack://tastatur.com/./packages/mkboard-keyboard/lib/filter.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/ngram.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/stats.ts","webpack://tastatur.com/./packages/mkboard-keyboard/lib/use-formatted-names.ts","webpack://tastatur.com/./packages/mkboard-widget/lib/hooks/use-hotkeys.ts","webpack://tastatur.com/./packages/mkboard-widget/lib/components/text/NameValue.module.less?151d","webpack://tastatur.com/./packages/mkboard-widget/lib/components/text/NameValue.tsx","webpack://tastatur.com/./packages/mkboard-widget/lib/components/text/Spacer.module.less?fab2","webpack://tastatur.com/./packages/mkboard-widget/lib/components/text/Spacer.tsx","webpack://tastatur.com/./packages/mkboard-widget/lib/components/optionlist/OptionListButton.module.less?b40f","webpack://tastatur.com/./packages/mkboard-widget/lib/components/optionlist/OptionListButton.tsx","webpack://tastatur.com/./packages/mkboard-widget/lib/components/optionlist/OptionListMenu.module.less?9eb1","webpack://tastatur.com/./packages/mkboard-widget/lib/components/optionlist/OptionListMenu.tsx","webpack://tastatur.com/./packages/mkboard-widget/lib/components/optionlist/OptionList.tsx","webpack://tastatur.com/./packages/mkboard-rand/lib/sample.ts","webpack://tastatur.com/./packages/mkboard-unicode/lib/codepoints.ts","webpack://tastatur.com/./packages/mkboard-unicode/lib/diacritics.ts","webpack://tastatur.com/./packages/mkboard-unicode/lib/format.ts","webpack://tastatur.com/./packages/mkboard-unicode/lib/normalize.ts","webpack://tastatur.com/./packages/mkboard-unicode/lib/whitespace.ts","webpack://tastatur.com/./packages/mkboard-unicode/lib/textstats.ts","webpack://tastatur.com/./packages/mkboard-widget/lib/components/button/Button.module.less?7584","webpack://tastatur.com/./packages/mkboard-widget/lib/components/button/Button.tsx","webpack://tastatur.com/./packages/mkboard-widget/lib/components/tablist/TabList.module.less?f99e","webpack://tastatur.com/./packages/mkboard-widget/lib/components/tablist/TabList.tsx","webpack://tastatur.com/./packages/mkboard-widget/lib/styles/size.ts","webpack://tastatur.com/./packages/mkboard-widget/lib/styles/size.module.less?6411","webpack://tastatur.com/./packages/mkboard-widget/lib/components/fieldlist/FieldList.module.less?59f8","webpack://tastatur.com/./packages/mkboard-widget/lib/components/fieldlist/FieldList.tsx","webpack://tastatur.com/./packages/mkboard-phonetic-model/lib/Alphabet.tsx","webpack://tastatur.com/./packages/mkboard-phonetic-model/lib/letter.ts","webpack://tastatur.com/./packages/mkboard-phonetic-model/lib/transitiontable.ts","webpack://tastatur.com/./packages/mkboard-phonetic-model/lib/blacklist/scramble.ts","webpack://tastatur.com/./packages/mkboard-phonetic-model/lib/blacklist/blacklist.ts","webpack://tastatur.com/./packages/mkboard-phonetic-model/lib/phoneticmodel.ts","webpack://tastatur.com/./packages/mkboard-phonetic-model/lib/censor.ts","webpack://tastatur.com/./packages/mkboard-phonetic-model/lib/context.ts","webpack://tastatur.com/./packages/mkboard-phonetic-model/lib/fake.ts","webpack://tastatur.com/./packages/mkboard-rand/lib/rng/fake.ts","webpack://tastatur.com/./packages/mkboard-phonetic-model/lib/filter.ts","webpack://tastatur.com/./packages/mkboard-widget/lib/components/textfield/TextField.module.less?7fef","webpack://tastatur.com/./packages/mkboard-widget/lib/components/textfield/TextField.tsx","webpack://tastatur.com/./packages/mkboard-binary/lib/errors.ts","webpack://tastatur.com/./packages/mkboard-binary/lib/util.ts","webpack://tastatur.com/./packages/mkboard-binary/lib/io.ts","webpack://tastatur.com/./packages/mkboard-binary/lib/utf8.ts","webpack://tastatur.com/./packages/mkboard-binary/lib/crc32.ts","webpack://tastatur.com/./packages/mkboard-binary/lib/secret.ts"],"sourcesContent":["import { Alert } from \"./Alert.tsx\";\nimport { toast } from \"./Toaster.tsx\";\n\nexport function ErrorAlert({ error }: { readonly error: unknown }) {\n  return (\n    <Alert severity=\"error\">\n      {error instanceof AggregateError ? (\n        error.errors.map((child, index) => <p key={index}>{String(child)}</p>)\n      ) : (\n        <p>{String(error)}</p>\n      )}\n    </Alert>\n  );\n}\n\nErrorAlert.report = (error: unknown) => {\n  toast(<ErrorAlert error={error} />);\n};\n","import { type ParseResult } from \"./types.ts\";\n\nexport function parseCldr(text: string): ParseResult {\n  throw new Error();\n}\n","import { type KeyId } from \"@mkboard/keyboard\";\r\n\r\n/**\r\n * These values correspond to the `KeyboardEvent.code` attribute and describe\r\n * physical key locations.\r\n *\r\n * @see https://www.w3.org/TR/uievents-code\r\n */\r\nexport const characterKeys: readonly KeyId[] = [\r\n  // ---\r\n  \"Backquote\",\r\n  \"Digit1\",\r\n  \"Digit2\",\r\n  \"Digit3\",\r\n  \"Digit4\",\r\n  \"Digit5\",\r\n  \"Digit6\",\r\n  \"Digit7\",\r\n  \"Digit8\",\r\n  \"Digit9\",\r\n  \"Digit0\",\r\n  \"Minus\",\r\n  \"Equal\",\r\n  \"IntlYen\",\r\n  // ---\r\n  \"KeyQ\",\r\n  \"KeyW\",\r\n  \"KeyE\",\r\n  \"KeyR\",\r\n  \"KeyT\",\r\n  \"KeyY\",\r\n  \"KeyU\",\r\n  \"KeyI\",\r\n  \"KeyO\",\r\n  \"KeyP\",\r\n  \"BracketLeft\",\r\n  \"BracketRight\",\r\n  \"Backslash\",\r\n  // ---\r\n  \"KeyA\",\r\n  \"KeyS\",\r\n  \"KeyD\",\r\n  \"KeyF\",\r\n  \"KeyG\",\r\n  \"KeyH\",\r\n  \"KeyJ\",\r\n  \"KeyK\",\r\n  \"KeyL\",\r\n  \"Semicolon\",\r\n  \"Quote\",\r\n  // ---\r\n  \"IntlBackslash\",\r\n  \"KeyZ\",\r\n  \"KeyX\",\r\n  \"KeyC\",\r\n  \"KeyV\",\r\n  \"KeyB\",\r\n  \"KeyN\",\r\n  \"KeyM\",\r\n  \"Comma\",\r\n  \"Period\",\r\n  \"Slash\",\r\n  \"IntlRo\",\r\n  // ---\r\n  \"Space\",\r\n  \"Tab\",\r\n  \"CapsLock\",\r\n  // --- Those are virtual keys mapped to physical keys by keyboard firmware.\r\n  \"ThumbClusterLeft1\",\r\n  \"ThumbClusterLeft2\",\r\n  \"ThumbClusterRight1\",\r\n  \"ThumbClusterRight2\",\r\n];\r\n","import { type Character, type DeadCharacter } from \"@mkboard/keyboard\";\r\nimport { type CodePoint, formatCodePoint } from \"@mkboard/unicode\";\r\nimport { type ParseResult } from \"./types.ts\";\r\n\r\nconst forwardMap = new Map([\r\n  [/* GRAVE ACCENT */ 0x0060, /* COMBINING GRAVE ACCENT */ 0x0300],\r\n  [/* ACUTE ACCENT */ 0x00b4, /* COMBINING ACUTE ACCENT */ 0x0301],\r\n  [/* CIRCUMFLEX ACCENT */ 0x005e, /* COMBINING CIRCUMFLEX ACCENT */ 0x0302],\r\n  [/* TILDE */ 0x007e, /* COMBINING TILDE */ 0x0303],\r\n  [/* MACRON */ 0x00af, /* COMBINING MACRON */ 0x0304],\r\n  [/* BREVE */ 0x02d8, /* COMBINING BREVE */ 0x0306],\r\n  [/* DOT ABOVE */ 0x02d9, /* COMBINING DOT ABOVE */ 0x0307],\r\n  [/* DIAERESIS */ 0x00a8, /* COMBINING DIAERESIS */ 0x0308],\r\n  [/* DEGREE SIGN */ 0x00b0, /* COMBINING RING ABOVE */ 0x030a],\r\n  [/* DOUBLE ACUTE ACCENT */ 0x02dd, /* COMBINING DOUBLE ACUTE ACCENT */ 0x030b],\r\n  [/* CARON */ 0x02c7, /* COMBINING CARON */ 0x030c],\r\n  [/* MODIFIER LETTER LOW GRAVE ACCENT */ 0x02ce, /* COMBINING GRAVE ACCENT BELOW */ 0x0316],\r\n  [/* MODIFIER LETTER LOW ACUTE ACCENT */ 0x02cf, /* COMBINING ACUTE ACCENT BELOW */ 0x0317],\r\n  [/* CEDILLA */ 0x00b8, /* COMBINING CEDILLA */ 0x0327],\r\n  [/* OGONEK */ 0x02db, /* COMBINING OGONEK */ 0x0328],\r\n  [/* GREEK TONOS */ 0x0384, /* COMBINING ACUTE ACCENT */ 0x0301],\r\n]);\r\n\r\nconst reverseMap = new Map([...forwardMap].map(([key, value]) => [value, key]));\r\n\r\nexport const makeDeadCharacter = (result: ParseResult, key: string, codePoint: CodePoint): Character | null => {\r\n  if (codePoint === /* \"*\" */ 0x002a) {\r\n    return { dead: codePoint };\r\n  }\r\n  const dead = forwardMap.get(codePoint);\r\n  if (dead != null) {\r\n    return { dead };\r\n  }\r\n  result.warnings.push(`[${key}] Invalid dead character: ${formatCodePoint(codePoint)}`);\r\n  return null;\r\n};\r\n\r\nexport const formatDeadCharacter = ({ dead }: DeadCharacter) => {\r\n  if (dead === /* \"*\" */ 0x002a) {\r\n    return \"**\";\r\n  }\r\n  const codePoint = reverseMap.get(dead);\r\n  if (codePoint != null) {\r\n    return String.fromCodePoint(/* \"*\" */ 0x002a, codePoint);\r\n  }\r\n  return dead;\r\n};\r\n","import {\r\n  type Character,\r\n  type CharacterDict,\r\n  KeyCharacters,\r\n  type KeyId,\r\n  KeyModifier,\r\n} from \"@mkboard/keyboard\";\r\nimport { isDiacritic } from \"@mkboard/unicode\";\r\nimport { type CharacterList, type KeyMap } from \"./json.ts\";\r\nimport { characterKeys } from \"./keys.ts\";\r\nimport { formatDeadCharacter } from \"./parser/diacritics.ts\";\r\n\r\nexport class LayoutBuilder implements Iterable<KeyCharacters> {\r\n  static isKey(key: KeyId): boolean {\r\n    return characterKeys.includes(key);\r\n  }\r\n\r\n  static allKeys(): readonly KeyId[] {\r\n    return characterKeys;\r\n  }\r\n\r\n  static from(dict: CharacterDict): LayoutBuilder {\r\n    const builder = new LayoutBuilder();\r\n    for (const [\r\n      key,\r\n      [a = null, b = null, c = null, d = null],\r\n    ] of Object.entries(dict)) {\r\n      builder.setAll(key, a, b, c, d);\r\n    }\r\n    return builder;\r\n  }\r\n\r\n  readonly #data = new Map<KeyId, KeyCharacters>();\r\n\r\n  constructor(that: LayoutBuilder | null = null) {\r\n    if (that != null) {\r\n      for (const character of that) {\r\n        this.set(character);\r\n      }\r\n    }\r\n  }\r\n\r\n  *[Symbol.iterator](): IterableIterator<KeyCharacters> {\r\n    for (const key of characterKeys) {\r\n      const characters = this.#data.get(key);\r\n      if (characters != null && characters.valid) {\r\n        yield characters;\r\n      }\r\n    }\r\n  }\r\n\r\n  get size(): number {\r\n    return this.#data.size;\r\n  }\r\n\r\n  get(key: KeyId): KeyCharacters | null {\r\n    if (!LayoutBuilder.isKey(key)) {\r\n      throw new TypeError(key);\r\n    }\r\n    return this.#data.get(key) ?? null;\r\n  }\r\n\r\n  set(characters: KeyCharacters) {\r\n    const { id } = characters;\r\n    if (!LayoutBuilder.isKey(id)) {\r\n      throw new TypeError(id);\r\n    }\r\n    this.#data.set(id, characters);\r\n    return this;\r\n  }\r\n\r\n  getOne(key: KeyId, mod: KeyModifier): Character | null {\r\n    const { a = null, b = null, c = null, d = null } = this.get(key) ?? {};\r\n    switch (mod) {\r\n      case KeyModifier.None:\r\n        return a;\r\n      case KeyModifier.Shift:\r\n        return b;\r\n      case KeyModifier.Alt:\r\n        return c;\r\n      case KeyModifier.ShiftAlt:\r\n        return d;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  setOne(key: KeyId, mod: KeyModifier, character: Character | null) {\r\n    const { a = null, b = null, c = null, d = null } = this.get(key) ?? {};\r\n    switch (mod) {\r\n      case KeyModifier.None:\r\n        this.set(new KeyCharacters(key, fix(character), b, c, d));\r\n        break;\r\n      case KeyModifier.Shift:\r\n        this.set(new KeyCharacters(key, a, fix(character), c, d));\r\n        break;\r\n      case KeyModifier.Alt:\r\n        this.set(new KeyCharacters(key, a, b, fix(character), d));\r\n        break;\r\n      case KeyModifier.ShiftAlt:\r\n        this.set(new KeyCharacters(key, a, b, c, fix(character)));\r\n        break;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  setAll(\r\n    key: KeyId,\r\n    a: Character | null,\r\n    b: Character | null,\r\n    c: Character | null,\r\n    d: Character | null,\r\n  ) {\r\n    this.setOne(key, KeyModifier.None, a);\r\n    this.setOne(key, KeyModifier.Shift, b);\r\n    this.setOne(key, KeyModifier.Alt, c);\r\n    this.setOne(key, KeyModifier.ShiftAlt, d);\r\n    return this;\r\n  }\r\n\r\n  dict(): CharacterDict {\r\n    const dict: { [id: KeyId]: (Character | null)[] } = {};\r\n    for (const { id, a, b, c, d } of this) {\r\n      dict[id] = [a, b, c, d];\r\n    }\r\n    return dict;\r\n  }\r\n\r\n  toJSON(): KeyMap {\r\n    const keymap: { [id: KeyId]: CharacterList } = {};\r\n    for (const { id, a, b, c, d } of this) {\r\n      const list = [a, b, c, d];\r\n      while (list.length > 0 && list.at(-1) == null) {\r\n        list.pop();\r\n      }\r\n      if (list.every((character) => KeyCharacters.isCodePoint(character))) {\r\n        keymap[id] = String.fromCodePoint(...list);\r\n      } else {\r\n        keymap[id] = list.map((character) => {\r\n          if (KeyCharacters.isCodePoint(character)) {\r\n            return String.fromCodePoint(character);\r\n          }\r\n          if (KeyCharacters.isDead(character)) {\r\n            return formatDeadCharacter(character);\r\n          }\r\n          if (KeyCharacters.isSpecial(character)) {\r\n            return character.special;\r\n          }\r\n          return character;\r\n        });\r\n      }\r\n    }\r\n    return keymap;\r\n  }\r\n}\r\n\r\nfunction fix(character: Character | null): Character | null {\r\n  if (KeyCharacters.isCodePoint(character)) {\r\n    switch (character) {\r\n      case /* ZERO WIDTH NON-JOINER */ 0x200c:\r\n      case /* ZERO WIDTH JOINER */ 0x200d:\r\n      case /* LEFT-TO-RIGHT MARK */ 0x200e:\r\n      case /* RIGHT-TO-LEFT MARK */ 0x200f:\r\n      case /* COMBINING GRAPHEME JOINER */ 0x034f:\r\n        return { special: character };\r\n    }\r\n    if (isDiacritic(character)) {\r\n      return { dead: character };\r\n    }\r\n  }\r\n  return character;\r\n}\r\n","import { KeyCharacters, type KeyId, KeyModifier } from \"@mkboard/keyboard\";\r\nimport { toCodePoints } from \"@mkboard/unicode\";\r\nimport { LayoutBuilder } from \"../layoutbuilder.ts\";\r\nimport { makeDeadCharacter } from \"./diacritics.ts\";\r\nimport { type ParseResult } from \"./types.ts\";\r\n\r\nexport function parseKeymap(text: string): ParseResult {\r\n  const result: ParseResult = { layout: new LayoutBuilder(), warnings: [] };\r\n  for (const [key, list] of Object.entries(JSON.parse(text))) {\r\n    if (LayoutBuilder.isKey(key)) {\r\n      parseCharacterList(result, key, list);\r\n    } else {\r\n      result.warnings.push(`Unknown key: ${key}`);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction parseCharacterList(result: ParseResult, key: KeyId, list: unknown) {\r\n  const { layout, warnings } = result;\r\n  if (typeof list === \"string\") {\r\n    list = [...toCodePoints(list)];\r\n  }\r\n  if (Array.isArray(list)) {\r\n    const [a = null, b = null, c = null, d = null] = list;\r\n    layout.setOne(key, KeyModifier.None, parseCharacter(a));\r\n    layout.setOne(key, KeyModifier.Shift, parseCharacter(b));\r\n    layout.setOne(key, KeyModifier.Alt, parseCharacter(c));\r\n    layout.setOne(key, KeyModifier.ShiftAlt, parseCharacter(d));\r\n  } else {\r\n    warnings.push(`[${key}] Invalid character list: ${list}`);\r\n  }\r\n\r\n  function parseCharacter(character: unknown) {\r\n    if (character) {\r\n      if (\r\n        KeyCharacters.isCodePoint(character) ||\r\n        KeyCharacters.isDead(character) ||\r\n        KeyCharacters.isSpecial(character) ||\r\n        KeyCharacters.isLigature(character)\r\n      ) {\r\n        return character;\r\n      }\r\n      if (typeof character === \"string\") {\r\n        const a = [...toCodePoints(character)];\r\n        if (a.length === 0) {\r\n          return null;\r\n        }\r\n        if (a.length === 1) {\r\n          return a[0];\r\n        }\r\n        if (a.length === 2 && a[0] === /* \"*\" */ 0x002a) {\r\n          return makeDeadCharacter(result, key, a[1]);\r\n        }\r\n      }\r\n      warnings.push(`[${key}] Invalid character: ${character}`);\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","/**\r\n * Parses layout definitions created by Keyboard Layout Creator.\r\n */\r\n\r\nimport { type Character, type KeyId, KeyModifier } from \"@mkboard/keyboard\";\r\nimport { LayoutBuilder } from \"../layoutbuilder.ts\";\r\nimport { makeDeadCharacter } from \"./diacritics.ts\";\r\nimport { type ParseResult } from \"./types.ts\";\r\n\r\nexport function parseKlc(text: string): ParseResult {\r\n  const result: ParseResult = { layout: new LayoutBuilder(), warnings: [] };\r\n  parse(text, {\r\n    result,\r\n    shiftstate: [],\r\n    altgr: false,\r\n    SC_to_VK: {},\r\n    VK_to_SC: {},\r\n  });\r\n  return result;\r\n}\r\n\r\ntype ParserState = {\r\n  result: ParseResult;\r\n  shiftstate: number[];\r\n  altgr: boolean;\r\n  SC_to_VK: Record<string, string>;\r\n  VK_to_SC: Record<string, string>;\r\n};\r\n\r\nconst enum Section {\r\n  INIT,\r\n  KBD,\r\n  ATTRIBUTES,\r\n  SHIFTSTATE,\r\n  LAYOUT,\r\n  LIGATURE,\r\n  DEADKEY,\r\n  KEYNAME,\r\n  KEYNAME_EXT,\r\n  KEYNAME_DEAD,\r\n  DESCRIPTIONS,\r\n  LANGUAGENAMES,\r\n  ENDKBD,\r\n}\r\n\r\nfunction parse(text: string, state: ParserState) {\r\n  let section = Section.INIT;\r\n  for (const line0 of text.split(\"\\n\")) {\r\n    const line = stripComments(line0).trim();\r\n    if (line) {\r\n      if (/^KBD/.test(line)) {\r\n        section = Section.KBD;\r\n        continue;\r\n      }\r\n      if (\r\n        /^COPYRIGHT\\s+/.test(line) ||\r\n        /^COMPANY\\s+/.test(line) ||\r\n        /^LOCALEID\\s+/.test(line) ||\r\n        /^LOCALENAME\\s+/.test(line) ||\r\n        /^VERSION\\s+/.test(line)\r\n      ) {\r\n        continue;\r\n      }\r\n      if (/^ATTRIBUTES/.test(line)) {\r\n        section = Section.ATTRIBUTES;\r\n        continue;\r\n      }\r\n      if (/^SHIFTSTATE/.test(line)) {\r\n        section = Section.SHIFTSTATE;\r\n        continue;\r\n      }\r\n      if (/^LAYOUT/.test(line)) {\r\n        section = Section.LAYOUT;\r\n        continue;\r\n      }\r\n      if (/^LIGATURE/.test(line)) {\r\n        section = Section.LIGATURE;\r\n        continue;\r\n      }\r\n      if (/^DEADKEY/.test(line)) {\r\n        section = Section.DEADKEY;\r\n        continue;\r\n      }\r\n      if (/^KEYNAME/.test(line)) {\r\n        section = Section.KEYNAME;\r\n        continue;\r\n      }\r\n      if (/^KEYNAME_EXT/.test(line)) {\r\n        section = Section.KEYNAME_EXT;\r\n        continue;\r\n      }\r\n      if (/^KEYNAME_DEAD/.test(line)) {\r\n        section = Section.KEYNAME_DEAD;\r\n        continue;\r\n      }\r\n      if (/^DESCRIPTIONS/.test(line)) {\r\n        section = Section.DESCRIPTIONS;\r\n        continue;\r\n      }\r\n      if (/^LANGUAGENAMES/.test(line)) {\r\n        section = Section.LANGUAGENAMES;\r\n        continue;\r\n      }\r\n      if (/^ENDKBD/.test(line)) {\r\n        section = Section.ENDKBD;\r\n        continue;\r\n      }\r\n      switch (section) {\r\n        case Section.ATTRIBUTES:\r\n          ATTRIBUTES(state, line);\r\n          break;\r\n        case Section.SHIFTSTATE:\r\n          SHIFTSTATE(state, line);\r\n          break;\r\n        case Section.LAYOUT:\r\n          LAYOUT(state, line);\r\n          break;\r\n        case Section.LIGATURE:\r\n          LIGATURE(state, line);\r\n          break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction ATTRIBUTES(state: ParserState, line: string) {\r\n  if (line === \"ALTGR\") {\r\n    state.altgr = true;\r\n  }\r\n}\r\n\r\nfunction SHIFTSTATE(state: ParserState, line: string) {\r\n  state.shiftstate.push(Number(line));\r\n}\r\n\r\nfunction LAYOUT(state: ParserState, line: string) {\r\n  const [SC, VK, CAP, ...arg] = line.split(/\\s+/);\r\n  const key = toKeyId[SC];\r\n  if (key != null) {\r\n    const characters = [...arg.map((v) => parseCodePoint(state, key, v))];\r\n    for (let i = 0; i < characters.length; i++) {\r\n      const mod = modifier(state.shiftstate[i]);\r\n      const character = characters[i];\r\n      if (mod != null) {\r\n        state.result.layout.setOne(key, mod, character);\r\n      }\r\n    }\r\n    if (state.SC_to_VK[SC] != null) {\r\n      state.result.warnings.push(`[${key}] Duplicate SC: ${SC}`);\r\n    }\r\n    if (state.VK_to_SC[VK] != null) {\r\n      state.result.warnings.push(`[${key}] Duplicate VK: ${VK}`);\r\n    }\r\n    state.SC_to_VK[SC] = VK;\r\n    state.VK_to_SC[VK] = SC;\r\n  }\r\n}\r\n\r\nfunction LIGATURE(state: ParserState, line: string) {\r\n  const [VK, MOD, ...arg] = line.split(/\\s+/);\r\n  const SC = state.VK_to_SC[VK];\r\n  const key = toKeyId[SC];\r\n  if (key != null) {\r\n    const ligature = String.fromCodePoint(\r\n      ...arg.map((v) => Number.parseInt(v, 16)),\r\n    );\r\n    const mod = modifier(state.shiftstate[Number(MOD)]);\r\n    if (mod != null) {\r\n      state.result.layout.setOne(key, mod, { ligature });\r\n    }\r\n  }\r\n}\r\n\r\nfunction stripComments(line: string): string {\r\n  let s = false;\r\n  for (let i = 0; i < line.length; i++) {\r\n    const ch = line.charAt(i);\r\n    switch (s) {\r\n      case false:\r\n        if (ch === '\"') {\r\n          s = true;\r\n          continue;\r\n        }\r\n        if (ch === \";\") {\r\n          return line.substring(0, i);\r\n        }\r\n        if (ch === \"/\" && line.charAt(i + 1) === \"/\") {\r\n          return line.substring(0, i);\r\n        }\r\n        break;\r\n      case true:\r\n        if (ch === '\"') {\r\n          s = false;\r\n          continue;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  return line;\r\n}\r\n\r\nfunction parseCodePoint(\r\n  state: ParserState,\r\n  key: string,\r\n  v: string,\r\n): Character | null {\r\n  if (v === \"-1\" || v === \"%%\") {\r\n    return null;\r\n  }\r\n  if (v.length === 1) {\r\n    return v.codePointAt(0)!;\r\n  }\r\n  let m;\r\n  if ((m = /^([0-9a-f]{4})$/.exec(v)) != null) {\r\n    return Number.parseInt(m[1], 16);\r\n  }\r\n  if ((m = /^([0-9a-f]{4})@$/.exec(v)) != null) {\r\n    return makeDeadCharacter(state.result, key, Number.parseInt(m[1], 16));\r\n  }\r\n  state.result.warnings.push(`[${key}] Invalid code point: ${v}`);\r\n  return null;\r\n}\r\n\r\nfunction modifier(shiftState: number): KeyModifier | null {\r\n  switch (shiftState) {\r\n    case 0:\r\n      return KeyModifier.None;\r\n    case 1:\r\n      return KeyModifier.Shift;\r\n    case 6:\r\n      return KeyModifier.Alt;\r\n    case 7:\r\n      return KeyModifier.ShiftAlt;\r\n  }\r\n  return null;\r\n}\r\n\r\nconst toKeyId: Record<string, KeyId> = {\r\n  \"02\": \"Digit1\",\r\n  \"03\": \"Digit2\",\r\n  \"04\": \"Digit3\",\r\n  \"05\": \"Digit4\",\r\n  \"06\": \"Digit5\",\r\n  \"07\": \"Digit6\",\r\n  \"08\": \"Digit7\",\r\n  \"09\": \"Digit8\",\r\n  \"0a\": \"Digit9\",\r\n  \"0b\": \"Digit0\",\r\n  \"0c\": \"Minus\",\r\n  \"0d\": \"Equal\",\r\n  \"10\": \"KeyQ\",\r\n  \"11\": \"KeyW\",\r\n  \"12\": \"KeyE\",\r\n  \"13\": \"KeyR\",\r\n  \"14\": \"KeyT\",\r\n  \"15\": \"KeyY\",\r\n  \"16\": \"KeyU\",\r\n  \"17\": \"KeyI\",\r\n  \"18\": \"KeyO\",\r\n  \"19\": \"KeyP\",\r\n  \"1a\": \"BracketLeft\",\r\n  \"1b\": \"BracketRight\",\r\n  \"1e\": \"KeyA\",\r\n  \"1f\": \"KeyS\",\r\n  \"20\": \"KeyD\",\r\n  \"21\": \"KeyF\",\r\n  \"22\": \"KeyG\",\r\n  \"23\": \"KeyH\",\r\n  \"24\": \"KeyJ\",\r\n  \"25\": \"KeyK\",\r\n  \"26\": \"KeyL\",\r\n  \"27\": \"Semicolon\",\r\n  \"28\": \"Quote\",\r\n  \"29\": \"Backquote\",\r\n  \"2b\": \"Backslash\",\r\n  \"2c\": \"KeyZ\",\r\n  \"2d\": \"KeyX\",\r\n  \"2e\": \"KeyC\",\r\n  \"2f\": \"KeyV\",\r\n  \"30\": \"KeyB\",\r\n  \"31\": \"KeyN\",\r\n  \"32\": \"KeyM\",\r\n  \"33\": \"Comma\",\r\n  \"34\": \"Period\",\r\n  \"35\": \"Slash\",\r\n  \"39\": \"Space\",\r\n  \"56\": \"IntlBackslash\",\r\n};\r\n","export function decodeText(data: ArrayBufferLike) {\n  return new TextDecoder(sniffTextEncoding(data)).decode(data);\n}\n\nexport function sniffTextEncoding(data: ArrayBufferLike): string {\n  const buffer = new Uint8Array(data);\n  if (\n    buffer.length >= 2 &&\n    (buffer[0] & 0xff) === 0xfe &&\n    (buffer[1] & 0xff) === 0xff\n  ) {\n    return \"utf-16be\";\n  }\n  if (\n    buffer.length >= 2 &&\n    (buffer[0] & 0xff) === 0xff &&\n    (buffer[1] & 0xff) === 0xfe\n  ) {\n    return \"utf-16le\";\n  }\n  if (\n    buffer.length >= 6 &&\n    buffer[0] === 0 &&\n    buffer[1] !== 0 &&\n    buffer[2] === 0 &&\n    buffer[3] !== 0 &&\n    buffer[4] === 0 &&\n    buffer[5] !== 0\n  ) {\n    return \"utf-16be\";\n  }\n  if (\n    buffer.length >= 6 &&\n    buffer[0] !== 0 &&\n    buffer[1] === 0 &&\n    buffer[2] !== 0 &&\n    buffer[3] === 0 &&\n    buffer[4] !== 0 &&\n    buffer[5] === 0\n  ) {\n    return \"utf-16le\";\n  }\n  return \"utf-8\";\n}\n","import { Keyboard, KeyModifier, Layout, loadKeyboard } from \"@mkboard/keyboard\";\r\nimport { LayoutBuilder } from \"@mkboard/keyboard-io\";\r\nimport {\r\n  createContext,\r\n  type ReactNode,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\n\r\nexport const CustomLayoutContext = createContext<{\r\n  readonly keyboard: Keyboard;\r\n  readonly layout: LayoutBuilder;\r\n  readonly setLayout: (layout: LayoutBuilder) => void;\r\n}>(null!);\r\n\r\nexport function useCustomLayout() {\r\n  const value = useContext(CustomLayoutContext);\r\n  if (value == null) {\r\n    throw new Error(\r\n      process.env.NODE_ENV !== \"production\"\r\n        ? \"CustomLayoutContext is missing\"\r\n        : undefined,\r\n    );\r\n  }\r\n  return value;\r\n}\r\n\r\nexport function CustomLayoutProvider({\r\n  children,\r\n  layout = Layout.EN_US,\r\n}: {\r\n  readonly children: ReactNode;\r\n  readonly layout?: Layout;\r\n}) {\r\n  const [customLayout, setCustomLayout] = useState(() =>\r\n    fix(new LayoutBuilder()),\r\n  );\r\n  const [keyboard, setKeyboard] = useState(() => loadKeyboard(layout));\r\n  useEffect(() => {\r\n    const { geometry, geometryDict } = loadKeyboard(layout);\r\n    setKeyboard(\r\n      new Keyboard(\r\n        Layout.custom(layout.language),\r\n        geometry,\r\n        customLayout.dict(),\r\n        geometryDict,\r\n      ),\r\n    );\r\n  }, [layout, customLayout]);\r\n  return (\r\n    <CustomLayoutContext.Provider\r\n      value={{\r\n        keyboard,\r\n        layout: customLayout,\r\n        setLayout: (layout) => {\r\n          setCustomLayout(fix(new LayoutBuilder(layout)));\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </CustomLayoutContext.Provider>\r\n  );\r\n}\r\n\r\nfunction fix(layout: LayoutBuilder) {\r\n  return layout.setOne(\"Space\", KeyModifier.None, 0x0020);\r\n}\r\n","// extracted by mini-css-extract-plugin\nvar _1 = \"T6qOdmqqPf\";\nvar _2 = \"wulZV5NFej\";\nvar _3 = \"jhx50LYUXO\";\nvar _4 = \"BkKurdnaJy\";\nvar _5 = \"sWPmE3T8FG\";\nvar _6 = \"tT5OZ5A0Zv\";\nvar _7 = \"MWHujf8sDk\";\nvar _8 = \"IC1qFkJLsF\";\nvar _9 = \"Wz0Evf9vJ4\";\nvar _a = \"Zq64mzhMNk\";\nvar _b = \"x7jYjrgfkh\";\nvar _c = \"lSiBFGQvjQ\";\nvar _d = \"AHgYd2bYVr\";\nvar _e = \"TZ1w_aWmaD\";\nvar _f = \"AHYOO0RoQA\";\nvar _10 = \"IrHi5_U4bt\";\nvar _11 = \"Tu0c7PZ5v0\";\nvar _12 = \"IVK5X2kNEL\";\nexport { _1 as \"bump\", _2 as \"button\", _3 as \"deadSymbol\", _4 as \"depressedKey\", _5 as \"fingerLeftIndex\", _6 as \"fingerMiddle\", _7 as \"fingerPinky\", _8 as \"fingerRightIndex\", _9 as \"fingerRing\", _a as \"fingerThumb\", _b as \"handLeft\", _c as \"handRight\", _d as \"key\", _e as \"ligatureSymbol\", _f as \"primarySymbol\", _10 as \"secondarySymbol\", _11 as \"symbol\", _12 as \"toggledKey\" }\n","import { type Keyboard, type KeyShape } from \"@mkboard/keyboard\";\r\nimport { type MouseProps, Point, Size } from \"@mkboard/widget\";\r\nimport { type ReactNode, type RefObject } from \"react\";\r\n\r\nexport const margin = 15;\r\nexport const keySize = 40;\r\nexport const keyGap = 2;\r\n\r\nexport const getKeyCenter = (shape: KeyShape): Point => {\r\n  return new Point(\r\n    shape.x * keySize + (shape.w * (keySize - keyGap)) / 2,\r\n    shape.y * keySize + (shape.h * (keySize - keyGap)) / 2,\r\n  );\r\n};\r\n\r\nexport const getFrameSize = (keyboard: Keyboard): Size => {\r\n  let cols = 0;\r\n  let rows = 0;\r\n  for (const shape of keyboard.shapes.values()) {\r\n    cols = Math.max(cols, shape.x + shape.w);\r\n    rows = Math.max(rows, shape.y + shape.h);\r\n  }\r\n  return new Size(\r\n    margin * 2 + cols * keySize - keyGap,\r\n    margin * 2 + rows * keySize - keyGap,\r\n  );\r\n};\r\n\r\nexport const Surface = ({\r\n  children,\r\n  ref,\r\n  ...props\r\n}: {\r\n  children: ReactNode;\r\n  ref?: RefObject<SVGSVGElement | null>;\r\n} & MouseProps) => {\r\n  return (\r\n    <svg {...props} ref={ref} x={margin} y={margin} overflow=\"visible\">\r\n      {children}\r\n    </svg>\r\n  );\r\n};\r\n","import {\r\n  type DeadCharacter,\r\n  KeyCharacters,\r\n  type KeyShape,\r\n  type LabelShape,\r\n  type Language,\r\n  type LigatureCharacter,\r\n} from \"@mkboard/keyboard\";\r\nimport { type CodePoint, isDiacritic } from \"@mkboard/unicode\";\r\nimport { type ClassName, type MouseProps } from \"@mkboard/widget\";\r\nimport { clsx } from \"clsx\";\r\nimport { type FunctionComponent, memo, type ReactNode } from \"react\";\r\nimport * as styles from \"./Key.module.less\";\r\nimport { keyGap, keySize } from \"./shapes.tsx\";\r\n\r\nexport type KeyProps = {\r\n  readonly depressed?: boolean;\r\n  readonly toggled?: boolean;\r\n  readonly showColors?: boolean;\r\n} & MouseProps;\r\n\r\nexport function makeKeyComponent(\r\n  { letterName }: Language,\r\n  shape: KeyShape,\r\n): FunctionComponent<KeyProps> {\r\n  const { isCodePoint, isDead, isLigature } = KeyCharacters;\r\n  const { id, a, b, c, d } = shape;\r\n  const x = shape.x * keySize;\r\n  const y = shape.y * keySize;\r\n  const w = shape.w * keySize - keyGap;\r\n  const h = shape.h * keySize - keyGap;\r\n  const children: ReactNode[] = [];\r\n  children.push(\r\n    shape.shape ? (\r\n      <path className={styles.button} d={shape.shape} />\r\n    ) : (\r\n      <rect className={styles.button} x={0} y={0} width={w} height={h} />\r\n    ),\r\n  );\r\n  if (shape.homing) {\r\n    children.push(\r\n      <circle className={styles.bump} cx={w / 2} cy={h - 5} r={3} />,\r\n    );\r\n  }\r\n  for (const label of shape.labels) {\r\n    children.push(makeLabel(label));\r\n  }\r\n  const ta = isCodePoint(a);\r\n  const tb = isCodePoint(b);\r\n  const tc = isCodePoint(c);\r\n  const td = isCodePoint(d);\r\n  const ab = ta && tb && letterName(a) === letterName(b);\r\n  const cd = tc && td && letterName(c) === letterName(d);\r\n  if (ta && !ab) {\r\n    children.push(makeCodePointLabel(a, 10, 27, styles.secondarySymbol));\r\n  }\r\n  if (tb && !ab) {\r\n    children.push(makeCodePointLabel(b, 10, 12, styles.secondarySymbol));\r\n  }\r\n  if (tc && !cd) {\r\n    children.push(makeCodePointLabel(c, 25, 27, styles.secondarySymbol));\r\n  }\r\n  if (td && !cd) {\r\n    children.push(makeCodePointLabel(d, 25, 12, styles.secondarySymbol));\r\n  }\r\n  if (ta && ab) {\r\n    children.push(makeCodePointLabel(a, 10, 12, styles.primarySymbol));\r\n  }\r\n  if (tc && cd) {\r\n    children.push(makeCodePointLabel(c, 25, 27, styles.primarySymbol));\r\n  }\r\n  if (isDead(a)) {\r\n    children.push(makeDeadLabel(a, 10, 27, styles.secondarySymbol));\r\n  }\r\n  if (isDead(b)) {\r\n    children.push(makeDeadLabel(b, 10, 12, styles.secondarySymbol));\r\n  }\r\n  if (isDead(c)) {\r\n    children.push(makeDeadLabel(c, 25, 27, styles.secondarySymbol));\r\n  }\r\n  if (isDead(d)) {\r\n    children.push(makeDeadLabel(d, 25, 12, styles.secondarySymbol));\r\n  }\r\n  if (isLigature(a)) {\r\n    children.push(makeLigatureLabel(a, 10, 27, styles.secondarySymbol));\r\n  }\r\n  if (isLigature(b)) {\r\n    children.push(makeLigatureLabel(b, 10, 12, styles.secondarySymbol));\r\n  }\r\n  if (isLigature(c)) {\r\n    children.push(makeLigatureLabel(c, 25, 27, styles.secondarySymbol));\r\n  }\r\n  if (isLigature(d)) {\r\n    children.push(makeLigatureLabel(d, 25, 12, styles.secondarySymbol));\r\n  }\r\n  const zoneClassName = zoneClassNameOf(shape);\r\n  function KeyComponent({\r\n    depressed,\r\n    toggled,\r\n    showColors,\r\n    ...props\r\n  }: KeyProps): ReactNode {\r\n    return (\r\n      <svg\r\n        {...props}\r\n        className={clsx(\r\n          styles.key,\r\n          depressed && styles.depressedKey,\r\n          toggled && styles.toggledKey,\r\n          showColors && zoneClassName,\r\n        )}\r\n        x={x}\r\n        y={y}\r\n        width={w}\r\n        height={h}\r\n        data-key={id}\r\n      >\r\n        {...children}\r\n      </svg>\r\n    );\r\n  }\r\n  KeyComponent.displayName = `Key[${id}]`;\r\n  return memo(KeyComponent);\r\n\r\n  function makeCodePointLabel(\r\n    codePoint: CodePoint,\r\n    x: number,\r\n    y: number,\r\n    className: ClassName,\r\n  ): ReactNode {\r\n    switch (codePoint) {\r\n      case /* SPACE */ 0x0020:\r\n      case /* NO-BREAK SPACE */ 0x00a0:\r\n      case /* NARROW NO-BREAK SPACE */ 0x202f:\r\n        return null;\r\n    }\r\n    return makeLabel(\r\n      {\r\n        text: letterName(codePoint),\r\n        pos: [x, y],\r\n        align: [\"m\", \"m\"],\r\n      },\r\n      className,\r\n    );\r\n  }\r\n\r\n  function makeDeadLabel(\r\n    { dead }: DeadCharacter,\r\n    x: number,\r\n    y: number,\r\n    className: ClassName,\r\n  ): ReactNode {\r\n    return makeLabel(\r\n      {\r\n        text: isDiacritic(dead)\r\n          ? String.fromCodePoint(/* DOTTED CIRCLE */ 0x25cc, dead)\r\n          : String.fromCodePoint(dead),\r\n        pos: [x, y],\r\n        align: [\"m\", \"m\"],\r\n      },\r\n      clsx(className, styles.deadSymbol),\r\n    );\r\n  }\r\n\r\n  function makeLigatureLabel(\r\n    { ligature }: LigatureCharacter,\r\n    x: number,\r\n    y: number,\r\n    className: ClassName,\r\n  ): ReactNode {\r\n    return makeLabel(\r\n      {\r\n        text: ligature,\r\n        pos: [x, y],\r\n        align: [\"m\", \"m\"],\r\n      },\r\n      clsx(className, styles.ligatureSymbol),\r\n    );\r\n  }\r\n}\r\n\r\nfunction makeLabel(label: LabelShape, className: ClassName = null): ReactNode {\r\n  const { text, pos = [10, 20], align = [\"s\", \"m\"] } = label;\r\n  const [x, y] = pos;\r\n  const [ha, va] = align;\r\n  let textAnchor;\r\n  switch (ha) {\r\n    case \"s\":\r\n      textAnchor = \"start\";\r\n      break;\r\n    case \"m\":\r\n      textAnchor = \"middle\";\r\n      break;\r\n    case \"e\":\r\n      textAnchor = \"end\";\r\n      break;\r\n  }\r\n  let dominantBaseline;\r\n  switch (va) {\r\n    case \"b\":\r\n      dominantBaseline = \"text-after-edge\";\r\n      break;\r\n    case \"m\":\r\n      dominantBaseline = \"middle\";\r\n      break;\r\n    case \"t\":\r\n      dominantBaseline = \"text-before-edge\";\r\n      break;\r\n  }\r\n  return (\r\n    <text\r\n      className={clsx(styles.symbol, className)}\r\n      x={x}\r\n      y={y}\r\n      textAnchor={textAnchor}\r\n      dominantBaseline={dominantBaseline}\r\n      direction=\"ltr\"\r\n    >\r\n      {text}\r\n    </text>\r\n  );\r\n}\r\n\r\nfunction zoneClassNameOf(shape: KeyShape): string | null {\r\n  return clsx(handClassNameOf(shape), fingerClassNameOf(shape));\r\n}\r\n\r\nfunction handClassNameOf({ hand }: KeyShape): string | null {\r\n  switch (hand) {\r\n    case \"left\":\r\n      return styles.handLeft;\r\n    case \"right\":\r\n      return styles.handRight;\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction fingerClassNameOf({ finger }: KeyShape): string | null {\r\n  switch (finger) {\r\n    case \"pinky\":\r\n      return styles.fingerPinky;\r\n    case \"ring\":\r\n      return styles.fingerRing;\r\n    case \"middle\":\r\n      return styles.fingerMiddle;\r\n    case \"leftIndex\":\r\n      return styles.fingerLeftIndex;\r\n    case \"rightIndex\":\r\n      return styles.fingerRightIndex;\r\n    case \"thumb\":\r\n      return styles.fingerThumb;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n","import {\r\n  type Keyboard,\r\n  type KeyId,\r\n  type KeyShape,\r\n  useKeyboard,\r\n} from \"@mkboard/keyboard\";\r\nimport {\r\n  type ComponentType,\r\n  memo,\r\n  type ReactElement,\r\n  useMemo,\r\n  useRef,\r\n} from \"react\";\r\nimport { type KeyProps, makeKeyComponent } from \"./Key.tsx\";\r\nimport { Surface } from \"./shapes.tsx\";\r\n\r\nexport const KeyLayer = memo(function KeyLayer({\r\n  depressedKeys = [],\r\n  toggledKeys = [],\r\n  showColors = false,\r\n  onKeyHoverIn,\r\n  onKeyHoverOut,\r\n  onKeyClick,\r\n}: {\r\n  readonly depressedKeys?: readonly KeyId[];\r\n  readonly toggledKeys?: readonly KeyId[];\r\n  readonly showColors?: boolean;\r\n  readonly onKeyHoverIn?: (key: KeyId, elem: Element) => void;\r\n  readonly onKeyHoverOut?: (key: KeyId, elem: Element) => void;\r\n  readonly onKeyClick?: (key: KeyId, elem: Element) => void;\r\n}) {\r\n  const keyboard = useKeyboard();\r\n  const svgRef = useRef<SVGSVGElement>(null);\r\n  const children = useMemo(() => getKeyElements(keyboard), [keyboard]);\r\n  return (\r\n    <Surface\r\n      ref={svgRef}\r\n      onMouseOver={(event) => {\r\n        relayEvent(svgRef.current!, event, onKeyHoverIn);\r\n      }}\r\n      onMouseOut={(event) => {\r\n        relayEvent(svgRef.current!, event, onKeyHoverOut);\r\n      }}\r\n      onClick={(event) => {\r\n        relayEvent(svgRef.current!, event, onKeyClick);\r\n      }}\r\n    >\r\n      {children.map((child) =>\r\n        child.select(depressedKeys, toggledKeys, showColors),\r\n      )}\r\n    </Surface>\r\n  );\r\n});\r\n\r\nfunction relayEvent(\r\n  root: Element,\r\n  { target }: { readonly target: any },\r\n  handler?: (key: KeyId, elem: Element) => void,\r\n) {\r\n  while (\r\n    handler != null &&\r\n    target instanceof Element &&\r\n    root.contains(target)\r\n  ) {\r\n    const key = (target as SVGElement).dataset[\"key\"];\r\n    if (key) {\r\n      handler(key, target);\r\n      return;\r\n    }\r\n    target = target.parentElement;\r\n  }\r\n}\r\n\r\nfunction getKeyElements(keyboard: Keyboard): MemoizedKeyElements[] {\r\n  return [...keyboard.shapes.values()].map(\r\n    (shape) => new MemoizedKeyElements(keyboard, shape),\r\n  );\r\n}\r\n\r\nclass MemoizedKeyElements {\r\n  readonly component: ComponentType<KeyProps>;\r\n  readonly state0: ReactElement<KeyProps>;\r\n  readonly state1: ReactElement<KeyProps>;\r\n  readonly state2: ReactElement<KeyProps>;\r\n  readonly state3: ReactElement<KeyProps>;\r\n  readonly state4: ReactElement<KeyProps>;\r\n  readonly state5: ReactElement<KeyProps>;\r\n  readonly state6: ReactElement<KeyProps>;\r\n  readonly state7: ReactElement<KeyProps>;\r\n\r\n  constructor(\r\n    readonly keyboard: Keyboard,\r\n    readonly shape: KeyShape,\r\n  ) {\r\n    const Component = makeKeyComponent(keyboard.layout.language, shape);\r\n    this.component = Component;\r\n    this.state0 = (\r\n      <Component\r\n        key={shape.id}\r\n        depressed={false}\r\n        toggled={false}\r\n        showColors={false}\r\n      />\r\n    );\r\n    this.state1 = (\r\n      <Component\r\n        key={shape.id}\r\n        depressed={true}\r\n        toggled={false}\r\n        showColors={false}\r\n      />\r\n    );\r\n    this.state2 = (\r\n      <Component\r\n        key={shape.id}\r\n        depressed={false}\r\n        toggled={true}\r\n        showColors={false}\r\n      />\r\n    );\r\n    this.state3 = (\r\n      <Component\r\n        key={shape.id}\r\n        depressed={true}\r\n        toggled={true}\r\n        showColors={false}\r\n      />\r\n    );\r\n    this.state4 = (\r\n      <Component\r\n        key={shape.id}\r\n        depressed={false}\r\n        toggled={false}\r\n        showColors={true}\r\n      />\r\n    );\r\n    this.state5 = (\r\n      <Component\r\n        key={shape.id}\r\n        depressed={true}\r\n        toggled={false}\r\n        showColors={true}\r\n      />\r\n    );\r\n    this.state6 = (\r\n      <Component\r\n        key={shape.id}\r\n        depressed={false}\r\n        toggled={true}\r\n        showColors={true}\r\n      />\r\n    );\r\n    this.state7 = (\r\n      <Component\r\n        key={shape.id}\r\n        depressed={true}\r\n        toggled={true}\r\n        showColors={true}\r\n      />\r\n    );\r\n  }\r\n\r\n  select(\r\n    depressedKeys: readonly KeyId[],\r\n    toggledKeys: readonly KeyId[],\r\n    showColors: boolean,\r\n  ): ReactElement<KeyProps> {\r\n    const { shape } = this;\r\n    const depressed = depressedKeys.includes(shape.id);\r\n    const toggled = toggledKeys.includes(shape.id);\r\n    if (!showColors) {\r\n      if (!toggled) {\r\n        if (!depressed) {\r\n          return this.state0;\r\n        } else {\r\n          return this.state1;\r\n        }\r\n      } else {\r\n        if (!depressed) {\r\n          return this.state2;\r\n        } else {\r\n          return this.state3;\r\n        }\r\n      }\r\n    } else {\r\n      if (!toggled) {\r\n        if (!depressed) {\r\n          return this.state4;\r\n        } else {\r\n          return this.state5;\r\n        }\r\n      } else {\r\n        if (!depressed) {\r\n          return this.state6;\r\n        } else {\r\n          return this.state7;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { type Keyboard, KeyboardContext } from \"@mkboard/keyboard\";\r\nimport { type ZoomableProps } from \"@mkboard/widget\";\r\nimport { memo, type ReactNode } from \"react\";\r\nimport { getFrameSize } from \"./shapes.tsx\";\r\nimport * as styles from \"./VirtualKeyboard.module.less\";\r\n\r\nexport const VirtualKeyboard = memo(function VirtualKeyboard({\r\n  children,\r\n  keyboard,\r\n  width,\r\n  height,\r\n  moving,\r\n  ...props\r\n}: {\r\n  readonly children?: ReactNode;\r\n  readonly keyboard: Keyboard;\r\n  readonly width?: string;\r\n  readonly height?: string;\r\n  readonly moving?: boolean;\r\n} & ZoomableProps): ReactNode {\r\n  const size = getFrameSize(keyboard);\r\n  return (\r\n    <svg\r\n      {...props}\r\n      className={styles.keyboard}\r\n      viewBox={`0 0 ${size.width} ${size.height}`}\r\n      style={{ aspectRatio: `${size.width}/${size.height}` }}\r\n      width={width}\r\n      height={height}\r\n    >\r\n      <rect\r\n        className={styles.frame}\r\n        x={0}\r\n        y={0}\r\n        width={size.width}\r\n        height={size.height}\r\n        rx={10}\r\n        ry={10}\r\n      />\r\n      <KeyboardContext.Provider value={keyboard}>\r\n        {children}\r\n      </KeyboardContext.Provider>\r\n    </svg>\r\n  );\r\n});\r\n","// extracted by mini-css-extract-plugin\nvar _1 = \"ewktdpsqF0\";\nvar _2 = \"X0trzHB1xA\";\nexport { _1 as \"frame\", _2 as \"keyboard\" }\n","// extracted by mini-css-extract-plugin\nvar _1 = \"aHJAZbqsHS\";\nvar _2 = \"YT6bh0Xqn0\";\nvar _3 = \"rKnRbod3ZQ\";\nvar _4 = \"RShT7GKMFT\";\nexport { _1 as \"char\", _2 as \"dead\", _3 as \"ligature\", _4 as \"unassigned\" }\n","import { type Character, KeyCharacters } from \"@mkboard/keyboard\";\r\nimport { formatCodePoint, isDiacritic } from \"@mkboard/unicode\";\r\nimport { clsx } from \"clsx\";\r\nimport * as styles from \"./CharacterInfo.module.less\";\r\n\r\nexport function CharacterInfo({\r\n  character,\r\n}: {\r\n  readonly character: Character | null;\r\n}) {\r\n  if (character) {\r\n    if (KeyCharacters.isCodePoint(character)) {\r\n      let label;\r\n      switch (character) {\r\n        case 0x0020:\r\n          label = \"SPACE\";\r\n          break;\r\n        case 0x00a0:\r\n          label = \"NBSP\";\r\n          break;\r\n        default:\r\n          label = (\r\n            <span className={styles.char}>\r\n              {String.fromCodePoint(character)}\r\n            </span>\r\n          );\r\n          break;\r\n      }\r\n      return (\r\n        <>\r\n          {label} {formatCodePoint(character)}\r\n        </>\r\n      );\r\n    }\r\n    if (KeyCharacters.isDead(character)) {\r\n      const { dead } = character;\r\n      const label = (\r\n        <span className={clsx(styles.char, styles.dead)}>\r\n          {isDiacritic(dead)\r\n            ? String.fromCodePoint(/* DOTTED CIRCLE */ 0x25cc, dead)\r\n            : String.fromCodePoint(dead)}\r\n        </span>\r\n      );\r\n      return (\r\n        <>\r\n          {label} {formatCodePoint(dead)}\r\n        </>\r\n      );\r\n    }\r\n    if (KeyCharacters.isLigature(character)) {\r\n      return (\r\n        <span className={clsx(styles.char, styles.ligature)}>\r\n          {character.ligature}\r\n        </span>\r\n      );\r\n    }\r\n    if (KeyCharacters.isSpecial(character)) {\r\n      return formatCodePoint(character.special);\r\n    }\r\n  }\r\n  return <span className={styles.unassigned}>Unassigned</span>;\r\n}\r\n","import { KeyModifier } from \"@mkboard/keyboard\";\r\n\r\nexport function ModifierInfo({ modifier }: { readonly modifier: KeyModifier }) {\r\n  switch (modifier) {\r\n    case KeyModifier.None:\r\n      return <span>Default</span>;\r\n    case KeyModifier.Shift:\r\n      return <span>Shift</span>;\r\n    case KeyModifier.Alt:\r\n      return <span>AltGr</span>;\r\n    case KeyModifier.ShiftAlt:\r\n      return <span>Shift AltGr</span>;\r\n  }\r\n  return null;\r\n}\r\n","import { type KeyCharacters, KeyModifier } from \"@mkboard/keyboard\";\r\nimport { Field, FieldList, Name, Value } from \"@mkboard/widget\";\r\nimport { CharacterInfo } from \"./CharacterInfo.tsx\";\r\nimport { ModifierInfo } from \"./ModifierInfo.tsx\";\r\n\r\nexport function KeyDetails({\r\n  characters: { id, a, b, c, d },\r\n}: {\r\n  readonly characters: KeyCharacters;\r\n}) {\r\n  return (\r\n    <>\r\n      <FieldList>\r\n        <Field size={6}>Id</Field>\r\n        <Field>\r\n          <Value>{id}</Value>\r\n        </Field>\r\n      </FieldList>\r\n      <FieldList>\r\n        <Field size={6}>\r\n          <Name>\r\n            <ModifierInfo modifier={KeyModifier.None} />\r\n          </Name>\r\n        </Field>\r\n        <Field size={10}>\r\n          <Value>\r\n            <CharacterInfo character={a} />\r\n          </Value>\r\n        </Field>\r\n        <Field size={6}>\r\n          <Name>\r\n            <ModifierInfo modifier={KeyModifier.Shift} />\r\n          </Name>\r\n        </Field>\r\n        <Field size={10}>\r\n          <Value>\r\n            <CharacterInfo character={b} />\r\n          </Value>\r\n        </Field>\r\n      </FieldList>\r\n      <FieldList>\r\n        <Field size={6}>\r\n          <Name>\r\n            <ModifierInfo modifier={KeyModifier.Alt} />\r\n          </Name>\r\n        </Field>\r\n        <Field size={10}>\r\n          <Value>\r\n            <CharacterInfo character={c} />\r\n          </Value>\r\n        </Field>\r\n        <Field size={6}>\r\n          <Name>\r\n            <ModifierInfo modifier={KeyModifier.ShiftAlt} />\r\n          </Name>\r\n        </Field>\r\n        <Field size={10}>\r\n          <Value>\r\n            <CharacterInfo character={d} />\r\n          </Value>\r\n        </Field>\r\n      </FieldList>\r\n    </>\r\n  );\r\n}\r\n","import { TextField } from \"@mkboard/widget\";\r\nimport { useCustomLayout } from \"./context.tsx\";\r\n\r\nexport function LayoutJson() {\r\n  const { layout } = useCustomLayout();\r\n  return (\r\n    <TextField\r\n      type=\"textarea\"\r\n      value={JSON.stringify(layout.toJSON(), null, 2)}\r\n      readOnly={true}\r\n      rows={20}\r\n    />\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nvar _1 = \"Rn4JHveiBt\";\nvar _2 = \"QlAzgQDmxU\";\nvar _3 = \"dwKNq8Zjd1\";\nvar _4 = \"AXHKRcp61f\";\nvar _5 = \"n8qkSgX0iU\";\nexport { _1 as \"characterCol\", _2 as \"keyCol\", _3 as \"root\", _4 as \"row\", _5 as \"table\" }\n","import { KeyCharacters, KeyModifier } from \"@mkboard/keyboard\";\r\nimport { LayoutBuilder } from \"@mkboard/keyboard-io\";\r\nimport { CharacterInfo } from \"./CharacterInfo.tsx\";\r\nimport { useCustomLayout } from \"./context.tsx\";\r\nimport * as styles from \"./LayoutTable.module.less\";\r\nimport { ModifierInfo } from \"./ModifierInfo.tsx\";\r\n\r\nexport function LayoutTable() {\r\n  const { layout } = useCustomLayout();\r\n  return (\r\n    <div className={styles.root}>\r\n      <table className={styles.table}>\r\n        <thead>\r\n          <tr className={styles.row}>\r\n            <th className={styles.keyCol}>Key</th>\r\n            <th className={styles.characterCol}>\r\n              <ModifierInfo modifier={KeyModifier.None} />\r\n            </th>\r\n            <th className={styles.characterCol}>\r\n              <ModifierInfo modifier={KeyModifier.Shift} />\r\n            </th>\r\n            <th className={styles.characterCol}>\r\n              <ModifierInfo modifier={KeyModifier.Alt} />\r\n            </th>\r\n            <th className={styles.characterCol}>\r\n              <ModifierInfo modifier={KeyModifier.ShiftAlt} />\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {LayoutBuilder.allKeys().map((id) => {\r\n            const { a, b, c, d } =\r\n              layout.get(id) ?? new KeyCharacters(id, null, null, null, null);\r\n            return (\r\n              <tr key={id} className={styles.row}>\r\n                <td className={styles.keyCol}>{id}</td>\r\n                <td className={styles.characterCol}>\r\n                  <CharacterInfo character={a} />\r\n                </td>\r\n                <td className={styles.characterCol}>\r\n                  <CharacterInfo character={b} />\r\n                </td>\r\n                <td className={styles.characterCol}>\r\n                  <CharacterInfo character={c} />\r\n                </td>\r\n                <td className={styles.characterCol}>\r\n                  <CharacterInfo character={d} />\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import { KeyCharacters, type KeyId } from \"@mkboard/keyboard\";\r\nimport { LayoutBuilder } from \"@mkboard/keyboard-io\";\r\nimport { Tab, TabList } from \"@mkboard/widget\";\r\nimport { useState } from \"react\";\r\nimport { KeyLayer } from \"../KeyLayer.tsx\";\r\nimport { VirtualKeyboard } from \"../VirtualKeyboard.tsx\";\r\nimport { useCustomLayout } from \"./context.tsx\";\r\nimport { KeyDetails } from \"./KeyDetails.tsx\";\r\nimport { LayoutJson } from \"./LayoutJson.tsx\";\r\nimport { LayoutTable } from \"./LayoutTable.tsx\";\r\n\r\nexport function LayoutView({\r\n  keyId,\r\n  setKeyId,\r\n}: {\r\n  readonly keyId: KeyId;\r\n  readonly setKeyId: (keyId: KeyId) => void;\r\n}) {\r\n  const { keyboard, layout } = useCustomLayout();\r\n  const [index, setIndex] = useState(0);\r\n  return (\r\n    <TabList selectedIndex={index} onSelect={setIndex}>\r\n      <Tab label=\"Keyboard\">\r\n        <VirtualKeyboard keyboard={keyboard}>\r\n          <KeyLayer\r\n            depressedKeys={[keyId]}\r\n            onKeyClick={(key) => {\r\n              if (LayoutBuilder.isKey(key)) {\r\n                setKeyId(key);\r\n              }\r\n            }}\r\n          />\r\n        </VirtualKeyboard>\r\n        <KeyDetails\r\n          characters={layout.get(keyId) ?? new KeyCharacters(keyId, 0, 0, 0, 0)}\r\n        />\r\n      </Tab>\r\n      <Tab label=\"Table\">\r\n        <LayoutTable />\r\n      </Tab>\r\n      <Tab label=\"JSON\">\r\n        <LayoutJson />\r\n      </Tab>\r\n    </TabList>\r\n  );\r\n}\r\n","import { type KeyId, type KeyModifier } from \"@mkboard/keyboard\";\r\nimport { type CodePoint } from \"@mkboard/unicode\";\r\nimport { NameValue, Value } from \"@mkboard/widget\";\r\nimport { CharacterInfo } from \"./CharacterInfo.tsx\";\r\nimport { ModifierInfo } from \"./ModifierInfo.tsx\";\r\n\r\nexport type LiveInputData = {\r\n  readonly key: KeyId;\r\n  readonly codePoint: CodePoint;\r\n  readonly modifier: KeyModifier;\r\n};\r\n\r\nexport function LiveInputInfo({\r\n  inputData: { key, codePoint, modifier },\r\n}: {\r\n  readonly inputData: LiveInputData;\r\n}) {\r\n  return (\r\n    <>\r\n      <NameValue name=\"Id\" value={key} />\r\n      <NameValue\r\n        name=\"Character\"\r\n        value={\r\n          <Value>\r\n            <CharacterInfo character={codePoint} />\r\n          </Value>\r\n        }\r\n      />\r\n      <NameValue\r\n        name=\"Modifier\"\r\n        value={\r\n          <Value>\r\n            <ModifierInfo modifier={modifier} />\r\n          </Value>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { type KeyId, KeyModifier } from \"@mkboard/keyboard\";\r\nimport { LayoutBuilder } from \"@mkboard/keyboard-io\";\r\nimport { Field, FieldList, TextField } from \"@mkboard/widget\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useCustomLayout } from \"./context.tsx\";\r\nimport { type LiveInputData, LiveInputInfo } from \"./LiveInputInfo.tsx\";\r\n\r\nexport function LiveImport({\r\n  onChange,\r\n}: {\r\n  readonly onChange: (id: KeyId) => void;\r\n}) {\r\n  const { layout, setLayout } = useCustomLayout();\r\n  const [inputData, setInputData] = useState<LiveInputData | null>(null);\r\n  const ref = useRef<{\r\n    code: string;\r\n    shift: boolean;\r\n    alt: boolean;\r\n  } | null>(null);\r\n  return (\r\n    <FieldList>\r\n      <Field>Live import:</Field>\r\n      <Field>\r\n        <TextField\r\n          size={6}\r\n          value={String.fromCodePoint(inputData?.codePoint ?? 0x0020)}\r\n          onKeyDown={(event) => {\r\n            const { code } = event;\r\n            if (code === \"Tab\") {\r\n              event.preventDefault();\r\n            }\r\n            if (LayoutBuilder.isKey(code)) {\r\n              const shift = event.getModifierState(\"Shift\");\r\n              const alt =\r\n                event.getModifierState(\"Alt\") ||\r\n                event.getModifierState(\"AltGraph\");\r\n              ref.current = { code, shift, alt };\r\n            } else {\r\n              ref.current = null;\r\n            }\r\n          }}\r\n          onKeyUp={(event) => {}}\r\n          onInput={(event) => {\r\n            const lastKey = ref.current;\r\n            if (\r\n              lastKey != null &&\r\n              event.inputType === \"insertText\" &&\r\n              event.data\r\n            ) {\r\n              const { code, shift, alt } = lastKey;\r\n              const modifier = KeyModifier.from(shift, alt);\r\n              const codePoint = event.data.codePointAt(0) ?? 0x0000;\r\n              setLayout(layout.setOne(code, modifier, codePoint));\r\n              setInputData({ key: code, codePoint, modifier });\r\n              onChange?.(code);\r\n            }\r\n          }}\r\n        />\r\n      </Field>\r\n      <Field>{inputData && <LiveInputInfo inputData={inputData} />}</Field>\r\n    </FieldList>\r\n  );\r\n}\r\n","import { type KeyId } from \"@mkboard/keyboard\";\r\nimport { exportLayout, importLayout, LayoutBuilder } from \"@mkboard/keyboard-io\";\r\nimport { Button, ErrorAlert, Field, FieldList, Para } from \"@mkboard/widget\";\r\nimport { useRef, useState } from \"react\";\r\nimport { CustomLayoutProvider, useCustomLayout } from \"./context.tsx\";\r\nimport { LayoutView } from \"./LayoutView.tsx\";\r\nimport { LiveImport } from \"./LiveImport.tsx\";\r\n\r\nexport function CustomLayoutDesigner() {\r\n  return (\r\n    <CustomLayoutProvider>\r\n      <DesignPane />\r\n    </CustomLayoutProvider>\r\n  );\r\n}\r\n\r\nfunction DesignPane() {\r\n  const exportRef = useRef<HTMLAnchorElement>(null);\r\n  const importRef = useRef<HTMLInputElement>(null);\r\n  const { layout, setLayout } = useCustomLayout();\r\n  const [keyId, setKeyId] = useState<KeyId>(\"Space\");\r\n  return (\r\n    <section>\r\n      <a\r\n        ref={exportRef}\r\n        href=\"#\"\r\n        download=\"layout.json\"\r\n        hidden={true}\r\n        style={{ inlineSize: 0, blockSize: 0, overflow: \"hidden\" }}\r\n      />\r\n      <input\r\n        ref={importRef}\r\n        type=\"file\"\r\n        accept=\"*/*\"\r\n        hidden={true}\r\n        style={{ inlineSize: 0, blockSize: 0, overflow: \"hidden\" }}\r\n        onChange={() => {\r\n          const el = importRef.current!;\r\n          const files = el.files;\r\n          if (files != null && files.length > 0) {\r\n            importLayout(files[0])\r\n              .then((result) => {\r\n                if (result == null) {\r\n                  ErrorAlert.report(\"Invalid layout file\");\r\n                } else {\r\n                  const { layout, warnings } = result;\r\n                  setLayout(layout);\r\n                  if (warnings.length > 0) {\r\n                    ErrorAlert.report(new AggregateError(warnings));\r\n                  }\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                console.error(err);\r\n              })\r\n              .finally(() => {\r\n                el.value = \"\";\r\n              });\r\n          }\r\n        }}\r\n      />\r\n      <Para align=\"center\">\r\n        This is a preview of the feature that is still a work in progress.\r\n      </Para>\r\n      <LayoutView keyId={keyId} setKeyId={setKeyId} />\r\n      <LiveImport onChange={setKeyId} />\r\n      <FieldList>\r\n        <Field>\r\n          <Button\r\n            label=\"Export\"\r\n            onClick={() => {\r\n              exportLayout(layout)\r\n                .then((blob) => {\r\n                  const el = exportRef.current!;\r\n                  el.setAttribute(\"href\", URL.createObjectURL(blob));\r\n                  el.click();\r\n                })\r\n                .catch((err) => {\r\n                  console.error(err);\r\n                });\r\n            }}\r\n          />\r\n        </Field>\r\n        <Field>\r\n          <Button\r\n            label=\"Import\"\r\n            onClick={() => {\r\n              const el = importRef.current!;\r\n              el.click();\r\n            }}\r\n          />\r\n        </Field>\r\n        <Field.Filler />\r\n        <Field>\r\n          <Button\r\n            label=\"Reset\"\r\n            onClick={() => {\r\n              setLayout(new LayoutBuilder());\r\n            }}\r\n          />\r\n        </Field>\r\n      </FieldList>\r\n    </section>\r\n  );\r\n}\r\n","import {\n  parseCldr,\n  parseKeymap,\n  parseKlc,\n  type ParseResult,\n} from \"./parser/index.ts\";\nimport { decodeText } from \"./text.ts\";\n\nexport async function importLayout(\n  data: ArrayBufferLike | Blob,\n): Promise<ParseResult | null> {\n  if (data instanceof Blob) {\n    data = await data.arrayBuffer();\n  }\n  const text = decodeText(data);\n  for (const parser of [parseCldr, parseKeymap, parseKlc]) {\n    try {\n      const result = parser(text);\n      if (result.layout.size > 0) {\n        return result;\n      }\n    } catch {\n      /* Ignore. */\n    }\n  }\n  return null;\n}\n","import { type LayoutBuilder } from \"./layoutbuilder.ts\";\n\nexport async function exportLayout(layout: LayoutBuilder): Promise<Blob> {\n  const json = JSON.stringify(layout.toJSON(), null, 2);\n  return new Blob([json], { type: \"application/json\" });\n}\n","// extracted by mini-css-extract-plugin\nvar _1 = \"j9tuC7tZMy\";\nvar _2 = \"IE4d0u6Tcq\";\nvar _3 = \"wI6LAHA7gV\";\nvar _4 = \"Clry3DHqET\";\nexport { _1 as \"spot\", _2 as \"spot_f\", _3 as \"spot_h\", _4 as \"spot_m\" }\n","import { type KeyShape, useKeyboard } from \"@mkboard/keyboard\";\r\nimport { type CodePoint } from \"@mkboard/unicode\";\r\nimport { clsx } from \"clsx\";\r\nimport { memo, type ReactNode } from \"react\";\r\nimport * as styles from \"./HeatmapLayer.module.less\";\r\nimport { getKeyCenter, Surface } from \"./shapes.tsx\";\r\n\r\nexport const HeatmapLayer = memo(function HeatmapLayer({\r\n  histogram,\r\n  modifier,\r\n}: {\r\n  readonly histogram: Iterable<readonly [codePoint: CodePoint, f: number]>;\r\n  readonly modifier: \"h\" | \"m\" | \"f\";\r\n}): ReactNode {\r\n  type Item = [shape: KeyShape, f: number];\r\n  const keyboard = useKeyboard();\r\n  return <Surface>{items().map(draw)}</Surface>;\r\n\r\n  function items() {\r\n    const map = new Map<KeyShape, number>();\r\n    for (const [codePoint, f] of histogram) {\r\n      if (f > 0) {\r\n        const shape = getShape(codePoint);\r\n        if (shape != null) {\r\n          map.set(shape, (map.get(shape) ?? 0) + f);\r\n        }\r\n      }\r\n    }\r\n    return normalize([...map]);\r\n  }\r\n\r\n  function normalize(list: Item[]) {\r\n    const v = list.map((v) => v[1]);\r\n    const a = Math.min(...v);\r\n    const b = Math.max(...v);\r\n    return list\r\n      .map(([shape, f]) => {\r\n        return [shape, b > a ? (f - a) / (b - a) : 0.5] as Item;\r\n      })\r\n      .sort((a, b) => a[1] - b[1]);\r\n  }\r\n\r\n  function getShape(codePoint: CodePoint): KeyShape | null {\r\n    if (codePoint !== 0x0020) {\r\n      const combo = keyboard.getCombo(codePoint);\r\n      if (combo != null) {\r\n        const shape = keyboard.getShape(combo.id);\r\n        if (shape != null) {\r\n          return shape;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function draw([shape, f]: Item, index: number): ReactNode {\r\n    const { x, y } = getKeyCenter(shape);\r\n    switch (modifier) {\r\n      case \"h\": {\r\n        // Top left semicircle.\r\n        const r = f * 15 + 5;\r\n        return (\r\n          <path\r\n            key={index}\r\n            className={clsx(styles.spot, styles.spot_h)}\r\n            d={`M ${x - r} ${y + r} A${r} ${r} 0 0 1 ${x + r} ${y - r}`}\r\n          />\r\n        );\r\n      }\r\n      case \"m\": {\r\n        // Bottom right semicircle.\r\n        const r = f * 15 + 5;\r\n        return (\r\n          <path\r\n            key={index}\r\n            className={clsx(styles.spot, styles.spot_m)}\r\n            d={`M ${x - r} ${y + r} A ${r} ${r} 0 0 0 ${x + r} ${y - r}`}\r\n          />\r\n        );\r\n      }\r\n      case \"f\": {\r\n        // Full circle.\r\n        const r = f * 20 + 5;\r\n        return (\r\n          <circle\r\n            key={index}\r\n            className={clsx(styles.spot, styles.spot_f)}\r\n            cx={x}\r\n            cy={y}\r\n            r={r}\r\n          />\r\n        );\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport function* flatten(\r\n  histogram: Iterable<readonly [{ readonly codePoint: CodePoint }, number]>,\r\n): IterableIterator<[CodePoint, number]> {\r\n  for (const [{ codePoint }, f] of histogram) {\r\n    yield [codePoint, f];\r\n  }\r\n}\r\n","import { useIntlNumbers } from \"@mkboard/intl\";\r\nimport { type KeyboardStats } from \"@mkboard/keyboard\";\r\nimport { Value } from \"@mkboard/widget\";\r\nimport { type ReactNode } from \"react\";\r\nimport { FormattedMessage, useIntl } from \"react-intl\";\r\n\r\nexport function KeyboardStats({\r\n  stats: { homeRow, topRow, bottomRow, handSwitches, fingerSwitches },\r\n}: {\r\n  readonly stats: KeyboardStats;\r\n}): ReactNode {\r\n  const { formatMessage } = useIntl();\r\n  const { formatPercents } = useIntlNumbers();\r\n  return (\r\n    <ul>\r\n      <li\r\n        title={formatMessage({\r\n          id: \"layouts.stats.homeRowKeys.description\",\r\n          defaultMessage:\r\n            \"The percentage of keys typed without leaving the Caps Lock row, the more the better.\",\r\n        })}\r\n      >\r\n        <FormattedMessage\r\n          id=\"layouts.stats.homeRowKeys.name\"\r\n          defaultMessage=\"Keys on the home row:\"\r\n        />{\" \"}\r\n        <Value value={formatPercents(homeRow, 0)} />\r\n      </li>\r\n      <li\r\n        title={formatMessage({\r\n          id: \"layouts.stats.topRowKeys.description\",\r\n          defaultMessage:\r\n            \"The percentage of keys typed on the Tab row, the less the better.\",\r\n        })}\r\n      >\r\n        <FormattedMessage\r\n          id=\"layouts.stats.topRowKeys.name\"\r\n          defaultMessage=\"Keys on the top row:\"\r\n        />{\" \"}\r\n        <Value value={formatPercents(topRow, 0)} />\r\n      </li>\r\n      <li\r\n        title={formatMessage({\r\n          id: \"layouts.stats.bottomRowKeys.description\",\r\n          defaultMessage:\r\n            \"The percentage of keys typed on the Shift row, the less the better.\",\r\n        })}\r\n      >\r\n        <FormattedMessage\r\n          id=\"layouts.stats.bottomRowKeys.name\"\r\n          defaultMessage=\"Keys on the bottom row:\"\r\n        />{\" \"}\r\n        <Value value={formatPercents(bottomRow, 0)} />\r\n      </li>\r\n      <li\r\n        title={formatMessage({\r\n          id: \"layouts.stats.sameHandKeys.description\",\r\n          defaultMessage:\r\n            \"The percentage of keys typed by the same hand, the less the better.\",\r\n        })}\r\n      >\r\n        <FormattedMessage\r\n          id=\"layouts.stats.sameHandKeys.name\"\r\n          defaultMessage=\"Keys typed by the same hand:\"\r\n        />{\" \"}\r\n        <Value value={formatPercents(1 - handSwitches, 0)} />\r\n      </li>\r\n      <li\r\n        title={formatMessage({\r\n          id: \"layouts.stats.sameFingerKeys.description\",\r\n          defaultMessage:\r\n            \"The percentage of keys typed by the same finger, the less the better.\",\r\n        })}\r\n      >\r\n        <FormattedMessage\r\n          id=\"layouts.stats.sameFingerKeys.name\"\r\n          defaultMessage=\"Keys typed by the same finger:\"\r\n        />{\" \"}\r\n        <Value value={formatPercents(1 - fingerSwitches, 0)} />\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nvar _1 = \"nVb5iQmB0Q\";\nvar _2 = \"QA9mT0H_Fe\";\nexport { _1 as \"modifierPointer\", _2 as \"pointer\" }\n","import {\r\n  type Keyboard,\r\n  type KeyCombo,\r\n  type KeyShape,\r\n  useKeyboard,\r\n} from \"@mkboard/keyboard\";\r\nimport { Tasks } from \"@mkboard/lang\";\r\nimport { type CodePoint } from \"@mkboard/unicode\";\r\nimport { memo, type ReactNode, useEffect, useRef, useState } from \"react\";\r\nimport * as styles from \"./PointersLayer.module.less\";\r\nimport { getKeyCenter, Surface } from \"./shapes.tsx\";\r\n\r\nexport const PointersLayer = memo(function PointersLayer({\r\n  suffix,\r\n  delay = 1000,\r\n}: {\r\n  readonly suffix: readonly CodePoint[];\r\n  readonly delay?: number;\r\n}): ReactNode {\r\n  const keyboard = useKeyboard();\r\n  const svgRef = useRef<SVGSVGElement>(null);\r\n  const [combo, setCombo] = useState<KeyCombo | null>(null);\r\n  useEffect(() => {\r\n    const tasks = new Tasks();\r\n    setCombo(null);\r\n    if (suffix.length > 0) {\r\n      const combo = keyboard.getCombo(suffix[0]);\r\n      if (combo != null) {\r\n        tasks.delayed(delay, () => {\r\n          setCombo(combo);\r\n        });\r\n      }\r\n    }\r\n    return () => {\r\n      tasks.cancelAll();\r\n    };\r\n  }, [keyboard, suffix, delay]);\r\n  useEffect(() => {\r\n    const svg = svgRef.current;\r\n    if (svg != null) {\r\n      for (const animate of svg.querySelectorAll(\"animate\")) {\r\n        animate.beginElement();\r\n      }\r\n    }\r\n  }, [combo]);\r\n  return <Surface ref={svgRef}>{...pointers(keyboard, combo)}</Surface>;\r\n});\r\n\r\nfunction pointers(keyboard: Keyboard, combo: KeyCombo | null): ReactNode[] {\r\n  const children = [];\r\n  while (combo != null) {\r\n    const shape = keyboard.getShape(combo.id);\r\n    if (shape != null) {\r\n      children.unshift(pointer(shape, styles.pointer));\r\n      if (combo.modifier.shift) {\r\n        const l = keyboard.getShape(\"ShiftLeft\");\r\n        const r = keyboard.getShape(\"ShiftRight\");\r\n        switch (shape.hand) {\r\n          case \"left\":\r\n            children.unshift(pointer(r, styles.modifierPointer));\r\n            break;\r\n          case \"right\":\r\n            children.unshift(pointer(l, styles.modifierPointer));\r\n            break;\r\n          default:\r\n            children.unshift(\r\n              pointer(l, styles.modifierPointer),\r\n              pointer(r, styles.modifierPointer),\r\n            );\r\n            break;\r\n        }\r\n      }\r\n      if (combo.modifier.alt) {\r\n        const l = keyboard.getShape(\"AltLeft\");\r\n        const r = keyboard.getShape(\"AltRight\");\r\n        switch (shape.hand) {\r\n          case \"left\":\r\n            children.unshift(pointer(r, styles.modifierPointer));\r\n            break;\r\n          case \"right\":\r\n            children.unshift(pointer(l, styles.modifierPointer));\r\n            break;\r\n          default:\r\n            children.unshift(\r\n              pointer(l, styles.modifierPointer),\r\n              pointer(r, styles.modifierPointer),\r\n            );\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    combo = combo.prefix;\r\n  }\r\n  return children;\r\n}\r\n\r\nfunction pointer(shape: KeyShape | null, className: string): ReactNode {\r\n  if (shape == null) {\r\n    return null;\r\n  }\r\n  const { x, y } = getKeyCenter(shape);\r\n  const pointerSize = 30;\r\n  return (\r\n    <circle className={className} cx={x} cy={y} r={pointerSize}>\r\n      <animate\r\n        attributeName=\"opacity\"\r\n        from={0}\r\n        to={1}\r\n        dur=\"0.5s\"\r\n        repeatCount=\"1\"\r\n        restart=\"always\"\r\n      />\r\n      <animate\r\n        attributeName=\"r\"\r\n        from={0}\r\n        to={pointerSize}\r\n        dur=\"0.5s\"\r\n        repeatCount=\"1\"\r\n        restart=\"always\"\r\n      />\r\n    </circle>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nvar _1 = \"yicPYilwQi\";\nvar _2 = \"phQFtTYy7g\";\nvar _3 = \"YG2s2HZeDj\";\nvar _4 = \"WYmK0I0xh5\";\nvar _5 = \"NQjpbqCPr1\";\nexport { _1 as \"arc\", _2 as \"arrow\", _3 as \"f\", _4 as \"h\", _5 as \"m\" }\n","import { type KeyShape, useKeyboard } from \"@mkboard/keyboard\";\r\nimport { type CodePoint } from \"@mkboard/unicode\";\r\nimport { clsx } from \"clsx\";\r\nimport { memo, type ReactNode } from \"react\";\r\nimport { getKeyCenter, Surface } from \"./shapes.tsx\";\r\nimport * as styles from \"./TransitionsLayer.module.less\";\r\n\r\nexport const TransitionsLayer = memo(function TransitionsLayer({\r\n  histogram,\r\n  modifier,\r\n}: {\r\n  readonly histogram: Iterable<readonly [CodePoint, CodePoint, number]>;\r\n  readonly modifier: \"h\" | \"m\" | \"f\";\r\n}): ReactNode {\r\n  type Item = [shape0: KeyShape, shape1: KeyShape, f: number];\r\n  const keyboard = useKeyboard();\r\n  return (\r\n    <Surface>\r\n      <defs>\r\n        <marker\r\n          id={styles.arrow}\r\n          markerWidth=\"5\"\r\n          markerHeight=\"6\"\r\n          refX=\"5\"\r\n          refY=\"3\"\r\n          orient=\"auto\"\r\n          markerUnits=\"strokeWidth\"\r\n        >\r\n          <path\r\n            className={styles.arrow}\r\n            d=\"M 0 0 L 0 6 L 5 3 z\"\r\n            fill=\"context-stroke\"\r\n            stroke=\"none\"\r\n          />\r\n        </marker>\r\n      </defs>\r\n      {items().map(draw)}\r\n    </Surface>\r\n  );\r\n\r\n  function items() {\r\n    const list: Item[] = [];\r\n    for (const [codePoint0, codePoint1, f] of [...histogram]\r\n      .sort((a, b) => b[2] - a[2])\r\n      .slice(0, 100)) {\r\n      if (f > 0) {\r\n        const shape0 = getShape(codePoint0);\r\n        const shape1 = getShape(codePoint1);\r\n        if (shape0 != null && shape1 != null) {\r\n          list.push([shape0, shape1, f]);\r\n        }\r\n      }\r\n    }\r\n    return normalize(list);\r\n  }\r\n\r\n  function normalize(list: Item[]) {\r\n    const v = list.map((v) => v[2]);\r\n    const a = Math.min(...v);\r\n    const b = Math.max(...v);\r\n    return list\r\n      .map(([shape0, shape1, f]) => {\r\n        return [shape0, shape1, b > a ? (f - a) / (b - a) : 0.5] as Item;\r\n      })\r\n      .sort((a, b) => a[2] - b[2]);\r\n  }\r\n\r\n  function getShape(codePoint: CodePoint): KeyShape | null {\r\n    if (codePoint !== 0x0020) {\r\n      const combo = keyboard.getCombo(codePoint);\r\n      if (combo != null) {\r\n        const shape = keyboard.getShape(combo.id);\r\n        if (shape != null) {\r\n          return shape;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function draw([shape0, shape1, f]: Item, index: number): ReactNode {\r\n    if (shape0 === shape1) {\r\n      return null;\r\n    }\r\n    const { x: x0, y: y0 } = getKeyCenter(shape0);\r\n    const { x: x1, y: y1 } = getKeyCenter(shape1);\r\n    const dx = x1 - x0;\r\n    const dy = y1 - y0;\r\n    const theta = Math.atan2(dy, dx);\r\n    const l = Math.sqrt(dx * dx + dy * dy);\r\n    const ox = (y1 - y0) / l;\r\n    const oy = -(x1 - x0) / l;\r\n    const mx = x0 + (x1 - x0) / 2 + (ox * l) / 4;\r\n    const my = y0 + (y1 - y0) / 2 + (oy * l) / 4;\r\n    const t = 3;\r\n    const X1 = x0 + Math.cos(theta) * t;\r\n    const Y1 = y0 + Math.sin(theta) * t;\r\n    const X2 = x1 - Math.cos(theta) * t;\r\n    const Y2 = y1 - Math.sin(theta) * t;\r\n    return (\r\n      <path\r\n        key={index}\r\n        className={clsx(styles.arc, modifierStyle(modifier))}\r\n        d={`M ${X1} ${Y1} Q ${mx} ${my} ${X2} ${Y2}`}\r\n        opacity={f * 0.9 + 0.1}\r\n        markerEnd={`url(#${styles.arrow})`}\r\n      />\r\n    );\r\n  }\r\n});\r\n\r\nfunction modifierStyle(m: \"h\" | \"m\" | \"f\") {\r\n  switch (m) {\r\n    case \"h\":\r\n      return styles.h;\r\n    case \"m\":\r\n      return styles.m;\r\n    case \"f\":\r\n      return styles.f;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n","import { type KeyShape, useKeyboard, type ZoneId } from \"@mkboard/keyboard\";\r\nimport { type Point } from \"@mkboard/widget\";\r\nimport { memo, type ReactNode } from \"react\";\r\nimport { getKeyCenter, Surface } from \"./shapes.tsx\";\r\n\r\nexport const ZonesLayer = memo(function ZonesLayer(): ReactNode {\r\n  const keyboard = useKeyboard();\r\n  const findHomingKey = (zone: ZoneId): KeyShape | null => {\r\n    for (const shape of keyboard.shapes.values()) {\r\n      if (shape.homing && shape.inZone(zone)) {\r\n        return shape;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n  const l = findHomingKey(\"left\") ?? keyboard.getShape(\"KeyF\");\r\n  const r = findHomingKey(\"right\") ?? keyboard.getShape(\"KeyJ\");\r\n  if (l != null && r != null) {\r\n    return (\r\n      <Surface>\r\n        <LeftHand center={getKeyCenter(l)} />\r\n        <RightHand center={getKeyCenter(r)} />\r\n      </Surface>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n});\r\n\r\nconst LeftHand = memo(function LeftHand({\r\n  center: { x, y },\r\n}: {\r\n  center: Point;\r\n}): ReactNode {\r\n  return (\r\n    <svg x={x} y={y} overflow=\"visible\">\r\n      <path\r\n        d=\"m-20.952 107.51c1.05-3.47 13.56-32.34 16.11-41.01 2.89-7.28 15.54-32.02 20.5-43.35 4.94-11.32.95-21.36-7.05-26.57-8-5.22-19.13 12.52-23.3 17.79-4.16 5.26-45.2 80.97-49.51 85.73-4.3 4.75-8.21-7.2-3.34-17.49s4.16-24.48 8.34-32.13c4.17-7.65 37.56-17.74 39.96-35.61 2.42-17.88-9.7-20.38-15.2-20.38-5.48 0-29.17 15.72-29.17 15.72s4.76-4.6 2.75-9.74c-6.72-17.33-20.12.34-20.12.34s-.83-.76-4.3.09c-3.48.83-73.04 49.23-80.06 56.57-7.03 7.33-11.06 19.1-12.59 38.25a153.26 153.26 0 01-2.28 15.62h159.3a60.79 60.79 0 00-.04-3.83z\"\r\n        fill=\"#797979\"\r\n        opacity=\".16619\"\r\n      />\r\n      <path\r\n        d=\"m42.318 78.87c-2.53-2.53-8.34 1.68-13.84 6.35-5.14 4.37-12.82 5.61-18.26 26.12h32.51l.2-1.03s1.91-28.9-.61-31.44z\"\r\n        fill=\"#797979\"\r\n        opacity=\".16619\"\r\n      />\r\n      <path\r\n        d=\"m-22.232 154.6s11.18-26.43 14.94-29.77c-.56-13.24 8.77-46.4 24.1-46.81 4.18-4.46 6.55-6.13 11.28-6.13.28 5.85 2.5 17.27-1.67 33.15 2.13 8.14 2.79 15.88 3.06 17.84.2 1.32 2 3.9 1.68 8.41-.42 5.96-6.8 17.88-9.3 23.31z\"\r\n        fill=\"#eebc84\"\r\n      />\r\n      <path\r\n        d=\"m1.8283 111.94c-.2-6.9 2.65-13.93 5.44-19.5 3.66-7.32 6.5-11.6 9.06-14.4-15.04 1.1-24.17 33.69-23.62 46.79-3.76 3.33-15.14 29.77-15.14 29.77h29.35c20.16-10.65 3.92-24.5.15-28.52-4.72-5.06-5.18-12.1-5.24-14.14z\"\r\n        fill=\"#eebc84\"\r\n      />\r\n      <path\r\n        d=\"m-.63166 127.08c-.84-4.04-1.1-11.31-.8-13.54.69-5.56 3.14-13.67 7.23-22.01 2.81-5.72 6.71-10.44 9.32-13.33-11.02 2.07-18.66 21-21.36 35.43-.07.4-1.33 10.85-1.4 11.24a4.24 4.24 0 017 2.2z\"\r\n        fill=\"#e7af77\"\r\n      />\r\n      <path\r\n        d=\"m-7.6117 124.78c-6.25 5.94-14.75 29.76-14.75 29.76h4.13c.13.12.48-4.54 4.32-9.86 4.32-6 12.53-11.6 12.59-15.95.04-4.15-3.83-5.33-6.3-3.95z\"\r\n        fill=\"#e7af77\"\r\n      />\r\n      <path\r\n        d=\"m31.158 130.31c-3.55 12.64-12.38 7.47-23.2-3.4 13.43 16.67-4.41 26.54-5.85 27.8 6.83 0 15.88-.21 19.64-.21 10.19-18.5 9.41-24.2 9.41-24.2z\"\r\n        fill=\"#d3915a\"\r\n        opacity=\".43\"\r\n      />\r\n      <path\r\n        d=\"m7.8583 2.2696c-1.67-5.44-7.18-9.29-11.6-6.9-3.76 2.04-4.42 2.87-6.06 4.39-2.4 2.22-2.47 4.28-9.5 8.67-3.53 2.2-5.12 4-7.7 7.05-5.44 6.47-9.06 11.9-18.12 19.7-7.4 6.38-9.2 18.68-12.95 26.47-2.71 5.63-6.45 15.87-9.47 20.96-2.6 4.39-8.56 7.17-9.75 3.55-2.72-8.14 7.93-13.58 11.28-39.28.8-6.21 8.41-10.46 11.7-13.58 3.97-3.76 7.6-8.42 9.83-10.45 2.29-2.09 7.93-3.2 13.15-7.94 4.46-4.04 6.49-7.94 5.97-12.33-.29-2.4-1.6-4.48-2-5.22-4.19-8.04-12.53-6.06-22.35-.84-8.53 4.54-17.24 7.1-17.24 7.1s3.59-2.5 3.76-6.79c.2-5.12-4.29-8.02-6.68-8.25-2.92-.28-2.76-2-11.46 3.9-2.02 1.36-4.53 2.76-6.81 4.07l-1.64.95c-1.93 1.13-3.68 2.87-5.56 4.04-.9.56-3.92 2.43-4.8 2.99-2.3 1.46-4.13 1.98-6.13 3.2-4.67 2.85-10.6 6.55-10.6 6.55s2.23-4.46 1.96-6.37c-.83-6.06-6.97-8.46-9.75-7.7-3.31.9-7.25 4.44-11.66 9.79-3.34 4.04-7.03 10.95-8.26 12.43-4.24 5.1-8.07 8.07-11.4 13.69-4.7 7.94-8.1 14.09-13.05 22.46-5.43 9.2-2.08 9.72-7.31 32.29-3.71 16-11.5 34.37-12.75 41.47-1.22 6.91-.62 22.16-.62 22.16l150.73-.21c.41-4.18 3.27-26.96 4.1-29.46.84-2.5 2.1-18.19 2.72-22.37.63-4.17 1.25-6.68 2.72-9.4 1.46-2.71 11.9-24.03 14.63-33.85 5.01-7.94 11.49-19.23 12.75-22.15 9.5-17.76 12-23.93 11.28-30.19-.21-1.8-1.16-3.95-1.36-4.6z\"\r\n        fill=\"#eebc84\"\r\n      />\r\n      <path\r\n        d=\"m-11.982 4.4396c-1.8 3.18 6.67 10.2 12.7 6.67 4.41-2.54 5.95-5.21 6.93-6.62 1.92-2.77-6.36-11.9-12.46-7.76-3.7 2.5-5.34 4.46-7.17 7.7z\"\r\n        fill=\"#d79260\"\r\n      />\r\n      <path\r\n        d=\"m-34.872 124.83c.83-2.5 2.08-18.19 2.71-22.37.63-4.18 1.25-6.68 2.71-9.4 1.47-2.71 11.92-24.03 14.64-33.85 5.01-7.94 11.49-19.23 12.74-22.15 9.88-15.26 10.64-25.38 10.29-29.9-.12-1.44-.15-3.3-.26-4.31-2.76 7.73-9.97 16.14-13.37 23.9-7.25 16.5-16.94 14.97-17.42 21.6-1.53 21.1-12.68 24.72-14.9 38.1-2.28 13.66-2.92 19.29-3.9 26.11-.98 6.83-2.92 1.4-2.65 8.64.2 4.88.37 11.9.48 15.96l7.46-.01c.42-4.17.63-9.82 1.46-12.32z\"\r\n        fill=\"#e7af77\"\r\n      />\r\n      <path\r\n        d=\"m7.7483 4.4496c-.62 3.56-7.73 21.95-11.7 27.8-3.96 5.86-8.56 14.84-16.71 18.18 2.71 6.06 1.65 15.41-2.09 23.2-2.72 5.64-6.06 11.28-10.04 15.67-1.67 4.8-6.26 19.43-7.72 25.91-1.46 6.47-6.14 39.43-6.14 39.43h15.68c-8.78-8.57-4.74-27.31-3.9-29.81.83-2.5 2.08-18.19 2.71-22.37.63-4.17 1.25-6.68 2.72-9.4 1.46-2.71 11.9-24.03 14.63-33.85 5.01-7.94 11.49-19.23 12.75-22.15 13.78-21.31 9.82-32.6 9.82-32.6zm-47.9 1.9c1.89.66 5.78.7 10.88-3.86 2.22-1.98 2.5-4.31 1.44-5.91-2.1-3.24-6.2-6.1-10.99-4.45-2.22.77-8.19 3.65-8.31 6.5-.12 2.54 2.26 6.06 6.99 7.72z\"\r\n        fill=\"#d79260\"\r\n      />\r\n      <path\r\n        d=\"m-67.202 23.01c2.47 1.78 8.2-3.65 9.86-4.87 6.16-4.49 8.26-3.23 9.3-7.3.8-3.13-4.91-9.96-9.82-8.05-3.76 1.46-4.91 4.5-5.75 7.42-.8 2.8-1.6 3.01-3.03 5.33-1.15 1.87-3.18 5.58-.56 7.47z\"\r\n        fill=\"#f3cc97\"\r\n      />\r\n      <path\r\n        d=\"m-81.822-6.7804c-1.55 1.22-1.9 5.44.84 7.59 3.03 2.36 4.97 3.01 8.2 1.5 2.94-1.37 7.96-5.1 8.85-6.71.9-1.61-4.45-6.42-7.18-7.22-2.02-.6-6.52 1.54-10.71 4.84zm-44.23 6.96c-1.31.63-7.71 7.72-7.35 9.63.45 2.35 4.8 4.38 7.58 3.31 2.26-.87 7.36-8 7.36-9.5 0-1.42-5.36-4.5-7.58-3.44z\"\r\n        fill=\"#d79260\"\r\n      />\r\n      <path\r\n        d=\"m-70.192 120.02c-8.36-13.38 11.84-20.9 1.39-27.17-9.75-5.85-23.1 17.48-28.83 22.15-6.7 5.44-16.58 6.47-19.09 4.6-4.45-3.34-9.9-5.01-8.63-11.43.75-3.86 7.51-18.1 5.43-19.08-2.89-1.35-8.78 11.7-11.7 16.72-4.33 7.41-12.4 16.71-18.8 17.97-6.02 1.18-9.2-6.41-12-7.8-8.55-4.28-9.47 4.17-13.5 6.96-3.81 2.63-8.17-.42-8.95-4.3-2.02 5.89-3.7 10.79-4.22 13.7-1.22 6.9-.62 22.16-.62 22.16l150.73-.21c.41-4.18 3.27-26.96 4.1-29.46.74-2.23 1.82-14.76 2.48-20.5-6.44 9.8-29.53 28.9-37.8 15.69z\"\r\n        fill=\"#e7af77\"\r\n      />\r\n      <path\r\n        d=\"m-64.472 128.52c-15.89-1.11-16.69 11.4-29.96 11.56-11 .14-11.83-6.73-24.94-9.61-22.84-5.02-25.07 18.94-35.66 15.6-31.04-9.81-34.69 8.43-34.69 8.43l143.68-.2c6.58-16.34-5.37-24.87-18.43-25.79z\"\r\n        fill=\"#d3915a\"\r\n        opacity=\".37\"\r\n      />\r\n      <path\r\n        d=\"m-31.532 7.1796c-3.03 2.61-6.8 4.07-12.33 3.33-1.25 3.98-6.38 10.35-11.8 14.74-1.88 1.51-8.9 7.95-11.5 17.34-2.61 9.4-2.71 14.1-8.78 25.8-2.58 5-5.33 15.8-2.3 19.03 1.43 1.52 5.54 1.72 8.55-2.18-2.87 2.67-6.67 3.72-7.6.92-2.72-8.14 7.93-13.58 11.28-39.28.8-6.22 8.4-10.46 11.7-13.59 3.97-3.75 7.6-8.41 9.82-10.44 2.3-2.09 7.94-3.2 13.16-7.94 4.46-4.04 6.49-7.94 5.97-12.33a12.95 12.95 0 00-1.67-4.63c-.26 2.79-1.24 6.41-4.5 9.23z\"\r\n        fill=\"#d3915a\"\r\n      />\r\n      <path\r\n        d=\"m-31.532 11.35c-6.06 5.33-8.68 3.03-11.7 5.54-1.88 1.56-6.17 7.84-8.15 9.1-1.95 1.22-9.07 7.16-10.95 14.16 2.66-2.78 6.08-5.02 8.02-6.86 3.97-3.75 7.6-8.41 9.83-10.44 2.29-2.09 7.93-3.2 13.16-7.94 4.38-3.98 6.41-7.83 5.97-12.14-1.1 2.57-3.8 6.5-6.18 8.59z\"\r\n        fill=\"#cb854f\"\r\n      />\r\n      <path\r\n        d=\"m-120.34 14.49c-4.74 4.25-5.99 11.08-9.82 14.63s-11.57 14.57-14.28 18.32c-6.54 9.05-3 20.62-7.53 26.74-2.74 3.72-1.95 11.1-3.11 16.52 1.29-1.33 2.44-2.61 2.77-3.49a91.26 91.26 0 002.93-11.29c.41-3.13 2.85-13.58 4.17-16.71 1.33-3.14 3.52-9.56 6.06-13.38 7.53-11.28 10.45-14.48 12.54-17.76 2.1-3.28 4.66-7.8 6.97-10.66a63.13 63.13 0 012.83-3.24c.32-.66 2.15-4.52 1.9-6.26a8.8 8.8 0 00-1.51-3.9c.92 4.05-.87 7.74-3.92 10.48z\"\r\n        fill=\"#d3915a\"\r\n      />\r\n      <path\r\n        d=\"m-125.1 31.04c1.32-2.33 6.07-5.11 9.97-3.21s3.62 4.56 3.94 8.02c.29 3.05-3.15 8.21-5.04 11.45-8.35 14.3-9.66 20.19-17.4 19.87-13.47-.54-1.9-22.07 3.7-31.35.85-1.44 3.83-3.02 4.83-4.78zm-40.72 29.72c.7-1.85 3.84-4.44 6.9-3.5 3.08.93 3.18 2.9 3.82 5.4.56 2.19-.89 6.6-2.35 8.95-1.56 2.52-1.46 8.24-7.13 7.39-6.95-1.05-7.23-6.76-4.22-14.2.46-1.14 2.46-2.63 2.99-4.04zm73.58-35.67c4-2.43 12.89-3.1 18.43 4.87 3.25 4.66-1.37 14.2-2.66 16.7-2.9 5.56-4.64 10.43-11.6 28.51-2.4 6.25-9.2 17.2-15.76 16.23-7.07-1.04-8.7-12.4-7.89-16.58 3.48-17.73 4.18-19.47 8.35-30.25 4.84-12.48 8.47-17.86 11.13-19.48zm17.73 65.11c4.32-.7 8.36-2.22 11.29 2.5.28.46 3.26 6.06-.98 7.4-5.71 1.8-12.12 17.13-2.5 22 9.62 4.88 22.98-4.04 21.87-15.32-.21-2.13-6.14-3.76-1.4-5.43 5.66-2 7.24-22.29 9.9-28.56 2.64-6.27 12.25-14.2 8.9-18.67-9.33-13.14-20.93-9.72-25.07-7.2-2.16 5.3-3.64 10.98-5.7 15.28-2.72 5.64-6.46 15.88-9.48 20.97-2.3 3.86-7.2 6.47-9.14 4.56-.7 1.32-1.02 3 2.3 2.47z\"\r\n        fill=\"#f3cc97\"\r\n      />\r\n      <path\r\n        d=\"m-69.912 3.1396c-7.94 2.78-10.31 8.08-20.34 12.4-4.98 2.14-7.52 8.64-9.2 11.56-1.67 2.92-5.42 6.27-8.2 9.89-2.02 2.62-6.7 12.82-7.39 18.1-.7 5.3-5.99 21.32-9.2 24.39-2.59 2.48-2.81 10.8-3.98 15.43 3.12-4.4 6.08-9.83 8-12.2 3.12-3.86 4.03-14.64 5.74-19.75a559.8 559.8 0 005.22-16.5c2.09-7.1 5.44-11.07 10.13-18.6 5.03-8.04 6.9-8.04 11.08-10.65 3.15-1.97 14.48-9.4 21.18-13.6l-.07.01s3.59-2.5 3.76-6.79v-.35a10.6 10.6 0 01-6.73 6.66z\"\r\n        fill=\"#d3915a\"\r\n      />\r\n      <path\r\n        d=\"m30.308 134.62a6.62 6.62 0 01-3.7 2.5 9.99 9.99 0 01-8.73-1.59 9.43 9.43 0 01-2.85-3.46 13 13 0 003.22 2.92 11.16 11.16 0 003.96 1.53c1.4.27 2.84.25 4.24-.02 1.4-.3 2.78-.85 3.86-1.88zm-182.26-69.35a8.83 8.83 0 00-1.83-3.93 11.67 11.67 0 00-3.23-2.78 11.3 11.3 0 00-4.02-1.47 8.71 8.71 0 00-4.31.38 7.16 7.16 0 014.38-1.03c1.54.1 3.04.62 4.37 1.4a10.32 10.32 0 013.34 3.12 7.2 7.2 0 011.28 4.31zm94.17-63.7a4.05 4.05 0 012.18-.13c.73.14 1.43.4 2.09.73 1.32.65 2.49 1.56 3.54 2.57a14.42 14.42 0 012.65 3.5c.34.65.62 1.35.76 2.08.13.72.14 1.52-.22 2.16.18-.7.07-1.4-.17-2.06a9.18 9.18 0 00-.94-1.85 18.77 18.77 0 00-2.66-3.23c-1-.98-2.09-1.88-3.28-2.6a9.53 9.53 0 00-1.87-.9 4.38 4.38 0 00-2.08-.26zm38.54 13.3a4.38 4.38 0 012.21-.71 8.7 8.7 0 012.35.2c1.54.33 2.99.95 4.35 1.73a15.4 15.4 0 013.66 2.89c.53.58 1 1.22 1.35 1.93a3.48 3.48 0 01.36 2.28 3.62 3.62 0 00-.72-2.08 9.69 9.69 0 00-1.46-1.67 19.8 19.8 0 00-3.62-2.63 19.5 19.5 0 00-4.08-1.82 9.7 9.7 0 00-2.19-.41 4.62 4.62 0 00-2.2.29zm-122.97 9.44a6.6 6.6 0 012.51.4c.81.27 1.59.63 2.33 1.05.73.43 1.44.92 2.06 1.52a4.56 4.56 0 011.39 2.15 8 8 0 00-1.8-1.65 40.91 40.91 0 00-4.23-2.46c-.73-.37-1.46-.73-2.26-1z\"\r\n        fill=\"#d3915a\"\r\n        opacity=\".85\"\r\n      />\r\n      <path\r\n        d=\"m-18.142 17.49a6.68 6.68 0 012.54.11c.84.17 1.64.44 2.43.77.78.35 1.53.75 2.23 1.28a4.55 4.55 0 011.61 1.97 8 8 0 00-1.97-1.43 25.27 25.27 0 00-2.2-1.05 32.4 32.4 0 00-4.65-1.65zm-32.78-6.35a6.64 6.64 0 01-2.43-.73 12.82 12.82 0 01-2.18-1.33 10.57 10.57 0 01-1.84-1.78 4.55 4.55 0 01-1.1-2.31c.42.73.99 1.31 1.58 1.87a36.8 36.8 0 003.86 3c.68.45 1.35.9 2.11 1.28zm-118 56.43c.22.58.59 1.06 1 1.5.42.43.88.82 1.36 1.18a15.44 15.44 0 003.08 1.8c1.1.47 2.24.81 3.42.97 1.18.13 2.4.06 3.57-.34a6.1 6.1 0 01-3.62.98 9.96 9.96 0 01-3.7-.85 11.55 11.55 0 01-3.17-2.06c-.9-.85-1.79-1.91-1.95-3.18zm4.8-.1c.38-.04.77.1 1.07.27.33.16.6.36.87.52.25.18.5.32.78.46s.59.25.94.42c-.34.18-.72.25-1.11.21a2.42 2.42 0 01-1.07-.39 4.52 4.52 0 01-.8-.7l-.68-.8zm-.83-5.12c1.43.43 2.84.35 4.34.79a4.73 4.73 0 012.01 1.17c.57.55.93 1.27 1.07 2a7.5 7.5 0 00-1.5-1.5 6.04 6.04 0 00-1.83-.87c-.66-.21-1.38-.35-2.08-.56a4.86 4.86 0 01-2-1.04zm44.21-37.5c.62-.4 1.4-.5 2.12-.5.74.02 1.48.17 2.18.38 1.41.43 2.71 1.14 3.91 1.97a14.37 14.37 0 013.18 3.02c.45.58.84 1.22 1.1 1.92.24.7.38 1.48.13 2.17a3.39 3.39 0 00-.51-2 9.05 9.05 0 00-1.22-1.68 18.83 18.83 0 00-3.16-2.75 18.42 18.42 0 00-3.65-2.04 9.67 9.67 0 00-2-.58 4.34 4.34 0 00-2.09.08zm25.69-23.3c.85.14 1.63.54 2.36.98.72.44 1.4.97 2.02 1.54.62.58 1.2 1.22 1.67 1.94a4.57 4.57 0 01.85 2.43 7.98 7.98 0 00-1.37-2.02 26.9 26.9 0 00-1.72-1.74 40.53 40.53 0 00-1.83-1.63c-.64-.52-1.27-1.04-1.98-1.5zm-27.3 29.66a6.61 6.61 0 012.54.28 11.14 11.14 0 014.51 2.32 4.6 4.6 0 011.5 2.08 7.93 7.93 0 00-1.88-1.55 24.7 24.7 0 00-2.13-1.2 41.18 41.18 0 00-2.21-1.04c-.76-.32-1.51-.65-2.33-.89zm-3.96 1.16c.2.58.55 1.08.95 1.53s.84.85 1.3 1.24a15.3 15.3 0 003.03 1.9c1.07.52 2.2.9 3.37 1.1 1.17.18 2.39.18 3.58-.19a6.12 6.12 0 01-3.65.84 9.88 9.88 0 01-3.66-1 11.6 11.6 0 01-3.1-2.17c-.88-.89-1.72-1.98-1.82-3.25zm36.49-8.93a6.27 6.27 0 013.19-.93c1.13-.04 2.25.11 3.34.35 2.2.49 4.27 1.4 6.22 2.5a22.74 22.74 0 015.28 4.12 13 13 0 011.98 2.73c.48 1 .84 2.15.6 3.26a5.27 5.27 0 00-.96-3.06 12.73 12.73 0 00-2.08-2.48 27.7 27.7 0 00-5.23-3.85 27.33 27.33 0 00-5.96-2.6 13.42 13.42 0 00-3.2-.56 6.64 6.64 0 00-3.18.52zm1.78 6.3c.22.58.59 1.07 1 1.5.42.43.87.82 1.35 1.18a15.51 15.51 0 003.1 1.8c1.08.48 2.23.82 3.4.97 1.19.14 2.4.07 3.58-.32a6.12 6.12 0 01-3.61.97 9.97 9.97 0 01-3.7-.86 11.64 11.64 0 01-3.18-2.05c-.9-.85-1.79-1.92-1.95-3.18zm-5.12 1.9a5.91 5.91 0 00.92 2.52c.45.76 1.04 1.46 1.68 2.08a17.75 17.75 0 009.46 4.75c1.77.22 3.62.02 5.28-.8a7.27 7.27 0 01-2.53 1.19c-.9.23-1.86.29-2.8.25a13.65 13.65 0 01-5.42-1.53 15.07 15.07 0 01-4.45-3.41 10.8 10.8 0 01-1.59-2.34 5.5 5.5 0 01-.55-2.73zm47.63 12.86a6.1 6.1 0 013.11-.92c1.1-.04 2.2.1 3.26.33 2.14.48 4.16 1.36 6.05 2.44a22.11 22.11 0 015.14 4.01 12.7 12.7 0 011.92 2.66c.48.97.82 2.1.58 3.17a5.06 5.06 0 00-.94-2.97 12.43 12.43 0 00-2.02-2.41 27.01 27.01 0 00-5.1-3.74 26.66 26.66 0 00-5.78-2.54 12.95 12.95 0 00-3.1-.55 6.47 6.47 0 00-3.12.51zm13.24 8.68c-2.1-.94-4.03-2.14-6.07-3.02a27.3 27.3 0 00-6.42-1.97c1.14-.12 2.3-.07 3.45.15 1.14.21 2.25.59 3.3 1.06a24.1 24.1 0 015.74 3.78zm-15.32-1.91c.43.8.97 1.51 1.6 2.13.62.64 1.3 1.21 2.02 1.71a20.9 20.9 0 004.7 2.45 21.69 21.69 0 0010.49 1.23 14.8 14.8 0 01-5.4.67 17.8 17.8 0 01-10.16-3.83c-1.42-1.17-2.7-2.61-3.25-4.36zm-13.4 48.3a9.32 9.32 0 014.83-1.54c1.72-.07 3.5.33 5.03 1.16a8.67 8.67 0 013.63 3.7 8.33 8.33 0 01.78 5 10.04 10.04 0 00-1.35-4.69 9.03 9.03 0 00-3.46-3.27 11.01 11.01 0 00-9.46-.35zm-53.59 1.98a8.48 8.48 0 013.78-3.59 8.76 8.76 0 015.26-.7 8.96 8.96 0 017.26 6.97 10.9 10.9 0 00-2.96-4.07 9.43 9.43 0 00-4.44-2.08 9 9 0 00-4.86.48 10.13 10.13 0 00-4.04 2.99zm-42.98 4.67a6.77 6.77 0 013.32-3.85 9.98 9.98 0 015.08-1.2c1.75.06 3.52.57 4.97 1.57a8.26 8.26 0 013.14 4.04 9.96 9.96 0 00-3.5-3.48 9.85 9.85 0 00-4.64-1.3c-1.63-.05-3.27.28-4.76.95a7.65 7.65 0 00-3.61 3.27z\"\r\n        fill=\"#d3915a\"\r\n        opacity=\".85\"\r\n      />\r\n      <path\r\n        d=\"m7.8183 2.2796a11.4 11.4 0 00-5.61-6.84 6.7 6.7 0 00-4.4-.6c-.74.16-1.43.5-2.08.88a21.2 21.2 0 00-5.46 4.05c-1.13 1.02-1.95 2.32-2.96 3.46-2.02 2.3-4.6 4-7.17 5.62a24.42 24.42 0 00-3.57 2.8 41.93 41.93 0 00-3.08 3.35c-1.97 2.32-3.85 4.7-5.78 7.06a100.3 100.3 0 01-12.68 13.1 23.69 23.69 0 00-5.47 7.18 63.44 63.44 0 00-3.48 8.42c-1 2.86-1.92 5.76-3.06 8.6-.55 1.41-1.25 2.77-1.86 4.15-.63 1.4-1.22 2.79-1.8 4.2-1.2 2.8-2.34 5.6-3.57 8.39a97.37 97.37 0 01-1.93 4.14c-.7 1.34-1.37 2.73-2.37 3.91a12.2 12.2 0 01-3.52 2.92c-.67.37-1.39.66-2.16.8a3.07 3.07 0 01-2.28-.36c-.7-.46-.97-1.29-1.14-2.02a8.18 8.18 0 01-.24-2.3c.05-1.54.53-3.02 1.1-4.44 1.18-2.81 2.66-5.47 3.9-8.24a75.15 75.15 0 005.63-17.27c.3-1.49.55-2.99.78-4.48l.32-2.27c.13-.76.37-1.5.68-2.2 1.28-2.85 3.59-5.01 5.9-6.96 1.18-.98 2.39-1.9 3.56-2.85a34.72 34.72 0 003.32-3.1c2.12-2.17 4.09-4.48 6.14-6.74.51-.56 1.03-1.11 1.58-1.65a8.2 8.2 0 011.88-1.37c1.35-.75 2.75-1.34 4.1-2a30.4 30.4 0 007.56-4.95c2.22-2.02 4.26-4.36 5.27-7.2.5-1.4.71-2.9.58-4.39a11.2 11.2 0 00-1.27-4.26c-.7-1.33-1.38-2.7-2.4-3.8a8.28 8.28 0 00-3.66-2.39 10.9 10.9 0 00-4.43-.37c-1.49.15-2.95.51-4.39.97a51.86 51.86 0 00-8.27 3.7 103.86 103.86 0 01-16.9 6.94l-1.37.42 1.14-.88c2.37-1.8 4-4.77 3.61-7.79-.3-2.99-2.6-5.57-5.4-6.55-.34-.12-.7-.2-1.07-.23a9.56 9.56 0 01-1.16-.21 4.92 4.92 0 00-2.18-.18c-1.44.29-2.8 1.07-4.12 1.83a76.1 76.1 0 00-3.87 2.5 71.45 71.45 0 01-3.95 2.43l-4 2.3c-1.35.74-2.52 1.7-3.74 2.66-.6.48-1.22.95-1.88 1.39l-1.96 1.23c-1.32.8-2.6 1.63-3.93 2.43-1.35.8-2.8 1.4-4.15 2.07-1.34.7-2.63 1.58-3.95 2.37l-7.86 4.87-.85.53.44-.9c.43-.9.83-1.83 1.18-2.76.33-.93.65-1.9.74-2.84a8.1 8.1 0 00-2.16-5.25 9.22 9.22 0 00-5.02-2.82c-1.93-.48-3.77.52-5.42 1.59a30.33 30.33 0 00-4.52 3.9 66.02 66.02 0 00-4 4.5c-2.47 3.14-4.5 6.64-6.62 10.08-.53.83-1.06 1.74-1.76 2.5-.65.78-1.32 1.54-2 2.3-1.37 1.48-2.78 2.93-4.11 4.42a42.66 42.66 0 00-3.73 4.71c-1.11 1.65-2.09 3.43-3.11 5.16l-12.1 20.94a21.26 21.26 0 00-2.1 5.56c-.42 1.93-.6 3.95-.84 5.95a145.3 145.3 0 01-1.84 11.99 172.73 172.73 0 01-2.71 11.8 234.5 234.5 0 01-3.5 11.62c-1.26 3.84-2.58 7.65-3.89 11.46-1.3 3.82-2.64 7.62-3.66 11.5a31.89 31.89 0 00-.9 5.9c-.15 2.01-.22 4.02-.26 6.03-.07 4.03-.03 8.06.11 12.08l-.38-.37 75.37-.13 75.37-.01-.32.28c.94-8.2 2.01-16.39 3.24-24.56l.51-3.06c.1-.51.19-1.02.32-1.53.07-.27.16-.51.21-.74l.15-.74c.37-2.02.6-4.07.83-6.13l1.32-12.3c.21-2.06.51-4.11.94-6.14a21.67 21.67 0 012.05-5.89 305.59 305.59 0 005.43-11.11 336.48 336.48 0 005.05-11.3c1.58-3.8 3.16-7.63 4.3-11.58v-.02l.01-.02a376.8 376.8 0 009.8-16.46c1.04-1.86 2.1-3.72 2.98-5.65a449 449 0 004.37-8.29c1.42-2.78 2.8-5.58 4.05-8.44 1.23-2.86 2.37-5.8 2.83-8.88.23-1.54.25-3.11.06-4.66-.21-1.55-.8-3-1.33-4.47zm.08-.03c.52 1.46 1.13 2.92 1.35 4.49.2 1.55.18 3.13-.05 4.68-.46 3.1-1.58 6.05-2.8 8.92a149.63 149.63 0 01-4.03 8.47 521.69 521.69 0 01-4.34 8.3v-.01c-.89 1.95-1.93 3.8-2.96 5.67a375.76 375.76 0 01-9.76 16.52l.02-.04c-1.14 3.98-2.7 7.82-4.27 11.63a336.64 336.64 0 01-5.02 11.33 298.44 298.44 0 01-5.4 11.15 21.26 21.26 0 00-2 5.77c-.41 2.02-.7 4.06-.91 6.1l-1.27 12.32c-.23 2.05-.45 4.1-.8 6.16l-.16.77c-.07.28-.16.51-.21.75-.12.49-.21 1-.3 1.5-.19 1.01-.35 2.03-.5 3.04a699.58 699.58 0 00-3.16 24.55l-.03.28h-.28l-75.37.2-75.36.07h-.38l-.01-.36c-.14-4.04-.18-8.07-.1-12.12.04-2.02.12-4.04.27-6.07.16-2.01.39-4.06.9-6.03 1.05-3.93 2.4-7.74 3.7-11.56 1.32-3.82 2.64-7.62 3.9-11.45 1.25-3.83 2.44-7.68 3.5-11.56a171.59 171.59 0 002.7-11.77c.79-3.95 1.4-7.93 1.84-11.93.25-2 .43-4.02.86-6.02a22 22 0 012.15-5.73l12.14-20.96c1.04-1.74 2-3.5 3.14-5.2a43.39 43.39 0 013.8-4.77c1.34-1.5 2.76-2.95 4.11-4.43.68-.74 1.35-1.5 2-2.26.67-.73 1.16-1.58 1.7-2.43 2.12-3.42 4.16-6.94 6.68-10.14a67.5 67.5 0 014.03-4.54 30.8 30.8 0 014.64-3.98 13.17 13.17 0 012.74-1.43c.48-.18 1-.33 1.55-.35a6.75 6.75 0 011.58.11 9.82 9.82 0 015.35 3.02 8.64 8.64 0 012.31 5.7 12.53 12.53 0 01-.78 2.99 32.54 32.54 0 01-1.2 2.81l-.42-.38 7.85-4.86c1.33-.8 2.6-1.66 4-2.38 1.39-.7 2.8-1.28 4.12-2.05 1.3-.78 2.62-1.63 3.92-2.43l1.96-1.22c.62-.42 1.24-.88 1.84-1.36 1.2-.94 2.42-1.94 3.8-2.7l4-2.29a70.74 70.74 0 003.93-2.41 80.69 80.69 0 013.9-2.5c1.34-.77 2.7-1.58 4.3-1.9.8-.17 1.65 0 2.38.19.37.08.74.15 1.12.2.4.03.8.13 1.17.25a8.6 8.6 0 015.74 7 8.32 8.32 0 01-.83 4.63 10.38 10.38 0 01-3 3.63l-.21-.45a103.43 103.43 0 0016.82-6.87 52.32 52.32 0 018.36-3.72c1.46-.48 2.95-.84 4.5-1 1.52-.15 3.1-.08 4.6.4a8.72 8.72 0 013.86 2.54c.52.57.98 1.2 1.37 1.87.38.68.74 1.33 1.09 2.02a11.68 11.68 0 011.32 4.42 10.99 10.99 0 01-.61 4.58c-1.06 2.94-3.16 5.32-5.4 7.37a30.85 30.85 0 01-7.66 5c-6.11 1.8-9.26 7.45-13.62 11.66a34.81 34.81 0 01-3.35 3.12c-1.19.96-2.4 1.87-3.57 2.84-2.3 1.92-4.58 4.06-5.83 6.81-.3.68-.52 1.4-.65 2.13l-.33 2.25c-.23 1.5-.48 3-.79 4.5a75.09 75.09 0 01-5.68 17.32c-1.26 2.78-2.75 5.44-3.92 8.23a12.9 12.9 0 00-1.1 4.36 8.07 8.07 0 00.23 2.23c.18.73.42 1.46 1.04 1.88.6.4 1.4.44 2.1.32a7.54 7.54 0 002.1-.76 12.01 12.01 0 003.47-2.87c.98-1.15 1.64-2.53 2.35-3.87a92.99 92.99 0 001.93-4.13c1.23-2.77 2.4-5.58 3.58-8.38.6-1.4 1.18-2.8 1.8-4.19.64-1.39 1.33-2.74 1.88-4.15 1.13-2.82 2.05-5.72 3.06-8.6 1-2.86 2.09-5.72 3.5-8.42 1.4-2.7 3.17-5.25 5.5-7.23a99.68 99.68 0 0012.68-13.07c1.93-2.34 3.81-4.73 5.79-7.05a42.49 42.49 0 013.08-3.36 24.46 24.46 0 013.6-2.81c2.57-1.6 5.13-3.31 7.14-5.6 1.01-1.12 1.83-2.43 2.97-3.46a21.27 21.27 0 013.52-2.9c.64-.4 1.3-.8 1.96-1.16a7.3 7.3 0 012.1-.89 6.8 6.8 0 014.47.62c2.76 1.37 4.76 4 5.66 6.9z\"\r\n        fill=\"#8c6239\"\r\n      />\r\n      <path\r\n        d=\"m-134.15 100.96a11.02 11.02 0 003.06-2.53 35.18 35.18 0 002.5-3.14c1.55-2.19 2.95-4.46 4.36-6.75 1.39-2.27 2.8-4.6 4.41-6.7a17.15 17.15 0 001.55-3.66c.4-1.27.71-2.57 1-3.87.6-2.6 1.05-5.25 1.63-7.87.27-1.31.59-2.63 1.02-3.91l1.24-3.83a634.81 634.81 0 002.4-7.66l1.16-3.85a43.4 43.4 0 011.26-3.84c1.94-5.09 5.17-9.48 8-14 1.43-2.24 2.83-4.57 4.56-6.67a17.55 17.55 0 012.93-2.87c1.1-.84 2.3-1.48 3.45-2.16 7.65-4.66 14.9-9.53 22.63-14.15 1.49-.88 1.75-.76.25.2-7.5 4.85-14.86 9.9-22.46 14.68-1.16.68-2.33 1.3-3.37 2.09a16.77 16.77 0 00-2.8 2.74c-1.68 2.04-3.05 4.32-4.5 6.6-2.89 4.5-6.13 8.83-8.07 13.78a43.12 43.12 0 00-1.26 3.79l-1.2 3.84a624.53 624.53 0 01-2.46 7.65c-.82 2.57-1.8 5.05-2.32 7.67-.58 2.6-1.06 5.24-1.68 7.86a49.76 49.76 0 01-1.06 3.9 17.53 17.53 0 01-1.62 3.7 80.39 80.39 0 00-4.49 6.68 119.36 119.36 0 01-4.43 6.7 35.23 35.23 0 01-2.54 3.13 11.16 11.16 0 01-3.12 2.53l-.03-.07zm17.1-86.47a36.58 36.58 0 00-4.4 5.64c-1.2 1.8-2.32 3.65-3.44 5.5a57.34 57.34 0 01-3.56 5.44 312.5 312.5 0 00-7.53 10.56c-1.2 1.8-2.45 3.58-3.56 5.4a49.69 49.69 0 00-2.76 5.82c-.83 2-1.57 4.02-2.37 6.04-.83 1.96-1.35 4.06-1.9 6.14a172.07 172.07 0 00-2.15 9.46c-.1.53-.19 1.06-.26 1.59-.09.55-.2 1.08-.3 1.62a113.2 113.2 0 01-1.66 6.3c-.3 1.04-.62 2.08-.98 3.11-.4 1.07-.97 1.99-1.5 2.94-1.08 1.88-2.2 3.73-3.32 5.58l-1.68 2.77c-.54.93-1.14 1.85-1.58 2.83l-.08-.03c1.85-3.93 4.14-7.62 6.15-11.44.49-.95 1.03-1.9 1.38-2.87.35-1 .63-2.05.92-3.09.55-2.08 1.08-4.18 1.53-6.28.1-.52.2-1.05.28-1.56.07-.54.17-1.09.27-1.62.2-1.07.42-2.14.64-3.2.47-2.12.99-4.22 1.54-6.32.59-2.08 1.14-4.2 2.01-6.22.82-1.99 1.6-4.02 2.44-6.01a50.15 50.15 0 012.87-5.87c1.16-1.86 2.4-3.6 3.63-5.4a314.09 314.09 0 017.64-10.5 56.23 56.23 0 003.6-5.36c1.15-1.84 2.3-3.68 3.51-5.47a35.9 35.9 0 014.5-5.57c1.16-1.23 1.27-1.16.13.07z\"\r\n        fill=\"#8c6239\"\r\n      />\r\n      <path\r\n        d=\"m-126.19-.77045c-1.24.62-7.23 7.55-6.9 9.4.42 2.3 4.5 4.3 7.11 3.25 2.12-.85 7.73-7.63 7.73-9.1 0-1.38-5.85-4.58-7.94-3.54z\"\r\n        fill=\"#f2cf9f\"\r\n      />\r\n      <path\r\n        d=\"m-119.23 2.0196-2.18-1.38s-8.15 8.94-7.97 9.62c.18.67 2.1 1.39 3.6-.02 1.5-1.4 6.55-8.22 6.55-8.22z\"\r\n        fill=\"#ffe5cf\"\r\n      />\r\n      <path\r\n        d=\"m-80.852-7.4504c-1.5 1.18-1.84 5.25.82 7.32 2.95 2.3 4.82 2.92 7.96 1.46 2.83-1.32 7.7-4.94 8.57-6.49.86-1.54-4.31-6.19-6.97-6.96-1.95-.58-6.32 1.48-10.38 4.67z\"\r\n        fill=\"#f2cf9f\"\r\n      />\r\n      <path\r\n        d=\"m-80.492-4.4004c.53 1.1 7.86 3.48 12.62-.53-.87 2.1-3.43 5.76-8.31 5-4.63-.71-4.3-4.47-4.3-4.47z\"\r\n        fill=\"#ffe5cf\"\r\n      />\r\n      <path\r\n        d=\"m-11.122 3.0496c-1.74 3.08 6.44 9.88 12.27 6.46 4.26-2.47 5.74-5.04 6.68-6.4 1.87-2.67-6.14-11.5-12.03-7.5-3.57 2.43-5.15 4.32-6.92 7.44z\"\r\n        fill=\"#f2cf9f\"\r\n      />\r\n      <path\r\n        d=\"m-7.6417 3.8696c.53 1.1 7.86 3.49 12.62-.53-.87 2.1-3.43 5.76-8.31 5-4.63-.7-4.3-4.47-4.3-4.47z\"\r\n        fill=\"#ffe5cf\"\r\n      />\r\n      <path\r\n        d=\"m-39.572 4.8796c1.77.63 5.42.67 10.23-3.66 2.09-1.88 2.35-4.09 1.36-5.6-1.98-3.06-5.85-5.79-10.34-4.22-2.1.73-7.72 3.46-7.84 6.16-.1 2.41 2.13 5.75 6.59 7.32z\"\r\n        fill=\"#f2cf9f\"\r\n      />\r\n      <path\r\n        d=\"m-43.372-2.7804c1.26-.9 4.17 4.18 12.96 1.53-8.02 5.5-14.44-.49-12.96-1.53z\"\r\n        fill=\"#ffe5cf\"\r\n      />\r\n      <path\r\n        d=\"m-22.262 154.59a393.13 393.13 0 016.66-15.32c1.18-2.53 2.37-5.04 3.64-7.52a74.07 74.07 0 012.02-3.68c.35-.6.72-1.2 1.1-1.78.41-.58.81-1.17 1.36-1.67l-.1.21c-.1-2.36.1-4.73.38-7.06a85.03 85.03 0 015.4-20.42c1.8-4.34 3.97-8.57 6.9-12.29a23.52 23.52 0 015.08-4.88 12.35 12.35 0 016.63-2.27l-.09.03a50.68 50.68 0 012.36-2.36 18.4 18.4 0 012.6-2.1 10.23 10.23 0 013.08-1.35c1.09-.28 2.22-.38 3.33-.38h.14v.14c.17 2.76.52 5.53.7 8.31s.25 5.58.16 8.37a75.67 75.67 0 01-2.39 16.55v-.15a104.96 104.96 0 012.5 12.78l.4 3.23.2 1.61c.03.28.07.48.16.73.07.25.17.49.27.74a20.3 20.3 0 011 3.14c.24 1.09.36 2.2.33 3.32-.02 2.24-.7 4.38-1.39 6.44a78.4 78.4 0 01-2.42 6.05c-1.76 3.96-3.73 7.84-5.59 11.74l-.09.2h-.2l-22.06-.13c-7.35-.03-14.7-.1-22.04-.18h-.05zm.08-.02a2934.4 2934.4 0 0122-.18l22.04-.12-.3.2c1.82-3.95 3.8-7.8 5.53-11.76a78.53 78.53 0 002.4-6c.68-2.04 1.32-4.1 1.34-6.22.02-1.05-.08-2.1-.3-3.14a19.26 19.26 0 00-.96-3.04c-.1-.26-.2-.5-.28-.78a4.04 4.04 0 01-.18-.85l-.2-1.62-.39-3.22c-.56-4.28-1.32-8.54-2.39-12.73l-.02-.07.02-.07a75.2 75.2 0 002.45-24.75c-.15-2.78-.48-5.54-.63-8.33l.14.14c-1.1 0-2.2.07-3.27.35a9.98 9.98 0 00-3 1.3 26.69 26.69 0 00-4.93 4.41l-.03.04h-.05a12.05 12.05 0 00-6.48 2.27 22.4 22.4 0 00-4.97 4.88c-2.83 3.71-4.92 7.94-6.65 12.27a88.24 88.24 0 00-5.32 20.3c-.3 2.3-.48 4.64-.4 6.96v.13l-.1.1c-.47.43-.88 1-1.27 1.55-.39.57-.75 1.16-1.1 1.75a90.23 90.23 0 00-2.02 3.64 205.98 205.98 0 00-3.74 7.46 545.77 545.77 0 00-6.94 15.13z\"\r\n        fill=\"#8c6239\"\r\n      />\r\n      <path\r\n        d=\"m18.148 102.6c1.88 3.41 5.07 4.54 7.3 4.94.75.14 1.45.17 1.56.19l-.6-2.71s2-24.78 1.89-30.29c-4.93-.14-6.96-1-11.38 3.24-.87 9.26-1.75 19.28 1.22 24.63z\"\r\n        fill=\"#d79260\"\r\n      />\r\n      <path\r\n        d=\"m19.178 100.03c1.98 3.5 5.14 4.5 7.26 4.94 4.15-15.84 1.93-27.24 1.65-33.08-4.68 0-7.06 1.63-11.15 5.98-.04 9.46-.73 16.9 2.24 22.16z\"\r\n        fill=\"#f2cf9f\"\r\n      />\r\n      <path\r\n        d=\"m26.468 104.85c3.81-14.66 2.19-25.5 1.71-31.63l-.02-.17-.07-1.16a16.8 16.8 0 00-2.5.2h-.02c1.41 17.63-.02 21.84-.37 26.72-.19 2.73-.45 4.3-.63 5.65.67.23 1.3.39 1.87.5z\"\r\n        fill=\"#eebc84\"\r\n      />\r\n      <path\r\n        d=\"m22.938 89.3c.5-1.64.13-9.93-.06-16.36a15.12 15.12 0 00-3.6 2.6c.02 8.83.48 24.23 3.66 13.76z\"\r\n        fill=\"#ffe5cf\"\r\n      />\r\n    </svg>\r\n  );\r\n});\r\n\r\nconst RightHand = memo(function RightHand({\r\n  center: { x, y },\r\n}: {\r\n  center: Point;\r\n}): ReactNode {\r\n  return (\r\n    <svg x={x} y={y} overflow=\"visible\">\r\n      <path\r\n        d=\"m-43.956 76.301c-1.92 3.08 4.8 12.14 7.92 35.6h43.62c-4.07-9.33-8.83-18.82-12.52-24.92-7.9-12.98-36.87-14.14-39.02-10.68z\"\r\n        fill=\"#797979\"\r\n        opacity=\".16619\"\r\n      />\r\n      <path\r\n        d=\"m188.99 71.921c-2.55-8.35-13.22-28.75-24.13-38.74-10.92-10-16.44-19-22.47-22.94-6.03-3.94-9.74-13.44-16.94-15.6-7.2-2.15-9.25 7.26-10.02 14.18-7-.5-42.82-20.37-48.8-20.19-5.73.18-8.16 7.24-8.82 11.97-7.37-2.45-20.9-7.74-33.17-10.32-12.27-2.57-12.54 7.68-12.47 12.7-2.02-2.4-1.47-7.1-11.87-8.07-13.42-2.14-16.02 6.06-17.41 15.8-1.4 9.74 17.39 30.14 22.95 35.94 5.57 5.8 9.97 13.44 13.35 19.06 1.06 4.22 19.8 38.67 21.53 42.57.28.62.62 1.9.98 3.63h158.41c-4.31-11.44-9.06-33.28-11.11-40z\"\r\n        fill=\"#797979\"\r\n        opacity=\".16619\"\r\n      />\r\n      <path\r\n        d=\"m42.394 152.4c-.55-3.02-12.6-20.55-16.17-28.5-1.37-7.12-4.38-18.08-12.6-35.35-8.22-17.26-19.73-20.83-27.68-21.1-7.95-.28-12.34-.82-12.34.55s5.49 20 6.58 26.03c1.1 6.03 1.92 17.27.83 21.65-1.1 4.38.27 9.87 2.19 12.6 1.92 2.74 7.67 15.9 7.67 15.9l3.67 10.5h48.86a5.8 5.8 0 01-1.01-2.28zm153.18 0c.55-6.3-1.92-15.35-.55-24.94s-4.66-20-7.12-25.48c-2.47-5.48-5.75-20.28-8.77-29.87-1.1-8.5-3.84-16.44-10.41-26.85-6.58-10.42-9.87-14.53-12.34-16.45s-10.68-10.69-13.15-12.6c-2.47-1.92-14.52-18.09-21.64-22.47-6.31-.82-7.78 7.98-8.2 13.21-10.68-5.75-16.98-5.88-26.5-11.2-1.52-.84-9.63-4.82-14.29-6.46-4.66-1.65-6.43-1.07-9.11 3.63-1.02 1.8-1.37 6.23-1.37 6.23s-8.01-2.06-17.06-5.45c-21.1-10.96-26.4.45-23.12 8.19-8.22-8.67-12.16-8.43-14.08-8.7s-9.6-.83-12.33 10.41c-2.74 11.24 13.7 27.96 20 35.35 6.3 7.4 7.13 10.42 12.33 18.9.55 6.86 17.8 32.35 19.46 39.47 1.65 7.13 3.84 23.84 4.94 32.61-2.74 4.1-3.76 19.13-4.51 24.75h147.59c.1-.8.17-1.58.23-2.28z\"\r\n        fill=\"#eebc84\"\r\n      />\r\n      <path\r\n        d=\"m62.944 102.52c-2.05-8.63-6.37-4.52-8.01-20.75-1.65-16.24-10.07-15.2-15.63-21.58-5.55-6.37-1.23-14.38-8-24.25-6.79-9.87-13.36-5.55-15.63-9.66-2.26-4.1-2.26-6.99-8.01-10.9-4.73-3.2-9.04-10.15-10.42-16.41a19.75 19.75 0 00-1.7 4.63c-2.75 11.24 13.7 27.95 20 35.35 6.3 7.4 7.12 10.42 12.32 18.9.56 6.86 17.82 32.35 19.46 39.47 1.65 7.13 3.84 23.84 4.94 32.61-2.74 4.1-3.76 19.13-4.5 24.75h27.34c-8.23-18.29-10.76-46.3-12.16-52.16zm132.63 49.88c.55-6.3-1.92-15.35-.55-24.94 1.27-8.9-3.83-18.5-6.54-24.21-3.28 14.27-6.18 17.44-11.31 20.48-7.65 4.52-12.87-2.78-19.13-.34-10.38 4.03-19.1 15.48-32.7 9.73-20.5-8.7-27.83.34-32.33 4.18-4.09 3.47-7.22 10.32-8.02 17.38h110.36l.23-2.28z\"\r\n        fill=\"#e7af77\"\r\n      />\r\n      <path\r\n        d=\"m166.41 49.901c-3.33 4.52 2.83 11.15 4.9 10.78-1.12 6.24-4.35 24.3 7.9 23.5a4.73 4.73 0 003-1.21 277.48 277.48 0 00-3.08-10.86c-1.03-7.96-3.5-15.45-9.23-24.94a7.22 7.22 0 00-3.5 2.73zm-38.8-34.51a172.8 172.8 0 00-16.33-9.43c1.51 5.6 3.71 12.45 6.3 14.15 4.04 2.65 15.62 7.51 17.9 11.65 2.28 4.15 1.96 30.9 11.86 30.82 6.6-.05 10.13-5.37 10.59-11.56a234.78 234.78 0 01-8.67-21.97c-3.84-11.23-17.99-11.2-21.65-13.66zm-15 11.83c-2.5 0-5.04.1-6.22 1.44-2.07 2.37-7.67 1.77-8.56-1.32-.88-3.1-7.53-14.02-10.92-10.34-3.39 3.69-1.92 18.75 6.64 23.03 8.55 4.27 13.72 15.78 13.87 20.8s10.63 25.53 18 30.99c5.85 4.33 15.68-1.92 19.36-7.27-8.01-9.44-21.79-36.27-25.84-44.91-2.41-5.15-4.11-9.13-6.33-12.42zm-27.47 42.15c-9.32-15.34-20.28-37.82-22.2-40-1.8-2.08-22.15-16.65-28.36-21.22a80 80 0 004.19 9.09c3.18 6.02-3.99 15.49-1.77 21.25 2.2 5.75 25.38 28.48 26.41 34.82 1.03 6.35 2.5 23.32 22.43 15.79 6.03-2.28 8.86-4.42 9.8-6.51-2.55-1.83-5.8-5.46-10.5-13.22z\"\r\n        fill=\"#f3cc97\"\r\n      />\r\n      <path\r\n        d=\"m-2.0064-.99939c-1.1 3.95 5.04 9.25 8.33 10.58 3.38 1.37 12.74-3.38 12.33-7.1-.16-1.45-1.75-4.3-3.6-6.04-1.84-1.76-5.65-3.5-7.7-3.2-2.06.31-8.62 3.11-9.35 5.76z\"\r\n        fill=\"#d3915a\"\r\n      />\r\n      <path\r\n        d=\"m85.144 10.251c6.68 6.1 13.91 5.43 21.58 10.9 6.06 4.3 8.11 9.72 12.22 18.5 3.2 6.79 12.42 24.88 20.1 36.87-.32-5.26-1.25-15.3-3.14-20.03-.35-.85-1.85-11.5-5.14-14.38-6.68-5.85-6.58-7.61-7.4-14.2-.46-3.66-9.78-8.76-10.68-9.24-3.1-1.64-12.94-5.4-17.48-9.04-8.97-7.21-4.31-9.55 2.16-9.25a64.77 64.77 0 01-10.48-4.62c-1.51-.84-9.63-4.83-14.28-6.47-4.66-1.65-6.43-1.07-9.11 3.63-1.03 1.8-1.37 6.23-1.37 6.23l-1.25-.33a11.82 11.82 0 01.94.53c3.15 2 18.53 6.52 23.33 10.9z\"\r\n        fill=\"#e7af77\"\r\n      />\r\n      <path\r\n        d=\"m64.044-4.1994c2.06 1.24 9.26 4.83 12.96 4.94 3.9.1 7.3-3.6 6.57-5.35-.72-1.75-12.58-6.05-14.18-6.17-3.08-.2-8.22 4.85-5.35 6.58z\"\r\n        fill=\"#d3915a\"\r\n      />\r\n      <path\r\n        d=\"m132.61 29.981c5.8 2.05 14.63 4.6 18.04 3.04a298.8 298.8 0 01-1.39-3.96c-3.84-11.24-17.99-11.2-21.65-13.67a99.94 99.94 0 00-3.4-2.2c4.32 3.93 10.35 8.81 8.4 16.79z\"\r\n        fill=\"#e7af77\"\r\n      />\r\n      <path\r\n        d=\"m129.72 16.321c-5.24-5.83-13.4-13.74-13.7-19.67-1.76 2.86-2.38 7.2-2.63 10.31a72.32 72.32 0 00-4.81-2.36c4.42 2.18 12.73 6.55 19.03 10.78.51.35 1.24.65 2.1.94z\"\r\n        fill=\"#e7af77\"\r\n      />\r\n      <path\r\n        d=\"m135.69 35.521 4.15 1.24a17 17 0 004.13.79 5.2 5.2 0 003.7-1.44c1.05-.93 2-2.03 2.98-3.09a19.5 19.5 0 01-2.62 3.48 6.23 6.23 0 01-1.83 1.31 5.35 5.35 0 01-2.25.44 14.08 14.08 0 01-4.29-.98 37.5 37.5 0 01-3.96-1.74zm29.8 17.48c.35 1.28.85 2.5 1.5 3.61a11.35 11.35 0 002.43 2.95 8.05 8.05 0 007.18 1.87 6.58 6.58 0 01-3.97.45 8.02 8.02 0 01-3.66-1.79 9.82 9.82 0 01-2.47-3.23 10.36 10.36 0 01-1-3.86zm-18.9-27.34c-1.4 1.05-2.99 1.8-4.7 2.22-.86.19-1.74.3-2.62.25a6.3 6.3 0 01-2.55-.62c1.73.24 3.38.08 5-.32 1.64-.37 3.22-.97 4.87-1.53zm-10.9-7.19c-.7.23-1.45.36-2.17.49s-1.42.24-2.06.5c-.64.24-1.18.65-1.66 1.16-.48.52-.88 1.13-1.3 1.75a5.71 5.71 0 01.88-2.08 3.97 3.97 0 011.83-1.47 6.86 6.86 0 012.26-.4c.74-.03 1.48 0 2.22.05zm-25.68 10.07a11.16 11.16 0 01-6.72.84 9.03 9.03 0 01-3.2-1.3 8.15 8.15 0 01-2.42-2.42 11.49 11.49 0 005.76 3.04c2.13.43 4.36.25 6.58-.16zm5.13 4.93c-1.1.41-2.23.78-3.35 1.11-1.13.33-2.27.63-3.46.82a9.08 9.08 0 01-3.6-.15 23.56 23.56 0 01-3.35-1.17l3.46.63c1.15.18 2.27.19 3.4 0 1.13-.17 2.27-.44 3.43-.67 1.15-.23 2.3-.43 3.48-.57zm-17.06-16.44a5.82 5.82 0 00-4.17.28 5.96 5.96 0 00-2.75 3 8.14 8.14 0 00-.6 4.14 11.33 11.33 0 001.36 4.09 8.78 8.78 0 01-1.88-4.01 7.72 7.72 0 01.48-4.5 6 6 0 013.17-3.2 5.33 5.33 0 014.4.2zm-6.16-17.26a9.1 9.1 0 00-3.3 2.45 15.07 15.07 0 00-2.25 3.5 5.9 5.9 0 01.54-2.1c.29-.68.7-1.3 1.18-1.86a6.28 6.28 0 011.72-1.4 4.52 4.52 0 012.11-.6zm-38.22 7.6a8.9 8.9 0 01-.7-2.64 8.4 8.4 0 01.12-2.76c.22-.9.64-1.87 1.54-2.4a2.3 2.3 0 011.43-.27c.48.07.92.23 1.3.47-.87-.22-1.8-.22-2.43.26-.64.47-.97 1.28-1.16 2.1a11.71 11.71 0 00-.26 2.58c0 .87.04 1.76.16 2.66zm9.24 27.13a4.79 4.79 0 01-.99 2.18 7.75 7.75 0 01-1.83 1.6c-1.4.86-3 1.31-4.6 1.5a12.36 12.36 0 01-7.06-1.25 10.12 10.12 0 01-1.96-1.36 13.37 13.37 0 004.34 1.72c1.51.3 3.07.38 4.6.2 1.53-.16 3.04-.57 4.4-1.28.69-.35 1.33-.8 1.85-1.36.56-.53.98-1.2 1.26-1.95zm-4.31-7.2a7.24 7.24 0 01-1.44 1.93 9.91 9.91 0 01-1.92 1.48c-.7.41-1.45.75-2.26.92a3.55 3.55 0 01-2.4-.2 4.92 4.92 0 002.26-.32c.7-.26 1.4-.6 2.05-1a19.98 19.98 0 003.7-2.8zm-6.17-6.16c-1.12.14-2.18.4-3.17.8a10.25 10.25 0 00-2.74 1.64c-1.66 1.38-2.86 3.22-3.96 5.16.58-2.14 1.74-4.2 3.51-5.7a8.6 8.6 0 013-1.62 8.07 8.07 0 013.36-.28zm-21.99-15.2a7.08 7.08 0 00-1.95-.02 12.4 12.4 0 00-5.4 1.81 7.86 7.86 0 00-2.56 2.75 10.8 10.8 0 00-1.19 3.67 8.25 8.25 0 01.7-3.92 7.46 7.46 0 012.65-3.07 9.62 9.62 0 013.78-1.45 8.04 8.04 0 013.96.22zm-8.63-9.66c0 1.97 10.99 5.95 15.3 5.85 4.32-.1 8.23-2.98 8.03-5.96-.21-2.98-9.38-5.59-12.23-6.47-4.32-1.34-11.1 2.26-11.1 6.58z\"\r\n        fill=\"#d3915a\"\r\n      />\r\n      <path\r\n        d=\"m33.624 7.4406c4.7 3.51 27.4 19.73 29.32 21.92 1.92 2.2 12.88 24.67 22.2 40.01 7.48 12.32 11.25 14.22 14.43 15.05-3.3-7.66-6.2-24.56-9.92-33.68-4.52-11.1-10.68-8.63-15.4-13.98-4.74-5.35-8.84-16.03-12.4-20.14-3.56-4.1-10.83-3.5-13.7-7.2-2.88-3.7-7.82-4.31-13.36-4.93-4.57-.5-10.24-5.19-13.14-10.26-.93 2.36-.76 5.2.29 7.66a59.58 59.58 0 00-1.83-1.85c6.08 6.82 7.3 2.77 13.51 7.4z\"\r\n        fill=\"#e7af77\"\r\n      />\r\n      <path\r\n        d=\"m-19.146 96.781c3.38.84 7.58.56 10.26-1.56 1.59-1.26 3.39-3.87 2.64-11.7-.77-8.24-2.4-12.7-7.44-14.65-5.03-1.95-12.23-1.11-12.66-.38-.41.73 7.2 28.3 7.2 28.3z\"\r\n        fill=\"#d3915a\"\r\n      />\r\n      <path\r\n        d=\"m106.03 3.3006c4.06 1.6 7.96 3.55 11.83 5.57a125.82 125.82 0 018.48 4.94l1.37.91a6.1 6.1 0 001.32.73c1.92.8 4.07 1.32 6.14 2.01 2.08.7 4.14 1.48 6.08 2.5a19.02 19.02 0 015.27 3.92 16.2 16.2 0 011.96 2.68c.57.95 1 2 1.36 3.02 3.1 8.1 6.3 16.2 10.13 23.95.47.97.97 1.92 1.5 2.85.24.46.53.94.8 1.44.26.48.5.99.74 1.48.93 2 1.74 4.03 2.5 6.09 1.5 4.1 2.76 8.27 3.96 12.45l-.14.05c-1.62-4.04-3.13-8.12-4.83-12.1a79 79 0 00-2.7-5.9 45.2 45.2 0 00-1.58-2.8 59.93 59.93 0 01-1.58-2.89 134.82 134.82 0 01-5.21-12.02 187.97 187.97 0 01-4.3-12.35 14.03 14.03 0 00-2.97-5.62 16.39 16.39 0 00-5.11-3.85 30.9 30.9 0 00-6.1-2.15c-1.04-.28-2.1-.52-3.16-.77-1.06-.27-2.13-.51-3.2-.9a8.26 8.26 0 01-1.56-.8l-1.36-.89-2.75-1.72a397.46 397.46 0 00-16.95-9.7z\"\r\n        fill=\"#8c6239\"\r\n      />\r\n      <path\r\n        d=\"m71.274 40.621c-3.3-6.44-6.26-14.96-13.21-18.43-4.22-2.11-14.61-12.67-26.16-15.89.54.3 1.1.68 1.72 1.14 4.7 3.51 27.4 19.73 29.32 21.92 1.91 2.2 12.88 24.67 22.2 40.01 5.14 8.49 8.53 12.03 11.2 13.68-6.68-6.75-9.6-20.8-12.9-26.96-3.82-7.13-10.08-11.41-12.17-15.47zm58.25 8c-9.85-7.08-11.66-25.27-22.25-29.91-8.77-3.85-14.68-10.16-30.37-13.12 3.4 1.49 6.5 3.08 8.24 4.66 6.68 6.1 13.91 5.43 21.58 10.9 6.06 4.3 8.11 9.72 12.22 18.5 3.2 6.79 12.42 24.88 20.1 36.87-7.16-11.4-4.16-24.06-9.52-27.9z\"\r\n        fill=\"#d3915a\"\r\n      />\r\n      <path\r\n        d=\"m145.09 85.031a40.5 40.5 0 01-2.78-3.27 69.34 69.34 0 01-2.55-3.47 155.4 155.4 0 01-4.69-7.2c-2.99-4.88-5.8-9.87-8.41-14.96a535.07 535.07 0 01-7.47-15.46c-1.2-2.6-2.4-5.2-3.66-7.75a36.15 36.15 0 00-4.49-7.2 23.86 23.86 0 00-6.45-5.31 43.12 43.12 0 00-7.76-3.33c-2.69-.92-5.46-1.84-8.04-3.29a21.7 21.7 0 01-3.62-2.52c-.59-.52-1.03-.94-1.6-1.33a24.07 24.07 0 00-1.75-1.1 71.17 71.17 0 00-7.64-3.67c-2.62-1.12-5.27-2.16-7.93-3.25a46.05 46.05 0 01-3.94-1.77c-.32-.17-.68-.39-.96-.58-.28-.18-.58-.35-.88-.51-.6-.3-1.26-.52-1.95-.72a65.99 65.99 0 01-8.14-2.72l.05-.13c1.37.42 2.74.83 4.1 1.2 1.4.37 2.78.65 4.18.97a10.85 10.85 0 013.1 1.18c.32.2.58.34.9.5 1.27.58 2.61 1.06 3.94 1.58 5.34 2.01 10.8 3.8 15.91 6.62a21.42 21.42 0 012.77 1.88l.8.71c1.05.9 2.18 1.7 3.38 2.4 2.4 1.4 5.07 2.34 7.76 3.31a40.41 40.41 0 017.89 3.62 23.65 23.65 0 016.47 5.79c1.8 2.3 3.08 4.9 4.34 7.46 1.23 2.58 2.37 5.2 3.63 7.77a196.7 196.7 0 003.95 7.6 594.68 594.68 0 004.12 7.5c2.76 5 5.48 10.02 8.33 14.96 1.43 2.47 2.85 4.94 4.37 7.35a78.52 78.52 0 004.84 7.05z\"\r\n        fill=\"#8c6239\"\r\n      />\r\n      <path\r\n        d=\"m76.314 102.78a12.1 12.1 0 001.28 4.45 24.51 24.51 0 002.31 4 18.6 18.6 0 006.76 6.03c.67.35 1.37.62 2.09.85a29.03 29.03 0 006.8 1.1c1.54.02 3.1-.1 4.56-.53a8.4 8.4 0 002.1-.91 4.25 4.25 0 001.58-1.66 3.9 3.9 0 01-1.42 1.88 8.42 8.42 0 01-2.09 1.18c-1.5.58-3.12.84-4.71.88-1.61.05-3.2-.11-4.78-.4-1.55-.26-3.15-.69-4.61-1.42a17.94 17.94 0 01-6.99-6.52 21.47 21.47 0 01-2.1-4.28 17.64 17.64 0 01-.63-2.3 7.1 7.1 0 01-.15-2.35zm44.11 5.83a10.2 10.2 0 002.2 3.08 20.01 20.01 0 002.85 2.46 15.29 15.29 0 006.84 2.82c.6.07 1.23.1 1.84.08.6-.02 1.25-.1 1.87-.18 1.24-.16 2.47-.43 3.66-.82 1.19-.38 2.35-.9 3.36-1.63 1-.72 1.95-1.69 2.15-2.97a3.27 3.27 0 01-.59 1.83 6.7 6.7 0 01-1.3 1.47 11.52 11.52 0 01-3.39 1.95 19 19 0 01-3.77 1c-1.27.2-2.63.32-3.94.14a14.63 14.63 0 01-7.14-3.13 17.4 17.4 0 01-2.78-2.73c-.4-.5-.77-1.04-1.1-1.6a5.78 5.78 0 01-.76-1.77zm50.07 2.44c.92.27 1.9.24 2.84.16.94-.09 1.88-.27 2.8-.54 1.8-.54 3.52-1.4 4.84-2.71.68-.64 1.2-1.4 1.68-2.23.5-.81.9-1.67 1.25-2.54.33-.89.56-1.81.6-2.75.04-.92-.09-1.94-.75-2.65.39.29.65.74.8 1.2.17.46.25.96.27 1.46.03.98-.16 1.97-.45 2.9a13.91 13.91 0 01-1.17 2.7 10.14 10.14 0 01-1.76 2.39 10.95 10.95 0 01-5.19 2.73c-.96.22-1.93.35-2.9.36a6.87 6.87 0 01-2.86-.48z\"\r\n        fill=\"#a67c52\"\r\n      />\r\n      <path\r\n        d=\"m-4.7164 84.781c1.18 3.98 2.36 20.35 1.47 24.5-.88 4.12 3.84 14.75 12.1 6.93 6.74-6.37 1.26-28.3-2.67-38.73-6.1-7.56-12.68-8.96-18.36-9.76 6.06 5.08 6.41 13.54 7.46 17.06z\"\r\n        fill=\"#f3cc97\"\r\n      />\r\n      <path\r\n        d=\"m121.84-5.2894c-2.65-1.26-6.43 2.68-5.64 4.82 1.12 3.09 10.27 8.63 11.92 9.46 1.64.82 5.23 1.13 5.64-1.54.42-2.67-6.26-10.07-11.92-12.74z\"\r\n        fill=\"#d3915a\"\r\n      />\r\n      <path\r\n        d=\"m-18.796 122.34a6.96 6.96 0 002.57 4.4 8.24 8.24 0 004.7 1.8 8.2 8.2 0 004.86-1.29 10.17 10.17 0 002.02-1.65c.62-.6 1.15-1.32 1.67-2.04a10.8 10.8 0 01-3.4 4.14 8.1 8.1 0 01-10.2-.56 7.25 7.25 0 01-1.64-2.18 5.96 5.96 0 01-.58-2.62z\"\r\n        fill=\"#d3915a\"\r\n        opacity=\".85\"\r\n      />\r\n      <path\r\n        d=\"m101.83 85.061c-1.24-.28-2.54-.42-3.77-.87a11.82 11.82 0 01-3.43-1.92 31.74 31.74 0 01-5.36-5.67 80.52 80.52 0 01-4.35-6.4 145.57 145.57 0 01-3.9-6.68c-2.46-4.5-4.74-9.11-7.13-13.67a511.24 511.24 0 00-7.37-13.52l-1.92-3.34-.99-1.64a16.5 16.5 0 00-1.02-1.54c-.33-.38-.88-.8-1.36-1.18l-1.5-1.18-3.08-2.3-12.44-9.06-6.2-4.6-3.07-2.32-1.53-1.17a19.43 19.43 0 00-1.53-1.08 12.24 12.24 0 00-3.36-1.52c-1.19-.33-2.53-.53-3.74-1.12a11.43 11.43 0 01-3.16-2.35 27.88 27.88 0 01-2.51-2.94l.1-.1c1.73 1.87 3.57 3.78 5.86 4.75 1.13.48 2.38.6 3.68.88 1.29.28 2.57.79 3.7 1.47.57.33 1.13.71 1.65 1.09l1.56 1.11 3.15 2.23c2.1 1.46 4.18 2.97 6.27 4.46 4.16 3.01 8.28 6.09 12.36 9.23 1.02.78 2.04 1.56 3.04 2.37l1.5 1.24c.5.44.97.8 1.48 1.4.8 1.15 1.36 2.27 1.97 3.42l1.76 3.42c2.32 4.6 4.64 9.18 7.1 13.68a421.07 421.07 0 007.74 13.31c2.63 4.4 5.16 8.86 8.11 13a33.17 33.17 0 004.94 5.75 12.62 12.62 0 003.14 2.05c1.15.51 2.42.76 3.65 1.17z\"\r\n        fill=\"#8c6239\"\r\n      />\r\n      <path\r\n        d=\"m195.57 152.4c.1-1.14.1-2.39.04-3.7-8.41-8.98-23.37-9.3-30.27-4.8-4.26 2.78-10.4 7.34-16.9 10.78h46.9c.1-.8.17-1.58.23-2.28z\"\r\n        fill=\"#d3915a\"\r\n        opacity=\".85\"\r\n      />\r\n      <path\r\n        d=\"m42.394 152.4c-.55-3.02-12.6-20.55-16.17-28.5-1.37-7.12-4.38-18.08-12.6-35.35-3.27-6.85-7.05-11.54-10.92-14.73 3.4 7.65 6.37 19.12 10.5 25.83a41.42 41.42 0 016.37 22.2c5.76 10.68 15 22.81 16.44 28.56.3 1.17 1.11 2.65 2.24 4.27h5.14a5.77 5.77 0 01-1-2.28zm12.13-52.75c-1.12-4.19-20.77-41.51-22.4-46.45-1.66-4.93-5.15-15.2-12.34-18.3-7.2-3.07-16.03-17.87-19.11-20.96-2.14-2.12-4.27-6.62-5.18-10.15-2.5 11.23 13.77 27.8 20.04 35.16 6.31 7.4 7.13 10.42 12.33 18.9.55 6.86 17.82 32.35 19.46 39.47 1.65 7.13 3.84 23.84 4.94 32.61-2.74 4.1-3.76 19.13-4.5 24.75h15.4c-.11-11.74-1.95-29.7-8.64-55.03z\"\r\n        fill=\"#d3915a\"\r\n      />\r\n      <path\r\n        d=\"m42.394 152.4c-.55-3.02-12.6-20.55-16.17-28.5-1.37-7.12-4.38-18.08-12.6-35.35-3.27-6.85-7.05-11.54-10.92-14.73 3.4 7.65 6.37 19.12 10.5 25.83a41.42 41.42 0 016.37 22.2c5.76 10.68 15 22.81 16.44 28.56.3 1.17 1.11 2.65 2.24 4.27h5.14a5.77 5.77 0 01-1-2.28z\"\r\n        fill=\"#e7af77\"\r\n      />\r\n      <path\r\n        d=\"m45.204-6.5794h-.02zm68.43 13.1-.65-.33c-.03.24-.06.49-.07.73zm-51.43-7.7-.38-.12-.05.42.44-.3zm59.1-4.62.1.06.11.01zm58.52 77.82v-.06l-.02-.06z\"\r\n        fill=\"#f0f\"\r\n      />\r\n      <path\r\n        d=\"m-9.0664 144.15c-1.4-3.17-2.8-6.34-4.3-9.48a116.1 116.1 0 00-2.3-4.66 22.7 22.7 0 00-1.35-2.24 13.47 13.47 0 01-1.11-2.32 17.28 17.28 0 01-.66-10.17c.34-1.72.4-3.46.44-5.2a98.12 98.12 0 00-1.23-15.57c-.61-3.43-1.52-6.78-2.37-10.14l-2.66-10.05c-.44-3-3.53-8.13 1.7-6.92 1.71.03 3.45.13 5.17.2 1.74.11 3.49.13 5.19.28a26.78 26.78 0 019.81 2.82 29.7 29.7 0 018.12 6.2 42.38 42.38 0 016 8.35 64.15 64.15 0 012.32 4.6 215.2 215.2 0 016.1 14.33 116.67 116.67 0 015.85 19.84l.02.07.02.06c1.19 2.6 2.6 5.06 4 7.5 1.43 2.45 2.9 4.86 4.36 7.27 1.46 2.4 2.95 4.8 4.39 7.23.71 1.2 1.43 2.41 2.09 3.63.33.62.65 1.23.93 1.85.13.3.27.62.31.86a6.14 6.14 0 00.89 2.2h1.5a6 6 0 01-.91-1.53 4.64 4.64 0 01-.26-.9c-.1-.46-.25-.79-.4-1.13a27.54 27.54 0 00-.97-1.94 95.57 95.57 0 00-2.11-3.68c-1.46-2.43-2.95-4.82-4.42-7.22s-2.94-4.8-4.37-7.23a87.31 87.31 0 01-3.95-7.34l.02.08-.05-.13.03.05a118.62 118.62 0 00-5.97-19.92c-1.26-3.25-2.61-6.45-4.04-9.62a246.27 246.27 0 00-2.2-4.73 64.9 64.9 0 00-2.39-4.66 43.18 43.18 0 00-6.19-8.45 30.48 30.48 0 00-8.39-6.3 27.5 27.5 0 00-10.08-2.8c-1.76-.13-3.48-.14-5.22-.23-1.73-.07-3.46-.15-5.2-.17-.88 0-1.75 0-2.66.19-.23.06-.46.12-.7.28a.86.86 0 00-.3.32l-.08.25v.2c.06.48.16.89.26 1.32.42 1.69.87 3.36 1.32 5.03l2.75 10.04c.88 3.35 1.82 6.7 2.45 10.1a96.51 96.51 0 011.26 15.51 29.47 29.47 0 01-.4 5.15 15.34 15.34 0 00-.42 5.2c.14 1.74.5 3.46 1.12 5.1.3.8.67 1.6 1.13 2.36a22.82 22.82 0 011.34 2.2c.82 1.54 1.57 3.1 2.33 4.66 1.48 3.13 2.92 6.29 4.32 9.46l3.64 10.47h.19l-3.7-10.53z\"\r\n        fill=\"#8c6239\"\r\n      />\r\n      <path\r\n        d=\"m22.134 1.7206-.83-.85c.12.38.25.76.4 1.12l.43-.28zm4.66 122.08-.02-.09-.03-.04zm.73-65.91v.1l.04.06zm24.25 71.71-.12.21.02.19z\"\r\n        fill=\"#f0f\"\r\n      />\r\n      <path\r\n        d=\"m-19.366 94.921c3.29.83 7.36.55 9.97-1.54 1.54-1.23 3.29-3.8 2.57-11.51-.76-8.1-2.34-12.5-7.23-14.42-4.9-1.92-11.89-1.1-12.3-.37-.41.71 6.99 27.84 6.99 27.84z\"\r\n        fill=\"#f7d1ae\"\r\n      />\r\n      <path\r\n        d=\"m-26.356 67.081c-.41.71 6.99 27.84 6.99 27.84 1.07.27 2.23.42 3.38.43-.69-6.75-3.72-20.77-6.02-29.07-2.35.06-4.15.44-4.35.8z\"\r\n        fill=\"#ffe5cf\"\r\n      />\r\n      <path\r\n        d=\"m195.53 152.4c.26-3.45-.22-6.9-.52-10.35a77.34 77.34 0 01-.44-10.36c.03-.86.1-1.73.17-2.6.08-.86.22-1.71.3-2.57.16-1.72.1-3.45-.13-5.15a41.05 41.05 0 00-2.81-9.93c-1.29-3.21-2.88-6.28-4.33-9.42a47.23 47.23 0 01-1.77-4.9 172.7 172.7 0 01-1.47-4.98c-1.88-6.65-3.53-13.37-5.59-19.97v-.03a55.23 55.23 0 00-2.93-11.98 70.85 70.85 0 00-5.31-11.13 127.86 127.86 0 00-3.25-5.27 213.67 213.67 0 00-3.4-5.17 101.69 101.69 0 00-3.63-5 26.27 26.27 0 00-4.16-4.48c-1.64-1.33-3.06-2.82-4.54-4.27l-4.39-4.38c-1.47-1.45-2.9-2.92-4.5-4.22-1.53-1.48-2.8-3.08-4.16-4.65-2.68-3.16-5.34-6.31-8.14-9.35a86.4 86.4 0 00-4.31-4.43 31.52 31.52 0 00-4.76-3.86l.1.02c-1.4-.2-2.83.16-3.9 1.08a8.86 8.86 0 00-2.33 3.5 22.01 22.01 0 00-1.17 4.13 42.34 42.34 0 00-.55 4.3l-.03.32-.28-.15a71.99 71.99 0 00-7-3.32c-2.39-.98-4.84-1.83-7.28-2.68a92.98 92.98 0 01-7.27-2.78 57.87 57.87 0 01-3.5-1.68l-1.72-.93-1.72-.89a180.35 180.35 0 00-7.02-3.3 94.46 94.46 0 00-3.57-1.52 28.1 28.1 0 00-3.66-1.24c-1.23-.3-2.57-.37-3.68.26a8.12 8.12 0 00-2.6 2.76c-.33.55-.7 1.09-.94 1.66-.24.6-.4 1.22-.55 1.85a30.54 30.54 0 00-.56 3.82l-.01.14-.13-.04a196.68 196.68 0 01-17.07-5.44h-.01a49.1 49.1 0 00-7.84-3.32c-2.7-.83-5.54-1.39-8.35-1.1-1.39.14-2.78.53-3.98 1.24a7.22 7.22 0 00-2.8 3.04c-1.22 2.53-1.03 5.59.05 8.15l.35.83-.62-.65a51.92 51.92 0 00-4.5-4.24 23.02 23.02 0 00-5.16-3.34 11.48 11.48 0 00-2.92-.88c-.5-.08-1.01-.12-1.53-.19-.5-.07-1.01-.1-1.52-.08-2.03.03-4.05.7-5.65 1.95a12.33 12.33 0 00-3.61 4.84 20.43 20.43 0 00-1.01 2.9c-.28.99-.45 1.98-.47 3-.04 2.04.42 4.06 1.1 6a35.04 35.04 0 002.6 5.58 77.75 77.75 0 007.07 10.13c2.59 3.22 5.33 6.3 8.08 9.41a70.15 70.15 0 017.55 9.9c1.1 1.76 2.1 3.57 3.13 5.37s2.07 3.57 3.15 5.33l.04.06v.08c.17 1.52.8 3.03 1.4 4.5.63 1.46 1.34 2.9 2.06 4.33 1.46 2.85 3.01 5.66 4.59 8.46 3.13 5.6 6.42 11.13 9.3 16.9a35.08 35.08 0 011.9 4.48c.46 1.6.72 3.16 1.03 4.75.58 3.17 1.07 6.35 1.54 9.53.95 6.35 1.8 12.72 2.6 19.1l.01.13-.07.1a11.43 11.43 0 00-1.2 2.81c-.3 1-.54 2.02-.76 3.04a87.6 87.6 0 00-1.03 6.21c-.28 2.09-.53 4.17-.75 6.26-.23 2.1-.43 4.2-.7 6.3l-.34-.4 36.9.06 36.9.1 73.79.15-.04.04c.09-.76.17-1.52.23-2.28zm.07 0c-.07.77-.13 1.53-.22 2.28v.04h-.04l-73.8.16-36.9.1-36.9.05h-.38l.05-.4c.27-2.07.47-4.17.7-6.27s.47-4.2.76-6.29c.28-2.08.6-4.17 1.04-6.26.22-1.02.47-2.06.78-3.08.32-1.02.67-2.04 1.28-2.99l-.06.23a833.9 833.9 0 00-2.57-19.1 310.9 310.9 0 00-1.54-9.5c-.3-1.57-.57-3.18-1-4.67a34.46 34.46 0 00-1.86-4.38c-2.87-5.73-6.16-11.27-9.29-16.88-1.57-2.8-3.13-5.62-4.59-8.49a74.38 74.38 0 01-2.07-4.38c-.61-1.5-1.25-3-1.45-4.68l.05.14c-2.19-3.53-4.13-7.2-6.27-10.71a71.01 71.01 0 00-7.46-9.85c-5.45-6.2-11.02-12.44-15.15-19.68a35.58 35.58 0 01-2.61-5.67 17.7 17.7 0 01-1.1-6.16c.01-1.05.2-2.1.5-3.11.27-1 .62-2 1.04-2.96a12.69 12.69 0 013.75-4.98 9.86 9.86 0 015.9-2.02c.52 0 1.04.03 1.57.1.51.07 1.02.1 1.55.2 1.03.15 2.05.48 3 .9 1.92.86 3.63 2.08 5.23 3.4a52.52 52.52 0 014.52 4.28l-.28.18c-1.1-2.64-1.3-5.78-.01-8.41a7.51 7.51 0 012.92-3.15 9.95 9.95 0 014.1-1.28c2.88-.28 5.74.3 8.46 1.14a49.28 49.28 0 017.86 3.35 180.41 180.41 0 0017.04 5.45l-.14.1c.12-1.3.28-2.59.56-3.86.14-.63.3-1.27.56-1.88.25-.62.62-1.15.95-1.7a8.32 8.32 0 012.67-2.86c.58-.33 1.25-.5 1.92-.52s1.32.08 1.96.22c1.27.3 2.5.77 3.7 1.24 1.2.47 2.4.98 3.58 1.5a183.37 183.37 0 018.78 4.18l1.71.92a57.8 57.8 0 003.5 1.67c2.36 1.04 4.8 1.9 7.24 2.75a136.95 136.95 0 017.31 2.65 73 73 0 017.05 3.31l-.32.18c.12-1.46.28-2.9.56-4.34.26-1.44.63-2.87 1.17-4.23a9.32 9.32 0 012.45-3.69 5.27 5.27 0 014.25-1.18h.05l.05.03a32.6 32.6 0 014.86 3.91 97 97 0 014.34 4.45c2.81 3.04 5.5 6.19 8.18 9.33 1.34 1.55 2.66 3.19 4.1 4.58 1.62 1.3 3.08 2.8 4.55 4.23l4.4 4.38c1.48 1.43 2.93 2.92 4.5 4.2a27.11 27.11 0 014.26 4.6c1.26 1.65 2.45 3.34 3.6 5.06 1.16 1.71 2.29 3.45 3.4 5.2 1.11 1.73 2.21 3.5 3.24 5.3a71.11 71.11 0 015.3 11.23 55.66 55.66 0 012.89 12.08v-.03c2.03 6.62 3.66 13.34 5.5 20 .46 1.68.93 3.33 1.45 4.98.51 1.65 1.04 3.3 1.74 4.87 1.43 3.13 3.02 6.22 4.3 9.44a41.22 41.22 0 012.78 10c.22 1.72.27 3.46.11 5.2-.08.86-.22 1.71-.3 2.57a43.87 43.87 0 00-.19 2.58c-.15 3.45.08 6.91.4 10.35.3 3.44.76 6.9.5 10.36z\"\r\n        fill=\"#8c6239\"\r\n      />\r\n      <path\r\n        d=\"m-2.9264-2.3794c-1.1 3.94 5.04 9.24 8.33 10.57 3.37 1.37 12.74-3.39 12.33-7.1-.17-1.45-1.75-4.3-3.6-6.04-1.85-1.76-5.65-3.5-7.71-3.2-2.05.31-8.61 3.11-9.35 5.76z\"\r\n        fill=\"#f7d1ae\"\r\n      />\r\n      <path\r\n        d=\"m2.1136 1.7206c.53 1.1 7.85 3.47 12.61-.54-.86 2.1-3.42 5.76-8.3 5-4.63-.7-4.31-4.46-4.31-4.46z\"\r\n        fill=\"#ffe5cf\"\r\n      />\r\n      <path\r\n        d=\"m20.914-4.6494c0 1.97 11 5.96 15.31 5.86 4.32-.1 8.22-2.99 8.02-5.96-.21-2.99-9.38-5.6-12.23-6.48-4.31-1.33-11.1 2.26-11.1 6.58z\"\r\n        fill=\"#f7d1ae\"\r\n      />\r\n      <path\r\n        d=\"m24.474-6.8794c1.74-.57 4.53 4.88 15.95 4.3-10.93 3.44-17.97-3.63-15.95-4.3z\"\r\n        fill=\"#ffe5cf\"\r\n      />\r\n      <path\r\n        d=\"m63.394-5.2594c2.06 1.23 9.26 4.83 12.95 4.94 3.9.1 7.3-3.6 6.58-5.35s-12.58-6.06-14.19-6.16c-3.07-.21-8.21 4.85-5.33 6.57z\"\r\n        fill=\"#f7d1ae\"\r\n      />\r\n      <path\r\n        d=\"m71.144-4.6794c.58.93 6.73 2.1 9.87-2.19-.36 2.02-1.81 5.69-5.77 5.66-3.77-.02-4.1-3.47-4.1-3.47z\"\r\n        fill=\"#ffe5cf\"\r\n      />\r\n      <path\r\n        d=\"m121.55-6.8494c-2.63-1.33-6.54 2.52-5.8 4.69 1.04 3.13 10.06 8.95 11.68 9.82 1.63.87 5.23 1.28 5.72-1.4.48-2.66-6-10.27-11.6-13.1z\"\r\n        fill=\"#eadbc5\"\r\n      />\r\n      <path\r\n        d=\"m116.82-5.2394c-.87.99-1.38 2.18-1.08 3.08 1.05 3.13 10.07 8.95 11.69 9.82 1 .52 2.72.88 4.03.48-7.11-2.08-12.66-9.52-14.65-13.38z\"\r\n        fill=\"#dbb793\"\r\n      />\r\n    </svg>\r\n  );\r\n});\r\n","import { type KeyId, type ZoneId } from \"../types.ts\";\n\nexport type ZoneModDict = Record<KeyId, readonly ZoneId[]>;\n\nexport const STANDARD_MOD: ZoneModDict = {};\n\nexport const ANGLE_MOD: ZoneModDict = {\n  Backquote: [\"pinky\", \"left\", \"digit\"],\n  Digit1: [\"pinky\", \"left\", \"digit\"],\n  Digit2: [\"ring\", \"left\", \"digit\"],\n  Digit3: [\"middle\", \"left\", \"digit\"],\n  Digit4: [\"middle\", \"left\", \"digit\"],\n  Digit5: [\"leftIndex\", \"left\", \"digit\"],\n  Digit6: [\"leftIndex\", \"left\", \"digit\"],\n  Digit7: [\"rightIndex\", \"right\", \"digit\"],\n  Digit8: [\"rightIndex\", \"right\", \"digit\"],\n  Digit9: [\"middle\", \"right\", \"digit\"],\n  Digit0: [\"ring\", \"right\", \"digit\"],\n  Minus: [\"pinky\", \"right\", \"digit\"],\n  Equal: [\"pinky\", \"right\", \"digit\"],\n  Backspace: [\"pinky\", \"right\", \"digit\"],\n  Tab: [\"pinky\", \"left\", \"top\"],\n  KeyQ: [\"pinky\", \"left\", \"top\"],\n  KeyW: [\"ring\", \"left\", \"top\"],\n  KeyE: [\"middle\", \"left\", \"top\"],\n  KeyR: [\"leftIndex\", \"left\", \"top\"],\n  KeyT: [\"leftIndex\", \"left\", \"top\"],\n  KeyY: [\"rightIndex\", \"right\", \"top\"],\n  KeyU: [\"rightIndex\", \"right\", \"top\"],\n  KeyI: [\"middle\", \"right\", \"top\"],\n  KeyO: [\"ring\", \"right\", \"top\"],\n  KeyP: [\"pinky\", \"right\", \"top\"],\n  BracketLeft: [\"pinky\", \"right\", \"top\"],\n  BracketRight: [\"pinky\", \"right\", \"top\"],\n  Backslash: [\"pinky\", \"right\", \"top\"],\n  CapsLock: [\"pinky\", \"left\", \"home\"],\n  KeyA: [\"pinky\", \"left\", \"home\"],\n  KeyS: [\"ring\", \"left\", \"home\"],\n  KeyD: [\"middle\", \"left\", \"home\"],\n  KeyF: [\"leftIndex\", \"left\", \"home\"],\n  KeyG: [\"leftIndex\", \"left\", \"home\"],\n  KeyH: [\"rightIndex\", \"right\", \"home\"],\n  KeyJ: [\"rightIndex\", \"right\", \"home\"],\n  KeyK: [\"middle\", \"right\", \"home\"],\n  KeyL: [\"ring\", \"right\", \"home\"],\n  Semicolon: [\"pinky\", \"right\", \"home\"],\n  Quote: [\"pinky\", \"right\", \"home\"],\n  Enter: [\"pinky\", \"right\", \"home\"],\n  ShiftLeft: [\"pinky\", \"left\", \"bottom\"],\n  KeyZ: [\"ring\", \"left\", \"bottom\"],\n  KeyX: [\"middle\", \"left\", \"bottom\"],\n  KeyC: [\"leftIndex\", \"left\", \"bottom\"],\n  KeyV: [\"leftIndex\", \"left\", \"bottom\"],\n  KeyB: [\"leftIndex\", \"left\", \"bottom\"],\n  KeyN: [\"rightIndex\", \"right\", \"bottom\"],\n  KeyM: [\"rightIndex\", \"right\", \"bottom\"],\n  Comma: [\"middle\", \"right\", \"bottom\"],\n  Period: [\"ring\", \"right\", \"bottom\"],\n  Slash: [\"pinky\", \"right\", \"bottom\"],\n  ShiftRight: [\"pinky\", \"right\", \"bottom\"],\n  ControlLeft: [\"pinky\", \"left\", \"bottom\"],\n  AltLeft: [\"pinky\", \"left\", \"bottom\"],\n  Space: [\"thumb\", \"right\", \"bottom\"],\n  AltRight: [\"pinky\", \"right\", \"bottom\"],\n  ControlRight: [\"pinky\", \"right\", \"bottom\"],\n};\n\nexport const ANGLE_WIDE_MOD: ZoneModDict = {\n  Backquote: [\"pinky\", \"left\", \"digit\"],\n  Digit1: [\"pinky\", \"left\", \"digit\"],\n  Digit2: [\"ring\", \"left\", \"digit\"],\n  Digit3: [\"middle\", \"left\", \"digit\"],\n  Digit4: [\"middle\", \"left\", \"digit\"],\n  Digit5: [\"leftIndex\", \"left\", \"digit\"],\n  Digit6: [\"leftIndex\", \"left\", \"digit\"],\n  Digit7: [\"rightIndex\", \"right\", \"digit\"],\n  Digit8: [\"rightIndex\", \"right\", \"digit\"],\n  Digit9: [\"rightIndex\", \"right\", \"digit\"],\n  Digit0: [\"middle\", \"right\", \"digit\"],\n  Minus: [\"ring\", \"right\", \"digit\"],\n  Equal: [\"pinky\", \"right\", \"digit\"],\n  Backspace: [\"pinky\", \"right\", \"digit\"],\n  Tab: [\"pinky\", \"left\", \"top\"],\n  KeyQ: [\"pinky\", \"left\", \"top\"],\n  KeyW: [\"ring\", \"left\", \"top\"],\n  KeyE: [\"middle\", \"left\", \"top\"],\n  KeyR: [\"leftIndex\", \"left\", \"top\"],\n  KeyT: [\"leftIndex\", \"left\", \"top\"],\n  KeyY: [\"rightIndex\", \"right\", \"top\"],\n  KeyU: [\"rightIndex\", \"right\", \"top\"],\n  KeyI: [\"rightIndex\", \"right\", \"top\"],\n  KeyO: [\"middle\", \"right\", \"top\"],\n  KeyP: [\"ring\", \"right\", \"top\"],\n  BracketLeft: [\"pinky\", \"right\", \"top\"],\n  BracketRight: [\"pinky\", \"right\", \"top\"],\n  Backslash: [\"pinky\", \"right\", \"top\"],\n  CapsLock: [\"pinky\", \"left\", \"home\"],\n  KeyA: [\"pinky\", \"left\", \"home\"],\n  KeyS: [\"ring\", \"left\", \"home\"],\n  KeyD: [\"middle\", \"left\", \"home\"],\n  KeyF: [\"leftIndex\", \"left\", \"home\"],\n  KeyG: [\"leftIndex\", \"left\", \"home\"],\n  KeyH: [\"rightIndex\", \"right\", \"home\"],\n  KeyJ: [\"rightIndex\", \"right\", \"home\"],\n  KeyK: [\"rightIndex\", \"right\", \"home\"],\n  KeyL: [\"middle\", \"right\", \"home\"],\n  Semicolon: [\"ring\", \"right\", \"home\"],\n  Quote: [\"pinky\", \"right\", \"home\"],\n  Enter: [\"pinky\", \"right\", \"home\"],\n  ShiftLeft: [\"pinky\", \"left\", \"bottom\"],\n  KeyZ: [\"ring\", \"left\", \"bottom\"],\n  KeyX: [\"middle\", \"left\", \"bottom\"],\n  KeyC: [\"leftIndex\", \"left\", \"bottom\"],\n  KeyV: [\"leftIndex\", \"left\", \"bottom\"],\n  KeyB: [\"leftIndex\", \"left\", \"bottom\"],\n  KeyN: [\"rightIndex\", \"right\", \"bottom\"],\n  KeyM: [\"rightIndex\", \"right\", \"bottom\"],\n  Comma: [\"rightIndex\", \"right\", \"bottom\"],\n  Period: [\"middle\", \"right\", \"bottom\"],\n  Slash: [\"ring\", \"right\", \"bottom\"],\n  ShiftRight: [\"pinky\", \"right\", \"bottom\"],\n  ControlLeft: [\"pinky\", \"left\", \"bottom\"],\n  AltLeft: [\"pinky\", \"left\", \"bottom\"],\n  Space: [\"thumb\", \"right\", \"bottom\"],\n  AltRight: [\"pinky\", \"right\", \"bottom\"],\n  ControlRight: [\"pinky\", \"right\", \"bottom\"],\n};\n\nexport const SYMMETRIC_MOD: ZoneModDict = {\n  Backquote: [\"pinky\", \"left\", \"digit\"],\n  Digit1: [\"pinky\", \"left\", \"digit\"],\n  Digit2: [\"ring\", \"left\", \"digit\"],\n  Digit3: [\"middle\", \"left\", \"digit\"],\n  Digit4: [\"middle\", \"left\", \"digit\"],\n  Digit5: [\"leftIndex\", \"left\", \"digit\"],\n  Digit6: [\"leftIndex\", \"right\", \"digit\"],\n  Digit7: [\"rightIndex\", \"right\", \"digit\"],\n  Digit8: [\"middle\", \"right\", \"digit\"],\n  Digit9: [\"middle\", \"right\", \"digit\"],\n  Digit0: [\"ring\", \"right\", \"digit\"],\n  Minus: [\"pinky\", \"right\", \"digit\"],\n  Equal: [\"pinky\", \"right\", \"digit\"],\n  Backspace: [\"pinky\", \"right\", \"digit\"],\n  Tab: [\"pinky\", \"left\", \"top\"],\n  KeyQ: [\"pinky\", \"left\", \"top\"],\n  KeyW: [\"ring\", \"left\", \"top\"],\n  KeyE: [\"middle\", \"left\", \"top\"],\n  KeyR: [\"leftIndex\", \"left\", \"top\"],\n  KeyT: [\"leftIndex\", \"left\", \"top\"],\n  KeyY: [\"rightIndex\", \"right\", \"top\"],\n  KeyU: [\"rightIndex\", \"right\", \"top\"],\n  KeyI: [\"middle\", \"right\", \"top\"],\n  KeyO: [\"ring\", \"right\", \"top\"],\n  KeyP: [\"pinky\", \"right\", \"top\"],\n  BracketLeft: [\"pinky\", \"right\", \"top\"],\n  BracketRight: [\"pinky\", \"right\", \"top\"],\n  Enter: [\"pinky\", \"right\", \"top\"],\n  CapsLock: [\"pinky\", \"left\", \"home\"],\n  KeyA: [\"pinky\", \"left\", \"home\"],\n  KeyS: [\"ring\", \"left\", \"home\"],\n  KeyD: [\"middle\", \"left\", \"home\"],\n  KeyF: [\"leftIndex\", \"left\", \"home\"],\n  KeyG: [\"leftIndex\", \"left\", \"home\"],\n  KeyH: [\"rightIndex\", \"right\", \"home\"],\n  KeyJ: [\"rightIndex\", \"right\", \"home\"],\n  KeyK: [\"middle\", \"right\", \"home\"],\n  KeyL: [\"ring\", \"right\", \"home\"],\n  Semicolon: [\"pinky\", \"right\", \"home\"],\n  Quote: [\"pinky\", \"right\", \"home\"],\n  Backslash: [\"pinky\", \"right\", \"home\"],\n  ShiftLeft: [\"pinky\", \"left\", \"bottom\"],\n  IntlBackslash: [\"pinky\", \"left\", \"bottom\"],\n  KeyZ: [\"ring\", \"left\", \"bottom\"],\n  KeyX: [\"middle\", \"left\", \"bottom\"],\n  KeyC: [\"leftIndex\", \"left\", \"bottom\"],\n  KeyV: [\"leftIndex\", \"left\", \"bottom\"],\n  KeyB: [\"leftIndex\", \"left\", \"bottom\"],\n  KeyN: [\"rightIndex\", \"right\", \"bottom\"],\n  KeyM: [\"rightIndex\", \"right\", \"bottom\"],\n  Comma: [\"middle\", \"right\", \"bottom\"],\n  Period: [\"ring\", \"right\", \"bottom\"],\n  Slash: [\"pinky\", \"right\", \"bottom\"],\n  ShiftRight: [\"pinky\", \"right\", \"bottom\"],\n  ControlLeft: [\"pinky\", \"left\", \"bottom\"],\n  AltLeft: [\"pinky\", \"left\", \"bottom\"],\n  Space: [\"thumb\", \"right\", \"bottom\"],\n  AltRight: [\"pinky\", \"right\", \"bottom\"],\n  ControlRight: [\"pinky\", \"right\", \"bottom\"],\n};\n","import { Enum, type EnumItem } from \"@mkboard/lang\";\r\nimport {\r\n  STANDARD_MOD,\r\n  SYMMETRIC_MOD,\r\n  type ZoneModDict,\r\n} from \"./geometry/mod.ts\";\r\n\r\nexport class ZoneMod implements EnumItem {\r\n  static readonly STANDARD = new ZoneMod(\r\n    \"standard\", //\r\n    \"Standard\",\r\n    STANDARD_MOD,\r\n  );\r\n  static readonly SYMMETRIC = new ZoneMod(\r\n    \"symmetric\",\r\n    \"Symmetric\",\r\n    SYMMETRIC_MOD,\r\n  );\r\n\r\n  static readonly ALL = new Enum<ZoneMod>(\r\n    ZoneMod.STANDARD, //\r\n    ZoneMod.SYMMETRIC,\r\n  );\r\n\r\n  static first(items: Iterable<ZoneMod>): ZoneMod {\r\n    return items[Symbol.iterator]().next().value ?? ZoneMod.STANDARD;\r\n  }\r\n\r\n  private constructor(\r\n    readonly id: string,\r\n    readonly name: string,\r\n    readonly mod: ZoneModDict,\r\n  ) {}\r\n\r\n  toString() {\r\n    return this.id;\r\n  }\r\n\r\n  toJSON() {\r\n    return this.id;\r\n  }\r\n}\r\n\r\nexport class Geometry implements EnumItem {\r\n  static readonly ANSI_101 = new Geometry(\r\n    \"ansi101\", //\r\n    \"ANSI 101\",\r\n    \"staggered\",\r\n    ZoneMod.ALL,\r\n  );\r\n  static readonly ANSI_101_FULL = new Geometry(\r\n    \"ansi101full\", //\r\n    \"ANSI 101 (Full)\",\r\n    \"staggered\",\r\n    ZoneMod.ALL,\r\n  );\r\n  static readonly ISO_102 = new Geometry(\r\n    \"iso102\", //\r\n    \"ISO 102\",\r\n    \"staggered\",\r\n    ZoneMod.ALL,\r\n  );\r\n  static readonly ISO_102_FULL = new Geometry(\r\n    \"iso102full\", //\r\n    \"ISO 102 (Full)\",\r\n    \"staggered\",\r\n    ZoneMod.ALL,\r\n  );\r\n  static readonly KOREAN_103 = new Geometry(\r\n    \"kr103\", //\r\n    \"Korean 103\",\r\n    \"staggered\",\r\n    ZoneMod.ALL,\r\n  );\r\n  static readonly KOREAN_103_FULL = new Geometry(\r\n    \"kr103full\", //\r\n    \"Korean 103 (Full)\",\r\n    \"staggered\",\r\n    ZoneMod.ALL,\r\n  );\r\n  static readonly BRAZILIAN_104 = new Geometry(\r\n    \"br104\", //\r\n    \"Brazilian 104\",\r\n    \"staggered\",\r\n    ZoneMod.ALL,\r\n  );\r\n  static readonly BRAZILIAN_104_FULL = new Geometry(\r\n    \"br104full\", //\r\n    \"Brazilian 104 (Full)\",\r\n    \"staggered\",\r\n    ZoneMod.ALL,\r\n  );\r\n  static readonly JAPANESE_106 = new Geometry(\r\n    \"jp106\", //\r\n    \"Japanese 106\",\r\n    \"staggered\",\r\n    ZoneMod.ALL,\r\n  );\r\n  static readonly JAPANESE_106_FULL = new Geometry(\r\n    \"jp106full\", //\r\n    \"Japanese 106 (Full)\",\r\n    \"staggered\",\r\n    ZoneMod.ALL,\r\n  );\r\n  static readonly MATRIX = new Geometry(\r\n    \"matrix\", //\r\n    \"Matrix/Ergonomic\",\r\n    \"matrix\",\r\n    new Enum(),\r\n  );\r\n\r\n  static readonly ALL = new Enum<Geometry>(\r\n    Geometry.ANSI_101,\r\n    Geometry.ANSI_101_FULL,\r\n    Geometry.ISO_102,\r\n    Geometry.ISO_102_FULL,\r\n    Geometry.KOREAN_103,\r\n    Geometry.KOREAN_103_FULL,\r\n    Geometry.BRAZILIAN_104,\r\n    Geometry.BRAZILIAN_104_FULL,\r\n    Geometry.JAPANESE_106,\r\n    Geometry.JAPANESE_106_FULL,\r\n    Geometry.MATRIX,\r\n  );\r\n\r\n  static first(items: Iterable<Geometry>): Geometry {\r\n    return items[Symbol.iterator]().next().value ?? Geometry.ANSI_101;\r\n  }\r\n\r\n  private constructor(\r\n    readonly id: string,\r\n    readonly name: string,\r\n    readonly form: \"staggered\" | \"matrix\",\r\n    readonly zones: Enum<ZoneMod>,\r\n  ) {}\r\n\r\n  toString() {\r\n    return this.id;\r\n  }\r\n\r\n  toJSON() {\r\n    return this.id;\r\n  }\r\n}\r\n","import { type GeometryDict } from \"../types.ts\";\n\n// See https://www.w3.org/TR/uievents-code/#keyboard-101\nexport const ANSI_101: GeometryDict = {\n  Backquote: {\n    x: 0,\n    y: 0,\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit1: {\n    x: 1,\n    y: 0,\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit2: {\n    x: 2,\n    y: 0,\n    zones: [\"ring\", \"left\", \"digit\"],\n  },\n  Digit3: {\n    x: 3,\n    y: 0,\n    zones: [\"middle\", \"left\", \"digit\"],\n  },\n  Digit4: {\n    x: 4,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit5: {\n    x: 5,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit6: {\n    x: 6,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit7: {\n    x: 7,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit8: {\n    x: 8,\n    y: 0,\n    zones: [\"middle\", \"right\", \"digit\"],\n  },\n  Digit9: {\n    x: 9,\n    y: 0,\n    zones: [\"ring\", \"right\", \"digit\"],\n  },\n  Digit0: {\n    x: 10,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Minus: {\n    x: 11,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Equal: {\n    x: 12,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Backspace: {\n    x: 13,\n    y: 0,\n    w: 2,\n    h: 1,\n    labels: [{ text: \"Backspace\" }],\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Tab: {\n    x: 0,\n    y: 1,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Tab\" }],\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyQ: {\n    x: 1.5,\n    y: 1,\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyW: {\n    x: 2.5,\n    y: 1,\n    zones: [\"ring\", \"left\", \"top\"],\n  },\n  KeyE: {\n    x: 3.5,\n    y: 1,\n    zones: [\"middle\", \"left\", \"top\"],\n  },\n  KeyR: {\n    x: 4.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyT: {\n    x: 5.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyY: {\n    x: 6.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyU: {\n    x: 7.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyI: {\n    x: 8.5,\n    y: 1,\n    zones: [\"middle\", \"right\", \"top\"],\n  },\n  KeyO: {\n    x: 9.5,\n    y: 1,\n    zones: [\"ring\", \"right\", \"top\"],\n  },\n  KeyP: {\n    x: 10.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  BracketLeft: {\n    x: 11.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  BracketRight: {\n    x: 12.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  Backslash: {\n    x: 13.5,\n    y: 1,\n    w: 1.5,\n    h: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  CapsLock: {\n    x: 0,\n    y: 2,\n    w: 1.75,\n    h: 1,\n    labels: [{ text: \"Caps Lock\" }],\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyA: {\n    x: 1.75,\n    y: 2,\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyS: {\n    x: 2.75,\n    y: 2,\n    zones: [\"ring\", \"left\", \"home\"],\n  },\n  KeyD: {\n    x: 3.75,\n    y: 2,\n    zones: [\"middle\", \"left\", \"home\"],\n  },\n  KeyF: {\n    x: 4.75,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n    homing: true,\n  },\n  KeyG: {\n    x: 5.75,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n  },\n  KeyH: {\n    x: 6.75,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n  },\n  KeyJ: {\n    x: 7.75,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n    homing: true,\n  },\n  KeyK: {\n    x: 8.75,\n    y: 2,\n    zones: [\"middle\", \"right\", \"home\"],\n  },\n  KeyL: {\n    x: 9.75,\n    y: 2,\n    zones: [\"ring\", \"right\", \"home\"],\n  },\n  Semicolon: {\n    x: 10.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  Quote: {\n    x: 11.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  Enter: {\n    x: 12.75,\n    y: 2,\n    w: 2.25,\n    h: 1,\n    labels: [{ text: \"Enter\" }],\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  ShiftLeft: {\n    x: 0,\n    y: 3,\n    w: 2.25,\n    h: 1,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyZ: {\n    x: 2.25,\n    y: 3,\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyX: {\n    x: 3.25,\n    y: 3,\n    zones: [\"ring\", \"left\", \"bottom\"],\n  },\n  KeyC: {\n    x: 4.25,\n    y: 3,\n    zones: [\"middle\", \"left\", \"bottom\"],\n  },\n  KeyV: {\n    x: 5.25,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyB: {\n    x: 6.25,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyN: {\n    x: 7.25,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  KeyM: {\n    x: 8.25,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  Comma: {\n    x: 9.25,\n    y: 3,\n    zones: [\"middle\", \"right\", \"bottom\"],\n  },\n  Period: {\n    x: 10.25,\n    y: 3,\n    zones: [\"ring\", \"right\", \"bottom\"],\n  },\n  Slash: {\n    x: 11.25,\n    y: 3,\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ShiftRight: {\n    x: 12.25,\n    y: 3,\n    w: 2.75,\n    h: 1,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ControlLeft: {\n    x: 0,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Ctrl\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  AltLeft: {\n    x: 1.5,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Alt\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  Space: {\n    x: 3,\n    y: 4,\n    w: 9,\n    h: 1,\n    zones: [\"thumb\", \"right\", \"bottom\"],\n  },\n  AltRight: {\n    x: 12,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Alt\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ControlRight: {\n    x: 13.5,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Ctrl\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n};\n","import { type GeometryDict } from \"../types.ts\";\n\nexport const EXTRA: GeometryDict = {\n  Insert: {\n    x: 15.5,\n    y: 0,\n    labels: [{ text: \"Insert\", pos: [5, 5], align: [\"s\", \"t\"] }],\n  },\n  Home: {\n    x: 16.5,\n    y: 0,\n    labels: [{ text: \"Home\", pos: [5, 5], align: [\"s\", \"t\"] }],\n  },\n  PageUp: {\n    x: 17.5,\n    y: 0,\n    labels: [\n      { text: \"Page\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"Up\", pos: [5, 18], align: [\"s\", \"t\"] },\n    ],\n  },\n  Delete: {\n    x: 15.5,\n    y: 1,\n    labels: [{ text: \"Delete\", pos: [5, 5], align: [\"s\", \"t\"] }],\n  },\n  End: {\n    x: 16.5,\n    y: 1,\n    labels: [{ text: \"End\", pos: [5, 5], align: [\"s\", \"t\"] }],\n  },\n  PageDown: {\n    x: 17.5,\n    y: 1,\n    labels: [\n      { text: \"Page\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"Down\", pos: [5, 18], align: [\"s\", \"t\"] },\n    ],\n  },\n  ArrowUp: {\n    x: 16.5,\n    y: 3,\n    labels: [{ text: \"\\u2191\", pos: [20, 20], align: [\"m\", \"m\"] }],\n  },\n  ArrowLeft: {\n    x: 15.5,\n    y: 4,\n    labels: [{ text: \"\\u2190\", pos: [20, 20], align: [\"m\", \"m\"] }],\n  },\n  ArrowDown: {\n    x: 16.5,\n    y: 4,\n    labels: [{ text: \"\\u2193\", pos: [20, 20], align: [\"m\", \"m\"] }],\n  },\n  ArrowRight: {\n    x: 17.5,\n    y: 4,\n    labels: [{ text: \"\\u2192\", pos: [20, 20], align: [\"m\", \"m\"] }],\n  },\n  NumLock: {\n    x: 19,\n    y: 0,\n    labels: [\n      { text: \"Num\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"Lock\", pos: [5, 18], align: [\"s\", \"t\"] },\n    ],\n  },\n  NumpadDivide: {\n    x: 20,\n    y: 0,\n    labels: [{ text: \"\\u2044\" }],\n  },\n  NumpadMultiply: {\n    x: 21,\n    y: 0,\n    labels: [{ text: \"\\u00D7\" }],\n  },\n  NumpadSubtract: {\n    x: 22,\n    y: 0,\n    labels: [{ text: \"\\u2212\" }],\n  },\n  Numpad7: {\n    x: 19,\n    y: 1,\n    labels: [\n      { text: \"7\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"Home\", pos: [35, 35], align: [\"e\", \"b\"] },\n    ],\n  },\n  Numpad8: {\n    x: 20,\n    y: 1,\n    labels: [\n      { text: \"8\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"\\u2191\", pos: [35, 35], align: [\"e\", \"b\"] },\n    ],\n  },\n  Numpad9: {\n    x: 21,\n    y: 1,\n    labels: [\n      { text: \"9\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"Pg Up\", pos: [35, 35], align: [\"e\", \"b\"] },\n    ],\n  },\n  NumpadAdd: {\n    x: 22,\n    y: 1,\n    w: 1,\n    h: 2,\n    labels: [{ text: \"+\" }],\n  },\n  Numpad4: {\n    x: 19,\n    y: 2,\n    labels: [\n      { text: \"4\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"\\u2190\", pos: [35, 35], align: [\"e\", \"b\"] },\n    ],\n  },\n  Numpad5: {\n    x: 20,\n    y: 2,\n    labels: [{ text: \"5\", pos: [5, 5], align: [\"s\", \"t\"] }],\n  },\n  Numpad6: {\n    x: 21,\n    y: 2,\n    labels: [\n      { text: \"6\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"\\u2192\", pos: [35, 35], align: [\"e\", \"b\"] },\n    ],\n  },\n  Numpad1: {\n    x: 19,\n    y: 3,\n    labels: [\n      { text: \"1\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"End\", pos: [35, 35], align: [\"e\", \"b\"] },\n    ],\n  },\n  Numpad2: {\n    x: 20,\n    y: 3,\n    labels: [\n      { text: \"2\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"\\u2193\", pos: [35, 35], align: [\"e\", \"b\"] },\n    ],\n  },\n  Numpad3: {\n    x: 21,\n    y: 3,\n    labels: [\n      { text: \"3\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"Pg Dn\", pos: [35, 35], align: [\"e\", \"b\"] },\n    ],\n  },\n  NumpadEnter: {\n    x: 22,\n    y: 3,\n    w: 1,\n    h: 2,\n    labels: [{ text: \"Enter\", pos: [5, 5], align: [\"s\", \"t\"] }],\n  },\n  Numpad0: {\n    x: 19,\n    y: 4,\n    w: 2,\n    h: 1,\n    labels: [\n      { text: \"0\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"Ins\", pos: [75, 35], align: [\"e\", \"b\"] },\n    ],\n  },\n  NumpadDecimal: {\n    x: 21,\n    y: 4,\n    labels: [\n      { text: \".\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"Del\", pos: [35, 35], align: [\"e\", \"b\"] },\n    ],\n  },\n};\n","import { type GeometryDict } from \"../types.ts\";\nimport { ANSI_101 } from \"./ansi_101.ts\";\nimport { EXTRA } from \"./extra.ts\";\n\nexport const ANSI_101_FULL: GeometryDict = {\n  ...ANSI_101,\n  ...EXTRA,\n};\n","import { type GeometryDict } from \"../types.ts\";\n\n// See https://www.w3.org/TR/uievents-code/#keyboard-104\nexport const BRAZILIAN_104: GeometryDict = {\n  Backquote: {\n    x: 0,\n    y: 0,\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit1: {\n    x: 1,\n    y: 0,\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit2: {\n    x: 2,\n    y: 0,\n    zones: [\"ring\", \"left\", \"digit\"],\n  },\n  Digit3: {\n    x: 3,\n    y: 0,\n    zones: [\"middle\", \"left\", \"digit\"],\n  },\n  Digit4: {\n    x: 4,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit5: {\n    x: 5,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit6: {\n    x: 6,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit7: {\n    x: 7,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit8: {\n    x: 8,\n    y: 0,\n    zones: [\"middle\", \"right\", \"digit\"],\n  },\n  Digit9: {\n    x: 9,\n    y: 0,\n    zones: [\"ring\", \"right\", \"digit\"],\n  },\n  Digit0: {\n    x: 10,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Minus: {\n    x: 11,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Equal: {\n    x: 12,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Backspace: {\n    x: 13,\n    y: 0,\n    w: 2,\n    h: 1,\n    labels: [{ text: \"Backspace\" }],\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Tab: {\n    x: 0,\n    y: 1,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Tab\" }],\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyQ: {\n    x: 1.5,\n    y: 1,\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyW: {\n    x: 2.5,\n    y: 1,\n    zones: [\"ring\", \"left\", \"top\"],\n  },\n  KeyE: {\n    x: 3.5,\n    y: 1,\n    zones: [\"middle\", \"left\", \"top\"],\n  },\n  KeyR: {\n    x: 4.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyT: {\n    x: 5.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyY: {\n    x: 6.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyU: {\n    x: 7.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyI: {\n    x: 8.5,\n    y: 1,\n    zones: [\"middle\", \"right\", \"top\"],\n  },\n  KeyO: {\n    x: 9.5,\n    y: 1,\n    zones: [\"ring\", \"right\", \"top\"],\n  },\n  KeyP: {\n    x: 10.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  BracketLeft: {\n    x: 11.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  BracketRight: {\n    x: 12.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  Enter: {\n    x: 13.5,\n    y: 1,\n    w: 1.5,\n    h: 2,\n    labels: [{ text: \"Enter\" }],\n    shape: \"m 0 0 l 0 38 l 10 0 l 0 40 l 48 0 l 0 -78 z\",\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  CapsLock: {\n    x: 0,\n    y: 2,\n    w: 1.75,\n    h: 1,\n    labels: [{ text: \"Caps Lock\" }],\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyA: {\n    x: 1.75,\n    y: 2,\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyS: {\n    x: 2.75,\n    y: 2,\n    zones: [\"ring\", \"left\", \"home\"],\n  },\n  KeyD: {\n    x: 3.75,\n    y: 2,\n    zones: [\"middle\", \"left\", \"home\"],\n  },\n  KeyF: {\n    x: 4.75,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n    homing: true,\n  },\n  KeyG: {\n    x: 5.75,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n  },\n  KeyH: {\n    x: 6.75,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n  },\n  KeyJ: {\n    x: 7.75,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n    homing: true,\n  },\n  KeyK: {\n    x: 8.75,\n    y: 2,\n    zones: [\"middle\", \"right\", \"home\"],\n  },\n  KeyL: {\n    x: 9.75,\n    y: 2,\n    zones: [\"ring\", \"right\", \"home\"],\n  },\n  Semicolon: {\n    x: 10.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  Quote: {\n    x: 11.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  Backslash: {\n    x: 12.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  ShiftLeft: {\n    x: 0,\n    y: 3,\n    w: 1.25,\n    h: 1,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  IntlBackslash: {\n    x: 1.25,\n    y: 3,\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyZ: {\n    x: 2.25,\n    y: 3,\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyX: {\n    x: 3.25,\n    y: 3,\n    zones: [\"ring\", \"left\", \"bottom\"],\n  },\n  KeyC: {\n    x: 4.25,\n    y: 3,\n    zones: [\"middle\", \"left\", \"bottom\"],\n  },\n  KeyV: {\n    x: 5.25,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyB: {\n    x: 6.25,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyN: {\n    x: 7.25,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  KeyM: {\n    x: 8.25,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  Comma: {\n    x: 9.25,\n    y: 3,\n    zones: [\"middle\", \"right\", \"bottom\"],\n  },\n  Period: {\n    x: 10.25,\n    y: 3,\n    zones: [\"ring\", \"right\", \"bottom\"],\n  },\n  Slash: {\n    x: 11.25,\n    y: 3,\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  IntlRo: {\n    x: 12.25,\n    y: 3,\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ShiftRight: {\n    x: 13.25,\n    y: 3,\n    w: 1.75,\n    h: 1,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ControlLeft: {\n    x: 0,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Ctrl\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  AltLeft: {\n    x: 1.5,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Alt\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  Space: {\n    x: 3,\n    y: 4,\n    w: 9,\n    h: 1,\n    zones: [\"thumb\", \"right\", \"bottom\"],\n  },\n  AltRight: {\n    x: 12,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Alt\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ControlRight: {\n    x: 13.5,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Ctrl\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n};\n","import { type GeometryDict } from \"../types.ts\";\nimport { BRAZILIAN_104 } from \"./brazilian_104.ts\";\nimport { EXTRA } from \"./extra.ts\";\n\nexport const BRAZILIAN_104_FULL: GeometryDict = {\n  ...BRAZILIAN_104,\n  ...EXTRA,\n};\n","import { type GeometryDict } from \"../types.ts\";\n\n// See https://www.w3.org/TR/uievents-code/#keyboard-102\nexport const ISO_102: GeometryDict = {\n  Backquote: {\n    x: 0,\n    y: 0,\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit1: {\n    x: 1,\n    y: 0,\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit2: {\n    x: 2,\n    y: 0,\n    zones: [\"ring\", \"left\", \"digit\"],\n  },\n  Digit3: {\n    x: 3,\n    y: 0,\n    zones: [\"middle\", \"left\", \"digit\"],\n  },\n  Digit4: {\n    x: 4,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit5: {\n    x: 5,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit6: {\n    x: 6,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit7: {\n    x: 7,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit8: {\n    x: 8,\n    y: 0,\n    zones: [\"middle\", \"right\", \"digit\"],\n  },\n  Digit9: {\n    x: 9,\n    y: 0,\n    zones: [\"ring\", \"right\", \"digit\"],\n  },\n  Digit0: {\n    x: 10,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Minus: {\n    x: 11,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Equal: {\n    x: 12,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Backspace: {\n    x: 13,\n    y: 0,\n    w: 2,\n    h: 1,\n    labels: [{ text: \"Backspace\" }],\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Tab: {\n    x: 0,\n    y: 1,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Tab\" }],\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyQ: {\n    x: 1.5,\n    y: 1,\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyW: {\n    x: 2.5,\n    y: 1,\n    zones: [\"ring\", \"left\", \"top\"],\n  },\n  KeyE: {\n    x: 3.5,\n    y: 1,\n    zones: [\"middle\", \"left\", \"top\"],\n  },\n  KeyR: {\n    x: 4.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyT: {\n    x: 5.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyY: {\n    x: 6.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyU: {\n    x: 7.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyI: {\n    x: 8.5,\n    y: 1,\n    zones: [\"middle\", \"right\", \"top\"],\n  },\n  KeyO: {\n    x: 9.5,\n    y: 1,\n    zones: [\"ring\", \"right\", \"top\"],\n  },\n  KeyP: {\n    x: 10.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  BracketLeft: {\n    x: 11.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  BracketRight: {\n    x: 12.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  Enter: {\n    x: 13.5,\n    y: 1,\n    w: 1.5,\n    h: 2,\n    labels: [{ text: \"Enter\" }],\n    shape: \"m 0 0 l 0 38 l 10 0 l 0 40 l 48 0 l 0 -78 z\",\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  CapsLock: {\n    x: 0,\n    y: 2,\n    w: 1.75,\n    h: 1,\n    labels: [{ text: \"Caps Lock\" }],\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyA: {\n    x: 1.75,\n    y: 2,\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyS: {\n    x: 2.75,\n    y: 2,\n    zones: [\"ring\", \"left\", \"home\"],\n  },\n  KeyD: {\n    x: 3.75,\n    y: 2,\n    zones: [\"middle\", \"left\", \"home\"],\n  },\n  KeyF: {\n    x: 4.75,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n    homing: true,\n  },\n  KeyG: {\n    x: 5.75,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n  },\n  KeyH: {\n    x: 6.75,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n  },\n  KeyJ: {\n    x: 7.75,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n    homing: true,\n  },\n  KeyK: {\n    x: 8.75,\n    y: 2,\n    zones: [\"middle\", \"right\", \"home\"],\n  },\n  KeyL: {\n    x: 9.75,\n    y: 2,\n    zones: [\"ring\", \"right\", \"home\"],\n  },\n  Semicolon: {\n    x: 10.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  Quote: {\n    x: 11.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  Backslash: {\n    x: 12.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  ShiftLeft: {\n    x: 0,\n    y: 3,\n    w: 1.25,\n    h: 1,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  IntlBackslash: {\n    x: 1.25,\n    y: 3,\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyZ: {\n    x: 2.25,\n    y: 3,\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyX: {\n    x: 3.25,\n    y: 3,\n    zones: [\"ring\", \"left\", \"bottom\"],\n  },\n  KeyC: {\n    x: 4.25,\n    y: 3,\n    zones: [\"middle\", \"left\", \"bottom\"],\n  },\n  KeyV: {\n    x: 5.25,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyB: {\n    x: 6.25,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyN: {\n    x: 7.25,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  KeyM: {\n    x: 8.25,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  Comma: {\n    x: 9.25,\n    y: 3,\n    zones: [\"middle\", \"right\", \"bottom\"],\n  },\n  Period: {\n    x: 10.25,\n    y: 3,\n    zones: [\"ring\", \"right\", \"bottom\"],\n  },\n  Slash: {\n    x: 11.25,\n    y: 3,\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ShiftRight: {\n    x: 12.25,\n    y: 3,\n    w: 2.75,\n    h: 1,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ControlLeft: {\n    x: 0,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Ctrl\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  AltLeft: {\n    x: 1.5,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Alt\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  Space: {\n    x: 3,\n    y: 4,\n    w: 9,\n    h: 1,\n    zones: [\"thumb\", \"right\", \"bottom\"],\n  },\n  AltRight: {\n    x: 12,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Alt\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ControlRight: {\n    x: 13.5,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Ctrl\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n};\n","import { type GeometryDict } from \"../types.ts\";\nimport { EXTRA } from \"./extra.ts\";\nimport { ISO_102 } from \"./iso_102.ts\";\n\nexport const ISO_102_FULL: GeometryDict = {\n  ...ISO_102,\n  ...EXTRA,\n};\n","import { type GeometryDict } from \"../types.ts\";\n\n// See https://www.w3.org/TR/uievents-code/#keyboard-106\nexport const JAPANESE_106: GeometryDict = {\n  IntlHanZen: {\n    x: 0,\n    y: 0,\n    labels: [\n      { text: \"半角/\", pos: [20, 0], align: [\"m\", \"t\"] },\n      { text: \"全角/\", pos: [20, 11], align: [\"m\", \"t\"] },\n      { text: \"漢字\", pos: [20, 22], align: [\"m\", \"t\"] },\n    ],\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit1: {\n    x: 1,\n    y: 0,\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit2: {\n    x: 2,\n    y: 0,\n    zones: [\"ring\", \"left\", \"digit\"],\n  },\n  Digit3: {\n    x: 3,\n    y: 0,\n    zones: [\"middle\", \"left\", \"digit\"],\n  },\n  Digit4: {\n    x: 4,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit5: {\n    x: 5,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit6: {\n    x: 6,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit7: {\n    x: 7,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit8: {\n    x: 8,\n    y: 0,\n    zones: [\"middle\", \"right\", \"digit\"],\n  },\n  Digit9: {\n    x: 9,\n    y: 0,\n    zones: [\"ring\", \"right\", \"digit\"],\n  },\n  Digit0: {\n    x: 10,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Minus: {\n    x: 11,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Equal: {\n    x: 12,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  IntlYen: {\n    x: 13,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Backspace: {\n    x: 14,\n    y: 0,\n    labels: [\n      { text: \"Back\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"space\", pos: [5, 18], align: [\"s\", \"t\"] },\n    ],\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Tab: {\n    x: 0,\n    y: 1,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Tab\" }],\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyQ: {\n    x: 1.5,\n    y: 1,\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyW: {\n    x: 2.5,\n    y: 1,\n    zones: [\"ring\", \"left\", \"top\"],\n  },\n  KeyE: {\n    x: 3.5,\n    y: 1,\n    zones: [\"middle\", \"left\", \"top\"],\n  },\n  KeyR: {\n    x: 4.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyT: {\n    x: 5.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyY: {\n    x: 6.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyU: {\n    x: 7.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyI: {\n    x: 8.5,\n    y: 1,\n    zones: [\"middle\", \"right\", \"top\"],\n  },\n  KeyO: {\n    x: 9.5,\n    y: 1,\n    zones: [\"ring\", \"right\", \"top\"],\n  },\n  KeyP: {\n    x: 10.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  BracketLeft: {\n    x: 11.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  BracketRight: {\n    x: 12.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  Enter: {\n    x: 13.5,\n    y: 1,\n    w: 1.5,\n    h: 2,\n    labels: [{ text: \"Enter\" }],\n    shape: \"m 0 0 l 0 38 l 10 0 l 0 40 l 48 0 l 0 -78 z\",\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  CapsLock: {\n    x: 0,\n    y: 2,\n    w: 1.75,\n    h: 1,\n    labels: [{ text: \"Caps Lock\" }],\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyA: {\n    x: 1.75,\n    y: 2,\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyS: {\n    x: 2.75,\n    y: 2,\n    zones: [\"ring\", \"left\", \"home\"],\n  },\n  KeyD: {\n    x: 3.75,\n    y: 2,\n    zones: [\"middle\", \"left\", \"home\"],\n  },\n  KeyF: {\n    x: 4.75,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n    homing: true,\n  },\n  KeyG: {\n    x: 5.75,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n  },\n  KeyH: {\n    x: 6.75,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n  },\n  KeyJ: {\n    x: 7.75,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n    homing: true,\n  },\n  KeyK: {\n    x: 8.75,\n    y: 2,\n    zones: [\"middle\", \"right\", \"home\"],\n  },\n  KeyL: {\n    x: 9.75,\n    y: 2,\n    zones: [\"ring\", \"right\", \"home\"],\n  },\n  Semicolon: {\n    x: 10.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  Quote: {\n    x: 11.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  Backslash: {\n    x: 12.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  ShiftLeft: {\n    x: 0,\n    y: 3,\n    w: 2.25,\n    h: 1,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyZ: {\n    x: 2.25,\n    y: 3,\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyX: {\n    x: 3.25,\n    y: 3,\n    zones: [\"ring\", \"left\", \"bottom\"],\n  },\n  KeyC: {\n    x: 4.25,\n    y: 3,\n    zones: [\"middle\", \"left\", \"bottom\"],\n  },\n  KeyV: {\n    x: 5.25,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyB: {\n    x: 6.25,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyN: {\n    x: 7.25,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  KeyM: {\n    x: 8.25,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  Comma: {\n    x: 9.25,\n    y: 3,\n    zones: [\"middle\", \"right\", \"bottom\"],\n  },\n  Period: {\n    x: 10.25,\n    y: 3,\n    zones: [\"ring\", \"right\", \"bottom\"],\n  },\n  Slash: {\n    x: 11.25,\n    y: 3,\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  IntlRo: {\n    x: 12.25,\n    y: 3,\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ShiftRight: {\n    x: 13.25,\n    y: 3,\n    w: 1.75,\n    h: 1,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ControlLeft: {\n    x: 0,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Ctrl\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  AltLeft: {\n    x: 1.5,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Alt\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  IntlMuhenkan: {\n    x: 3,\n    y: 4,\n    w: 1,\n    h: 1,\n    labels: [{ text: \"無変換\", pos: [20, 20], align: [\"m\", \"m\"] }],\n    zones: [\"thumb\", \"left\", \"bottom\"],\n  },\n  Space: {\n    x: 4,\n    y: 4,\n    w: 6,\n    h: 1,\n    zones: [\"thumb\", \"right\", \"bottom\"],\n  },\n  IntlHenkan: {\n    x: 10,\n    y: 4,\n    h: 1,\n    labels: [{ text: \"変換\", pos: [20, 20], align: [\"m\", \"m\"] }],\n    zones: [\"thumb\", \"right\", \"bottom\"],\n  },\n  IntlHiraKata: {\n    x: 11,\n    y: 4,\n    h: 1,\n    labels: [\n      { text: \"カタカナ\", pos: [20, 0], align: [\"m\", \"t\"] },\n      { text: \"ひらがな\", pos: [20, 11], align: [\"m\", \"t\"] },\n      { text: \"ローマ字\", pos: [20, 22], align: [\"m\", \"t\"] },\n    ],\n    zones: [\"thumb\", \"right\", \"bottom\"],\n  },\n  AltRight: {\n    x: 12,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Alt\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ControlRight: {\n    x: 13.5,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Ctrl\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n};\n","import { type GeometryDict } from \"../types.ts\";\nimport { EXTRA } from \"./extra.ts\";\nimport { JAPANESE_106 } from \"./japanese_106.ts\";\n\nexport const JAPANESE_106_FULL: GeometryDict = {\n  ...JAPANESE_106,\n  ...EXTRA,\n};\n","import { type GeometryDict } from \"../types.ts\";\n\n// See https://www.w3.org/TR/uievents-code/#keyboard-103\nexport const KOREAN_103: GeometryDict = {\n  Backquote: {\n    x: 0,\n    y: 0,\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit1: {\n    x: 1,\n    y: 0,\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit2: {\n    x: 2,\n    y: 0,\n    zones: [\"ring\", \"left\", \"digit\"],\n  },\n  Digit3: {\n    x: 3,\n    y: 0,\n    zones: [\"middle\", \"left\", \"digit\"],\n  },\n  Digit4: {\n    x: 4,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit5: {\n    x: 5,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit6: {\n    x: 6,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit7: {\n    x: 7,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit8: {\n    x: 8,\n    y: 0,\n    zones: [\"middle\", \"right\", \"digit\"],\n  },\n  Digit9: {\n    x: 9,\n    y: 0,\n    zones: [\"ring\", \"right\", \"digit\"],\n  },\n  Digit0: {\n    x: 10,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Minus: {\n    x: 11,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Equal: {\n    x: 12,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  IntlYen: {\n    x: 13,\n    y: 0,\n    labels: [{ text: \"?\" }],\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Backspace: {\n    x: 14,\n    y: 0,\n    labels: [\n      { text: \"Back\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"space\", pos: [5, 18], align: [\"s\", \"t\"] },\n    ],\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Tab: {\n    x: 0,\n    y: 1,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Tab\" }],\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyQ: {\n    x: 1.5,\n    y: 1,\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyW: {\n    x: 2.5,\n    y: 1,\n    zones: [\"ring\", \"left\", \"top\"],\n  },\n  KeyE: {\n    x: 3.5,\n    y: 1,\n    zones: [\"middle\", \"left\", \"top\"],\n  },\n  KeyR: {\n    x: 4.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyT: {\n    x: 5.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyY: {\n    x: 6.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyU: {\n    x: 7.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyI: {\n    x: 8.5,\n    y: 1,\n    zones: [\"middle\", \"right\", \"top\"],\n  },\n  KeyO: {\n    x: 9.5,\n    y: 1,\n    zones: [\"ring\", \"right\", \"top\"],\n  },\n  KeyP: {\n    x: 10.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  BracketLeft: {\n    x: 11.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  BracketRight: {\n    x: 12.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  Enter: {\n    x: 12.75,\n    y: 1,\n    w: 2.25,\n    h: 2,\n    labels: [{ text: \"Enter\", pos: [50, 40], align: [\"m\", \"m\"] }],\n    shape: \"m 30 0 l 0 40 l -30 0 l 0 40 l 88 0 l 0 -80 z\",\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  CapsLock: {\n    x: 0,\n    y: 2,\n    w: 1.75,\n    h: 1,\n    labels: [{ text: \"Caps Lock\" }],\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyA: {\n    x: 1.75,\n    y: 2,\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyS: {\n    x: 2.75,\n    y: 2,\n    zones: [\"ring\", \"left\", \"home\"],\n  },\n  KeyD: {\n    x: 3.75,\n    y: 2,\n    zones: [\"middle\", \"left\", \"home\"],\n  },\n  KeyF: {\n    x: 4.75,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n    homing: true,\n  },\n  KeyG: {\n    x: 5.75,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n  },\n  KeyH: {\n    x: 6.75,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n  },\n  KeyJ: {\n    x: 7.75,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n    homing: true,\n  },\n  KeyK: {\n    x: 8.75,\n    y: 2,\n    zones: [\"middle\", \"right\", \"home\"],\n  },\n  KeyL: {\n    x: 9.75,\n    y: 2,\n    zones: [\"ring\", \"right\", \"home\"],\n  },\n  Semicolon: {\n    x: 10.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  Quote: {\n    x: 11.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  ShiftLeft: {\n    x: 0,\n    y: 3,\n    w: 2.25,\n    h: 1,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyZ: {\n    x: 2.25,\n    y: 3,\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyX: {\n    x: 3.25,\n    y: 3,\n    zones: [\"ring\", \"left\", \"bottom\"],\n  },\n  KeyC: {\n    x: 4.25,\n    y: 3,\n    zones: [\"middle\", \"left\", \"bottom\"],\n  },\n  KeyV: {\n    x: 5.25,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyB: {\n    x: 6.25,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyN: {\n    x: 7.25,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  KeyM: {\n    x: 8.25,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  Comma: {\n    x: 9.25,\n    y: 3,\n    zones: [\"middle\", \"right\", \"bottom\"],\n  },\n  Period: {\n    x: 10.25,\n    y: 3,\n    zones: [\"ring\", \"right\", \"bottom\"],\n  },\n  Slash: {\n    x: 11.25,\n    y: 3,\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ShiftRight: {\n    x: 12.25,\n    y: 3,\n    w: 2.75,\n    h: 1,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ControlLeft: {\n    x: 0,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Ctrl\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  AltLeft: {\n    x: 1.5,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Alt\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  Lang2: {\n    x: 3,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"한자\" }],\n    zones: [\"thumb\", \"left\", \"bottom\"],\n  },\n  Space: {\n    x: 4.5,\n    y: 4,\n    w: 6,\n    h: 1,\n    zones: [\"thumb\", \"right\", \"bottom\"],\n  },\n  Lang1: {\n    x: 10.5,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"한/영\" }],\n    zones: [\"thumb\", \"right\", \"bottom\"],\n  },\n  AltRight: {\n    x: 12,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Alt\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ControlRight: {\n    x: 13.5,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Ctrl\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n};\n","import { type GeometryDict } from \"../types.ts\";\nimport { EXTRA } from \"./extra.ts\";\nimport { KOREAN_103 } from \"./korean_103.ts\";\n\nexport const KOREAN_103_FULL: GeometryDict = {\n  ...KOREAN_103,\n  ...EXTRA,\n};\n","export class KeyModifier {\n  static readonly None = new KeyModifier(/* shift= */ false, /* alt= */ false);\n  static readonly Shift = new KeyModifier(/* shift= */ true, /* alt= */ false);\n  static readonly Alt = new KeyModifier(/* shift= */ false, /* alt= */ true);\n  static readonly ShiftAlt = new KeyModifier(\n    /* shift= */ true,\n    /* alt= */ true,\n  );\n\n  static from(shift: boolean, alt: boolean) {\n    if (shift && alt) {\n      return KeyModifier.ShiftAlt;\n    }\n    if (shift) {\n      return KeyModifier.Shift;\n    }\n    if (alt) {\n      return KeyModifier.Alt;\n    }\n    return KeyModifier.None;\n  }\n\n  readonly shift: boolean;\n  readonly alt: boolean;\n  readonly complexity: number;\n\n  private constructor(shift: boolean, alt: boolean) {\n    this.shift = shift;\n    this.alt = alt;\n    this.complexity = complexityOf(shift, alt);\n  }\n}\n\nfunction complexityOf(shift: boolean, alt: boolean): number {\n  if (shift && alt) {\n    return 2;\n  }\n  if (shift || alt) {\n    return 1;\n  }\n  return 0;\n}\n","import { isNumber, isObject } from \"@mkboard/lang\";\r\nimport { type CodePoint } from \"@mkboard/unicode\";\r\nimport { KeyModifier } from \"./keymodifier.ts\";\r\nimport {\r\n  type Character,\r\n  type DeadCharacter,\r\n  type KeyId,\r\n  type LigatureCharacter,\r\n  type SpecialCharacter,\r\n} from \"./types.ts\";\r\n\r\nexport class KeyCharacters {\r\n  static isCodePoint = (ch: unknown | null): ch is CodePoint => {\r\n    return isNumber(ch) && ch > 0x0000;\r\n  };\r\n\r\n  static isDead = (ch: unknown | null): ch is DeadCharacter => {\r\n    return isObject(ch) && \"dead\" in ch;\r\n  };\r\n\r\n  static isSpecial = (ch: unknown | null): ch is SpecialCharacter => {\r\n    return isObject(ch) && \"special\" in ch;\r\n  };\r\n\r\n  static isLigature = (ch: unknown | null): ch is LigatureCharacter => {\r\n    return isObject(ch) && \"ligature\" in ch;\r\n  };\r\n\r\n  readonly id: KeyId;\r\n  readonly a: Character | null;\r\n  readonly b: Character | null;\r\n  readonly c: Character | null;\r\n  readonly d: Character | null;\r\n\r\n  constructor(\r\n    id: KeyId,\r\n    a: Character | null,\r\n    b: Character | null,\r\n    c: Character | null,\r\n    d: Character | null,\r\n  ) {\r\n    this.id = id;\r\n    this.a = a || null;\r\n    this.b = b || null;\r\n    this.c = c || null;\r\n    this.d = d || null;\r\n  }\r\n\r\n  getCodePoint(modifier: KeyModifier): CodePoint | null {\r\n    switch (modifier) {\r\n      case KeyModifier.None:\r\n        return select(this.a);\r\n      case KeyModifier.Shift:\r\n        return select(this.b, this.a);\r\n      case KeyModifier.Alt:\r\n        return select(this.c, this.b, this.a);\r\n      case KeyModifier.ShiftAlt:\r\n        return select(this.d, this.c, this.b, this.a);\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }\r\n\r\n  get valid() {\r\n    return Boolean(this.a || this.b || this.c || this.d);\r\n  }\r\n}\r\n\r\nfunction select(...characters: (Character | null)[]): CodePoint | null {\r\n  for (const character of characters) {\r\n    if (character != null) {\r\n      if (KeyCharacters.isCodePoint(character)) {\r\n        return character;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","import { type CodePoint, type HasCodePoint } from \"@mkboard/unicode\";\r\nimport { type KeyModifier } from \"./keymodifier.ts\";\r\nimport { type KeyId } from \"./types.ts\";\r\n\r\nexport class KeyCombo implements HasCodePoint {\r\n  readonly complexity: number;\r\n  readonly shift: boolean;\r\n  readonly alt: boolean;\r\n\r\n  constructor(\r\n    readonly codePoint: CodePoint,\r\n    readonly id: KeyId,\r\n    readonly modifier: KeyModifier,\r\n    readonly prefix: KeyCombo | null = null,\r\n  ) {\r\n    let complexity = 0;\r\n    let shift = false;\r\n    let alt = false;\r\n    let combo: KeyCombo | null = this; // eslint-disable-line @typescript-eslint/no-this-alias\r\n    while (combo != null) {\r\n      const { modifier } = combo;\r\n      complexity += 1 + modifier.complexity;\r\n      shift ||= modifier.shift;\r\n      alt ||= modifier.alt;\r\n      combo = combo.prefix;\r\n    }\r\n    this.complexity = complexity;\r\n    this.shift = shift;\r\n    this.alt = alt;\r\n  }\r\n}\r\n","import {\n  type Character,\n  type CharacterDict,\n  type GeometryDict,\n  type KeyId,\n  type LabelShape,\n  type ZoneId,\n} from \"./types.ts\";\n\nexport class KeyShape {\n  static readonly fingerZones: readonly ZoneId[] = [\n    \"pinky\",\n    \"ring\",\n    \"middle\",\n    \"leftIndex\",\n    \"rightIndex\",\n    \"thumb\",\n  ];\n  static readonly handZones: readonly ZoneId[] = [\"left\", \"right\"];\n  static readonly rowZones: readonly ZoneId[] = [\n    \"digit\",\n    \"top\",\n    \"home\",\n    \"bottom\",\n  ];\n\n  /** Key identifier. */\n  readonly id: KeyId;\n  /** Key X position. */\n  readonly x: number;\n  /** Key Y position. */\n  readonly y: number;\n  /** Key width. */\n  readonly w: number;\n  /** Key height. */\n  readonly h: number;\n  /** Key labels. */\n  readonly labels: readonly LabelShape[];\n  /** Key shape SVG path. */\n  readonly shape: string | null;\n  /** The finger to type this key with. */\n  readonly zones: readonly ZoneId[];\n  /** Whether this is a homing key. */\n  readonly homing: boolean;\n  /** The code point produced by this key. */\n  readonly a: Character | null;\n  /** The code point produced by this key. */\n  readonly b: Character | null;\n  /** The code point produced by this key. */\n  readonly c: Character | null;\n  /** The code point produced by this key. */\n  readonly d: Character | null;\n  /** Finger zone, if any. */\n  readonly finger: ZoneId | null;\n  /** Hand zone, if any. */\n  readonly hand: ZoneId | null;\n  /** Row zone, if any. */\n  readonly row: ZoneId | null;\n\n  constructor(\n    id: KeyId,\n    geometryConf: GeometryDict[\"keyId\"],\n    characterConf: CharacterDict[\"keyId\"] | null,\n  ) {\n    const { x, y, w, h, labels, shape, zones, homing } = geometryConf;\n    const [a, b, c, d] = characterConf ?? [];\n    this.id = id;\n    this.x = x;\n    this.y = y;\n    this.w = w ?? 1;\n    this.h = h ?? 1;\n    this.labels = labels ?? [];\n    this.shape = shape ?? null;\n    this.zones = zones ?? [];\n    this.homing = homing ?? false;\n    this.a = a ?? null;\n    this.b = b ?? null;\n    this.c = c ?? null;\n    this.d = d ?? null;\n    this.finger = selectZone(KeyShape.fingerZones, this.zones);\n    this.hand = selectZone(KeyShape.handZones, this.zones);\n    this.row = selectZone(KeyShape.rowZones, this.zones);\n  }\n\n  inZone(id: ZoneId): boolean {\n    return this.zones.includes(id);\n  }\n\n  inAnyZone(ids: readonly ZoneId[]): boolean {\n    return ids.some((id) => this.zones.includes(id));\n  }\n\n  inAllZones(ids: readonly ZoneId[]): boolean {\n    return ids.every((id) => this.zones.includes(id));\n  }\n}\n\nfunction selectZone(\n  zones: readonly ZoneId[],\n  subset: readonly ZoneId[],\n): ZoneId | null {\n  for (const zone of zones) {\n    if (subset.includes(zone)) {\n      return zone;\n    }\n  }\n  return null;\n}\n","import { Enum, type EnumItem } from \"@mkboard/lang\";\r\nimport { type CodePoint, toCodePoints } from \"@mkboard/unicode\";\r\n\r\nexport class Language implements EnumItem {\r\n  static readonly AR = new Language(\r\n    /* id= */ \"ar\",\r\n    /* script= */ \"arabic\",\r\n    /* direction= */ \"rtl\",\r\n    /* alphabet= */ \"ابجدهوزحطيكلمنسعفصقرشتثخذضظغ\",\r\n  );\r\n  static readonly BE = new Language(\r\n    /* id= */ \"be\",\r\n    /* script= */ \"cyrillic\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"абвгдежзійклмнопрстуўфхцчшыьэюя\",\r\n  );\r\n  static readonly CS = new Language(\r\n    /* id= */ \"cs\",\r\n    /* script= */ \"latin\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"aábcčdďeéěfghiíjklmnňoóprřsštťuúůvxyýzž\",\r\n  );\r\n  static readonly DA = new Language(\r\n    /* id= */ \"da\",\r\n    /* script= */ \"latin\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"abcdefghijklmnopqrstuvwxyzæøå\",\r\n  );\r\n  static readonly DE = new Language(\r\n    /* id= */ \"de\",\r\n    /* script= */ \"latin\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"aäbcdefghijklmnoöpqrstuüvwxyzß\",\r\n  );\r\n  static readonly EL = new Language(\r\n    /* id= */ \"el\",\r\n    /* script= */ \"greek\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"αάβγδεέζηήθιίκλμνξοόπρσςτυύφχψωώ\",\r\n  );\r\n  static readonly EN = new Language(\r\n    /* id= */ \"en\",\r\n    /* script= */ \"latin\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"abcdefghijklmnopqrstuvwxyz\",\r\n  );\r\n  static readonly ES = new Language(\r\n    /* id= */ \"es\",\r\n    /* script= */ \"latin\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"aábcdeéfghiíjlmnñoópqrstuúvxyz\",\r\n  );\r\n  static readonly FA = new Language(\r\n    /* id= */ \"fa\",\r\n    /* script= */ \"arabic\",\r\n    /* direction= */ \"rtl\",\r\n    /* alphabet= */ \"ابپتثجچحخدذرزژسشصضطظعغفقکگلمنوهی\",\r\n  );\r\n  static readonly FR = new Language(\r\n    /* id= */ \"fr\",\r\n    /* script= */ \"latin\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"abcçdeéèfghijlmnopqrstuvxyz\",\r\n  );\r\n  static readonly HE = new Language(\r\n    /* id= */ \"he\",\r\n    /* script= */ \"hebrew\",\r\n    /* direction= */ \"rtl\",\r\n    /* alphabet= */ \"אבגדהוזחטיכךלמםנןסעפףצץקרשת\",\r\n  );\r\n  static readonly HR = new Language(\r\n    /* id= */ \"hr\",\r\n    /* script= */ \"latin\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"abcćčdđefghijklmnoprsštuvzž\",\r\n  );\r\n  static readonly HU = new Language(\r\n    /* id= */ \"hu\",\r\n    /* script= */ \"latin\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"aábcdeéfghiíjklmnoóöőpqrstuúüűvwxyz\",\r\n  );\r\n  static readonly IT = new Language(\r\n    /* id= */ \"it\",\r\n    /* script= */ \"latin\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"abcdefghijklmnopqrstuvwxyz\",\r\n  );\r\n  static readonly LT = new Language(\r\n    /* id= */ \"lt\",\r\n    /* script= */ \"latin\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"aąbcčdeęėfghiįyjklmnoprsštuųūvzž\",\r\n  );\r\n  static readonly NB = new Language(\r\n    /* id= */ \"nb\",\r\n    /* script= */ \"latin\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"abcdefghijklmnoprstuvwyæøå\",\r\n  );\r\n  static readonly NL = new Language(\r\n    /* id= */ \"nl\",\r\n    /* script= */ \"latin\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"abcdefghijklmnopqrstuvwxyz\",\r\n  );\r\n  static readonly PL = new Language(\r\n    /* id= */ \"pl\",\r\n    /* script= */ \"latin\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"aąbcćdeęfghijklłmnńoóprsśtuwyzźż\",\r\n  );\r\n  static readonly PT = new Language(\r\n    /* id= */ \"pt\",\r\n    /* script= */ \"latin\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"aáâãàbcçdeéêfghiíjlmnoóôõpqrstuúvxz\",\r\n  );\r\n  static readonly RO = new Language(\r\n    /* id= */ \"ro\",\r\n    /* script= */ \"latin\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"aăâbcdefghiîjlmnoprsștțuvxz\",\r\n  );\r\n  static readonly RU = new Language(\r\n    /* id= */ \"ru\",\r\n    /* script= */ \"cyrillic\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"абвгдежзийклмнопрстуфхцчшщъыьэюя\",\r\n  );\r\n  static readonly SL = new Language(\r\n    /* id= */ \"sl\",\r\n    /* script= */ \"latin\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"abcčdefghijklmnoprsštuvzž\",\r\n  );\r\n  static readonly SV = new Language(\r\n    /* id= */ \"sv\",\r\n    /* script= */ \"latin\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"abcdefghijklmnoprstuvwxyåäö\",\r\n  );\r\n  static readonly TH = new Language(\r\n    /* id= */ \"th\",\r\n    /* script= */ \"thai\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"กขคฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลวศษสหฬอฮฯะัาำิีึืุูเแโใไๅ็่้๊๋์\",\r\n  );\r\n  static readonly TR = new Language(\r\n    /* id= */ \"tr\",\r\n    /* script= */ \"latin\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"abcçdefgğhıijklmnoöprsştuüvyz\",\r\n  );\r\n  static readonly UK = new Language(\r\n    /* id= */ \"uk\",\r\n    /* script= */ \"cyrillic\",\r\n    /* direction= */ \"ltr\",\r\n    /* alphabet= */ \"абвгґдеєжзиіїйклмнопрстуфхцчшщьюя\",\r\n  );\r\n\r\n  static readonly ALL = new Enum<Language>(\r\n    Language.AR,\r\n    Language.BE,\r\n    Language.CS,\r\n    Language.DA,\r\n    Language.DE,\r\n    Language.EL,\r\n    Language.EN,\r\n    Language.ES,\r\n    Language.FA,\r\n    Language.FR,\r\n    Language.HE,\r\n    Language.HR,\r\n    Language.HU,\r\n    Language.IT,\r\n    Language.LT,\r\n    Language.NB,\r\n    Language.NL,\r\n    Language.PL,\r\n    Language.PT,\r\n    Language.RO,\r\n    Language.RU,\r\n    Language.SL,\r\n    Language.SV,\r\n    Language.TH,\r\n    Language.TR,\r\n    Language.UK,\r\n  );\r\n\r\n  /** ISO 639-1 language code, https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes */\r\n  readonly id: string;\r\n  /** The writing system, such as Cyrillic, Georgian, Greek, Hebrew, Latin, Thai, etc. */\r\n  readonly script:\r\n    | \"arabic\"\r\n    | \"cyrillic\"\r\n    | \"greek\"\r\n    | \"hebrew\"\r\n    | \"latin\"\r\n    | \"thai\";\r\n  /** The direction of the writing system, either \"ltr\" for left-to-right, or \"rtl\" for right-to-left. */\r\n  readonly direction: \"ltr\" | \"rtl\";\r\n  /** The list of alphabet code points. */\r\n  readonly alphabet: readonly CodePoint[];\r\n  /** The locale. */\r\n  readonly locale: Intl.Locale;\r\n  /** The collator for sorting strings. */\r\n  readonly collator: Intl.Collator;\r\n  /** A locale-sensitive string comparison function. */\r\n  readonly compare: (a: string, b: string) => number;\r\n  /** A locale-sensitive string uppercase function. */\r\n  readonly upperCase: (v: string) => string;\r\n  /** A locale-sensitive string lowercase function. */\r\n  readonly lowerCase: (v: string) => string;\r\n  /** A locale-sensitive string capitalize function. */\r\n  readonly capitalCase: (v: string) => string;\r\n\r\n  private constructor(\r\n    id: string,\r\n    script: \"arabic\" | \"cyrillic\" | \"greek\" | \"hebrew\" | \"latin\" | \"thai\",\r\n    direction: \"ltr\" | \"rtl\",\r\n    alphabet: string,\r\n  ) {\r\n    const locale = new Intl.Locale(id).maximize();\r\n    const collator = new Intl.Collator(locale);\r\n    this.id = id;\r\n    this.script = script;\r\n    this.direction = direction;\r\n    this.alphabet = Object.freeze([...toCodePoints(alphabet)]);\r\n    this.locale = locale;\r\n    this.collator = collator;\r\n    this.compare = (a, b) => collator.compare(a, b);\r\n    this.upperCase = (v) => v.toLocaleUpperCase(locale);\r\n    this.lowerCase = (v) => v.toLocaleLowerCase(locale);\r\n    this.capitalCase = (v) =>\r\n      v.substring(0, 1).toLocaleUpperCase(locale) +\r\n      v.substring(1).toLocaleLowerCase(locale);\r\n    Object.freeze(this);\r\n  }\r\n\r\n  /**\r\n   * Checks whether the given string is composed only of the language letters,\r\n   * case-insensitive.\r\n   */\r\n  test = (v: string): boolean => {\r\n    for (const codePoint of toCodePoints(this.lowerCase(v))) {\r\n      if (!this.alphabet.includes(codePoint)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  letterName = (codePoint: CodePoint): string => {\r\n    if (codePoint === /* \"ß\" */ 0x00df) {\r\n      // German uppercase letter Eszett.\r\n      return \"ẞ\";\r\n    }\r\n    if (codePoint >= 0x0590 && codePoint <= 0x05ff) {\r\n      // Hebrew Unicode block.\r\n      // There are no lower or uppercase letters in the Hebrew script.\r\n      return String.fromCodePoint(codePoint);\r\n    }\r\n    if (codePoint >= 0x0600 && codePoint <= 0x06ff) {\r\n      // Arabic Unicode block.\r\n      // There are no lower or uppercase letters in the Arabic script.\r\n      // Arabic script is cursive, which means that the letters\r\n      // change shape when joined together.\r\n      // Here we break letters apart by prepending them with\r\n      // the Zero Width Non-Joiner character.\r\n      return String.fromCodePoint(\r\n        /* ZERO WIDTH NON-JOINER */ 0x200c,\r\n        codePoint,\r\n      );\r\n    }\r\n    if (codePoint >= 0x0e00 && codePoint <= 0x0e7f) {\r\n      // Thai Unicode block.\r\n      if (\r\n        codePoint === 0x0e31 ||\r\n        (codePoint >= 0x0e34 && codePoint <= 0x0e3a) ||\r\n        (codePoint >= 0x0e47 && codePoint <= 0x0e4e)\r\n      ) {\r\n        // Thai combining marks.\r\n        return String.fromCodePoint(/* DOTTED CIRCLE */ 0x25cc, codePoint);\r\n      }\r\n    }\r\n    // Locale-specific uppercase variant of a letter.\r\n    // For example in Turkish there are dotted and dotless letter I,\r\n    // each with its own lower and uppercase variant.\r\n    return this.upperCase(String.fromCodePoint(codePoint));\r\n  };\r\n\r\n  /**\r\n   * Returns a value indicating whether the given code point\r\n   * can be a letter of this language.\r\n   */\r\n  includes(codePoint: CodePoint): boolean {\r\n    // We consider these Unicode ranges to contain letters only in a given script.\r\n    // The ranges were manually built from Unicode tables and may not be accurate.\r\n    switch (this.script) {\r\n      case \"arabic\":\r\n        return codePoint >= 0x0600 && codePoint <= 0x06ff;\r\n      case \"cyrillic\":\r\n        return codePoint >= 0x0400 && codePoint <= 0x04ff;\r\n      case \"greek\":\r\n        return codePoint >= 0x0370 && codePoint <= 0x03ff;\r\n      case \"hebrew\":\r\n        return codePoint >= 0x0590 && codePoint <= 0x05ff;\r\n      case \"latin\":\r\n        // A few Unicode blocks of the Latin script to include only\r\n        // a reasonable list of letter codepoints.\r\n        return (\r\n          (codePoint >= /* \"A\" */ 0x0041 && codePoint <= /* \"Z\" */ 0x005a) ||\r\n          (codePoint >= /* \"a\" */ 0x0061 && codePoint <= /* \"z\" */ 0x007a) ||\r\n          (codePoint >= /* \"À\" */ 0x00c0 && codePoint <= /* \"Ö\" */ 0x00d6) ||\r\n          (codePoint >= /* \"Ø\" */ 0x00d8 && codePoint <= /* \"ö\" */ 0x00f6) ||\r\n          (codePoint >= /* \"ø\" */ 0x00f8 && codePoint <= /* \"ÿ\" */ 0x00ff) ||\r\n          (codePoint >= /* \"Ā\" */ 0x0100 && codePoint <= /* \"ſ\" */ 0x017f) ||\r\n          (codePoint >= /* \"ƀ\" */ 0x0180 && codePoint <= /* \"ɏ\" */ 0x024f)\r\n        );\r\n      case \"thai\":\r\n        return codePoint >= 0x0e00 && codePoint <= 0x0e7f;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  toString() {\r\n    return this.id;\r\n  }\r\n\r\n  toJSON() {\r\n    return this.id;\r\n  }\r\n}\r\n\r\nexport function getExampleText({ script }: Language): string {\r\n  switch (script) {\r\n    case \"arabic\":\r\n      return \"تناول المزيد من التفاح والبرتقال.\";\r\n    case \"cyrillic\":\r\n      return \"Яжте повече ябълки и портокали.\";\r\n    case \"greek\":\r\n      return \"Τρώτε περισσότερα μήλα και πορτοκάλια.\";\r\n    case \"hebrew\":\r\n      return \"תאכל יותר תפוחים ותפוזים.\";\r\n    case \"thai\":\r\n      return \"กินส้มกับแอปเปิลเยอะ ๆ\";\r\n    default:\r\n      return \"Eat more apples and oranges.\";\r\n  }\r\n}\r\n\r\nexport function getExampleLetters({ script }: Language): CodePoint[] {\r\n  switch (script) {\r\n    case \"arabic\":\r\n      return [0x0627, 0x0628, 0x067e, 0x062a, 0x062b, 0x062c];\r\n    case \"cyrillic\":\r\n      return [0x0430, 0x0431, 0x0432, 0x0433, 0x0434, 0x0435];\r\n    case \"greek\":\r\n      return [0x03b1, 0x03b2, 0x03b3, 0x03b4, 0x03b5, 0x03b6];\r\n    case \"hebrew\":\r\n      return [0x05d0, 0x05d1, 0x05d2, 0x05d3, 0x05d4, 0x05d5];\r\n    case \"latin\":\r\n      return [0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066];\r\n    case \"thai\":\r\n      return [0x0e01, 0x0e02, 0x0e04, 0x0e06, 0x0e07, 0x0e08];\r\n  }\r\n}\r\n","import { type CodePoint, combineDiacritic, isDiacritic } from \"@mkboard/unicode\";\r\nimport { type Geometry } from \"./geometry.ts\";\r\nimport { KeyCharacters } from \"./keycharacters.ts\";\r\nimport { KeyCombo } from \"./keycombo.ts\";\r\nimport { KeyModifier } from \"./keymodifier.ts\";\r\nimport { KeyShape } from \"./keyshape.ts\";\r\nimport { getExampleLetters, getExampleText } from \"./language.ts\";\r\nimport { type Layout } from \"./layout.ts\";\r\nimport {\r\n  type CharacterDict,\r\n  type DeadCharacter,\r\n  type GeometryDict,\r\n  type KeyId,\r\n  type WeightedCodePointSet,\r\n  type ZoneFilter,\r\n  type ZoneId,\r\n} from \"./types.ts\";\r\n\r\nexport class Keyboard {\r\n  readonly characters: ReadonlyMap<KeyId, KeyCharacters>;\r\n  readonly combos: ReadonlyMap<CodePoint, KeyCombo>;\r\n  readonly shapes: ReadonlyMap<KeyId, KeyShape>;\r\n  readonly zones: ReadonlyMap<ZoneId, readonly KeyShape[]>;\r\n\r\n  constructor(\r\n    readonly layout: Layout,\r\n    readonly geometry: Geometry,\r\n    readonly characterDict: CharacterDict,\r\n    readonly geometryDict: GeometryDict,\r\n  ) {\r\n    const characters = new Map<KeyId, KeyCharacters>();\r\n    const combos = new Map<CodePoint, KeyCombo>();\r\n    const shapes = new Map<KeyId, KeyShape>();\r\n    const zones = new Map<ZoneId, KeyShape[]>();\r\n\r\n    for (const [id, [a = null, b = null, c = null, d = null]] of Object.entries(\r\n      characterDict,\r\n    )) {\r\n      characters.set(id, new KeyCharacters(id, a, b, c, d));\r\n    }\r\n\r\n    for (const { id, a, b, c, d } of characters.values()) {\r\n      if (KeyCharacters.isCodePoint(a)) {\r\n        addCombo(combos, a, id, KeyModifier.None);\r\n      }\r\n      if (KeyCharacters.isCodePoint(b)) {\r\n        addCombo(combos, b, id, KeyModifier.Shift);\r\n      }\r\n      if (KeyCharacters.isCodePoint(c)) {\r\n        addCombo(combos, c, id, KeyModifier.Alt);\r\n      }\r\n      if (KeyCharacters.isCodePoint(d)) {\r\n        addCombo(combos, d, id, KeyModifier.ShiftAlt);\r\n      }\r\n    }\r\n\r\n    for (const { id, a, b, c, d } of characters.values()) {\r\n      if (KeyCharacters.isDead(a)) {\r\n        addDeadCombo(combos, a, id, KeyModifier.None);\r\n      }\r\n      if (KeyCharacters.isDead(b)) {\r\n        addDeadCombo(combos, b, id, KeyModifier.Shift);\r\n      }\r\n      if (KeyCharacters.isDead(c)) {\r\n        addDeadCombo(combos, c, id, KeyModifier.Alt);\r\n      }\r\n      if (KeyCharacters.isDead(d)) {\r\n        addDeadCombo(combos, d, id, KeyModifier.ShiftAlt);\r\n      }\r\n    }\r\n\r\n    for (const [id, data] of Object.entries(\r\n      layout.mod(geometry, geometryDict),\r\n    )) {\r\n      const shape = new KeyShape(id, data, characterDict[id] ?? null);\r\n      shapes.set(id, shape);\r\n      for (const zone of shape.zones) {\r\n        let list = zones.get(zone);\r\n        if (list == null) {\r\n          zones.set(zone, (list = []));\r\n        }\r\n        list.push(shape);\r\n      }\r\n    }\r\n\r\n    this.layout = layout;\r\n    this.geometry = geometry;\r\n    this.characters = characters;\r\n    this.combos = combos;\r\n    this.shapes = shapes;\r\n    this.zones = zones;\r\n  }\r\n\r\n  getCharacters(id: KeyId): KeyCharacters | null {\r\n    return this.characters.get(id) ?? null;\r\n  }\r\n\r\n  getCombo(codePoint: CodePoint): KeyCombo | null {\r\n    return this.combos.get(codePoint) ?? null;\r\n  }\r\n\r\n  getShape(id: KeyId): KeyShape | null {\r\n    return this.shapes.get(id) ?? null;\r\n  }\r\n\r\n  getCodePoints({\r\n    zones,\r\n    dead = true,\r\n    shift = true,\r\n    alt = true,\r\n  }: Partial<ZoneFilter> = {}): WeightedCodePointSet {\r\n    const list: CodePoint[] = [];\r\n    const weights = new Map<CodePoint, number>();\r\n    for (const combo of this.combos.values()) {\r\n      const shape = this.getShape(combo.id);\r\n      if (\r\n        (combo.prefix == null || dead) &&\r\n        (!combo.shift || shift) &&\r\n        (!combo.alt || alt) &&\r\n        (zones == null || shape?.inAnyZone(zones))\r\n      ) {\r\n        list.push(combo.codePoint);\r\n        switch (shape?.row) {\r\n          case \"home\":\r\n            weights.set(combo.codePoint, 1);\r\n            break;\r\n          case \"top\":\r\n            weights.set(combo.codePoint, 2);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    const codePoints = new Set(list.sort((a, b) => a - b));\r\n    return new (class implements WeightedCodePointSet {\r\n      [Symbol.iterator](): IterableIterator<CodePoint> {\r\n        return codePoints[Symbol.iterator]();\r\n      }\r\n      get size(): number {\r\n        return codePoints.size;\r\n      }\r\n      has(codePoint: CodePoint): boolean {\r\n        return codePoints.has(codePoint);\r\n      }\r\n      weight(codePoint: CodePoint): number {\r\n        return weights.get(codePoint) ?? 1000;\r\n      }\r\n    })();\r\n  }\r\n\r\n  getExampleText(): string {\r\n    return getExampleText(this.layout.language);\r\n  }\r\n\r\n  getExampleLetters(): CodePoint[] {\r\n    const codePoints = this.getCodePoints();\r\n    return getExampleLetters(this.layout.language).filter(codePoints.has);\r\n  }\r\n}\r\n\r\nfunction setCombo(map: Map<CodePoint, KeyCombo>, combo: KeyCombo): void {\r\n  const oldCombo = map.get(combo.codePoint);\r\n  if (oldCombo == null || oldCombo.complexity > combo.complexity) {\r\n    map.set(combo.codePoint, combo);\r\n  }\r\n}\r\n\r\nfunction addCombo(\r\n  map: Map<CodePoint, KeyCombo>,\r\n  character: CodePoint,\r\n  id: KeyId,\r\n  modifier: KeyModifier,\r\n): void {\r\n  setCombo(map, new KeyCombo(character, id, modifier));\r\n}\r\n\r\nfunction addDeadCombo(\r\n  map: Map<CodePoint, KeyCombo>,\r\n  { dead }: DeadCharacter,\r\n  id: KeyId,\r\n  modifier: KeyModifier,\r\n): void {\r\n  if (isDiacritic(dead)) {\r\n    const prefix = new KeyCombo(dead, id, modifier);\r\n    for (const combo of map.values()) {\r\n      if (combo.prefix == null) {\r\n        const combinedCodePoint = combineDiacritic(combo.codePoint, dead);\r\n        if (combinedCodePoint !== combo.codePoint) {\r\n          setCombo(\r\n            map,\r\n            new KeyCombo(combinedCodePoint, combo.id, combo.modifier, prefix),\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { type Geometry } from \"./geometry.ts\";\nimport { ANGLE_MOD, ANGLE_WIDE_MOD, type ZoneModDict } from \"./geometry/mod.ts\";\nimport { type GeometryDict } from \"./types.ts\";\n\nexport type Mod = (geometry: Geometry, dict: GeometryDict) => GeometryDict;\n\nexport const nullMod: Mod = (geometry: Geometry, dict: GeometryDict) => dict;\n\nexport const angleMod: Mod = ({ form }, dict) => {\n  if (form === \"staggered\") {\n    return remapZones(dict, ANGLE_MOD);\n  } else {\n    return dict;\n  }\n};\n\nexport const angleWideMod: Mod = ({ form }, dict) => {\n  if (form === \"staggered\") {\n    return remapZones(dict, ANGLE_WIDE_MOD);\n  } else {\n    return dict;\n  }\n};\n\nexport function remapZones(dict: GeometryDict, mod: ZoneModDict): GeometryDict {\n  return Object.fromEntries(\n    Object.entries(dict).map(\n      ([id, { x, y, w, h, labels, shape, zones, homing }]) => [\n        id,\n        { x, y, w, h, labels, shape, zones: mod[id] ?? zones, homing },\n      ],\n    ),\n  );\n}\n","import { Enum, XEnum, type XEnumItem } from \"@mkboard/lang\";\r\nimport { Geometry } from \"./geometry.ts\";\r\nimport { Language } from \"./language.ts\";\r\nimport { angleMod, angleWideMod, type Mod, nullMod } from \"./mod.ts\";\r\n\r\nexport class Layout implements XEnumItem {\r\n  static custom(language: Language) {\r\n    return new Layout(\r\n      /* id= */ \"custom\",\r\n      /* xid= */ 0xff,\r\n      /* name= */ \"Custom\",\r\n      /* family= */ \"custom\",\r\n      /* language= */ language,\r\n      /* emulate= */ true,\r\n      /* geometries= */ Geometry.ALL,\r\n    );\r\n  }\r\n\r\n  static readonly EN_US = new Layout(\r\n    /* id= */ \"en-us\",\r\n    /* xid= */ 0x10,\r\n    /* name= */ \"{US}\",\r\n    /* family= */ \"qwerty\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly EN_DVORAK = new Layout(\r\n    /* id= */ \"en-dvorak\",\r\n    /* xid= */ 0x18,\r\n    /* name= */ \"Dvorak\",\r\n    /* family= */ \"dvorak\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly EN_DVORAK_PROG = new Layout(\r\n    /* id= */ \"en-dvorak-prog\",\r\n    /* xid= */ 0x15,\r\n    /* name= */ \"Dvorak (Programmers)\",\r\n    /* family= */ \"dvorak\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly EN_COLEMAK = new Layout(\r\n    /* id= */ \"en-colemak\",\r\n    /* xid= */ 0x19,\r\n    /* name= */ \"Colemak\",\r\n    /* family= */ \"colemak\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly EN_COLEMAK_DH_ANSI = new Layout(\r\n    /* id= */ \"en-colemak-dh\",\r\n    /* xid= */ 0x1b,\r\n    /* name= */ \"Colemak-DH (ANSI)\",\r\n    /* family= */ \"colemak-dh\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n    /* mod= */ angleMod,\r\n  );\r\n  static readonly EN_COLEMAK_DH_ANSI_WIDE = new Layout(\r\n    /* id= */ \"en-colemak-dh-wide\",\r\n    /* xid= */ 0x1f,\r\n    /* name= */ \"Colemak-DH Wide (ANSI)\",\r\n    /* family= */ \"colemak-dh-wide\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n    /* mod= */ angleWideMod,\r\n  );\r\n  static readonly EN_COLEMAK_DH_ISO = new Layout(\r\n    /* id= */ \"en-colemak-dh-iso\",\r\n    /* xid= */ 0x16,\r\n    /* name= */ \"Colemak-DH (ISO)\",\r\n    /* family= */ \"colemak-dh-iso\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n    /* mod= */ angleMod,\r\n  );\r\n  static readonly EN_COLEMAK_DH_ISO_WIDE = new Layout(\r\n    /* id= */ \"en-colemak-dh-iso-wide\",\r\n    /* xid= */ 0x17,\r\n    /* name= */ \"Colemak-DH Wide (ISO)\",\r\n    /* family= */ \"colemak-dh-iso-wide\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n    /* mod= */ angleWideMod,\r\n  );\r\n  static readonly EN_COLEMAK_DH_MATRIX = new Layout(\r\n    /* id= */ \"en-colemak-dh-matrix\",\r\n    /* xid= */ 0x1c,\r\n    /* name= */ \"Colemak-DH (matrix)\",\r\n    /* family= */ \"colemak-dh-matrix\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(Geometry.MATRIX),\r\n  );\r\n  static readonly EN_WORKMAN = new Layout(\r\n    /* id= */ \"en-workman\",\r\n    /* xid= */ 0x1a,\r\n    /* name= */ \"Workman\",\r\n    /* family= */ \"workman\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly EN_UK = new Layout(\r\n    /* id= */ \"en-uk\",\r\n    /* xid= */ 0x11,\r\n    /* name= */ \"{UK}\",\r\n    /* family= */ \"qwerty\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly EN_JP = new Layout(\r\n    /* id= */ \"en-jp\",\r\n    /* xid= */ 0x12,\r\n    /* name= */ \"{JP}\",\r\n    /* family= */ \"qwerty\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.JAPANESE_106,\r\n      Geometry.JAPANESE_106_FULL,\r\n    ),\r\n  );\r\n  static readonly DE_DE = new Layout(\r\n    /* id= */ \"de-de\",\r\n    /* xid= */ 0x20,\r\n    /* name= */ \"{DE}\",\r\n    /* family= */ \"qwertz\",\r\n    /* language= */ Language.DE,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly DE_CH = new Layout(\r\n    /* id= */ \"de-ch\",\r\n    /* xid= */ 0x21,\r\n    /* name= */ \"{CH}\",\r\n    /* family= */ \"qwertz\",\r\n    /* language= */ Language.DE,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly DE_NEO_2 = new Layout(\r\n    /* id= */ \"de-neo-2\",\r\n    /* xid= */ 0x22,\r\n    /* name= */ \"Neo 2\",\r\n    /* family= */ \"de-neo-2\",\r\n    /* language= */ Language.DE,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly DE_BONE = new Layout(\r\n    /* id= */ \"de-bone\",\r\n    /* xid= */ 0x23,\r\n    /* name= */ \"Bone\",\r\n    /* family= */ \"de-bone\",\r\n    /* language= */ Language.DE,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly DE_MINE = new Layout(\r\n    /* id= */ \"de-mine\",\r\n    /* xid= */ 0x24,\r\n    /* name= */ \"Mine\",\r\n    /* family= */ \"de-mine\",\r\n    /* language= */ Language.DE,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly DE_NOTED = new Layout(\r\n    /* id= */ \"de-noted\",\r\n    /* xid= */ 0x25,\r\n    /* name= */ \"Noted\",\r\n    /* family= */ \"de-noted\",\r\n    /* language= */ Language.DE,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly DE_CMOS = new Layout(\r\n    /* id= */ \"de-cmos\",\r\n    /* xid= */ 0x26,\r\n    /* name= */ \"CMOS\",\r\n    /* family= */ \"de-cmos\",\r\n    /* language= */ Language.DE,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly FR_FR = new Layout(\r\n    /* id= */ \"fr-fr\",\r\n    /* xid= */ 0x30,\r\n    /* name= */ \"{FR}\",\r\n    /* family= */ \"azerty\",\r\n    /* language= */ Language.FR,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly FR_CA = new Layout(\r\n    /* id= */ \"fr-ca\",\r\n    /* xid= */ 0x31,\r\n    /* name= */ \"{CA}\",\r\n    /* family= */ \"qwerty\",\r\n    /* language= */ Language.FR,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly FR_CH = new Layout(\r\n    /* id= */ \"fr-ch\",\r\n    /* xid= */ 0x32,\r\n    /* name= */ \"{CH}\",\r\n    /* family= */ \"qwertz\",\r\n    /* language= */ Language.FR,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly FR_BEPO = new Layout(\r\n    /* id= */ \"fr-bepo\",\r\n    /* xid= */ 0x33,\r\n    /* name= */ \"Bepo\",\r\n    /* family= */ \"fr-bepo\",\r\n    /* language= */ Language.FR,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly FR_ERGO_L = new Layout(\r\n    /* id= */ \"fr-ergol\",\r\n    /* xid= */ 0x34,\r\n    /* name= */ \"Ergo-L\",\r\n    /* family= */ \"fr-ergol\",\r\n    /* language= */ Language.FR,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly FR_OPTIMOT_ERGO = new Layout(\r\n    /* id= */ \"fr-optimot-ergo\",\r\n    /* xid= */ 0x35,\r\n    /* name= */ \"Optimot Ergo\",\r\n    /* family= */ \"fr-optimot-ergo\",\r\n    /* language= */ Language.FR,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly FR_ERGLACE = new Layout(\r\n    /* id= */ \"fr-erglace\",\r\n    /* xid= */ 0x36,\r\n    /* name= */ \"Erglace\",\r\n    /* family= */ \"fr-erglace\",\r\n    /* language= */ Language.FR,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly FR_ERGOPTI = new Layout(\r\n    /* id= */ \"fr-ergopti\",\r\n    /* xid= */ 0x37,\r\n    /* name= */ \"Ergopti\",\r\n    /* family= */ \"fr-ergopti\",\r\n    /* language= */ Language.FR,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly IT_IT = new Layout(\r\n    /* id= */ \"it-it\",\r\n    /* xid= */ 0x40,\r\n    /* name= */ \"{IT}\",\r\n    /* family= */ \"qwerty\",\r\n    /* language= */ Language.IT,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly LT_LT = new Layout(\r\n    /* id= */ \"lt-lt\",\r\n    /* xid= */ 0x48,\r\n    /* name= */ \"{LT}\",\r\n    /* family= */ \"lt-lt\",\r\n    /* language= */ Language.LT,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly ES_ES = new Layout(\r\n    /* id= */ \"es-es\",\r\n    /* xid= */ 0x50,\r\n    /* name= */ \"{ES}\",\r\n    /* family= */ \"qwerty\",\r\n    /* language= */ Language.ES,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly PL_PL = new Layout(\r\n    /* id= */ \"pl-pl\",\r\n    /* xid= */ 0x58,\r\n    /* name= */ \"{PL}\",\r\n    /* family= */ \"qwerty\",\r\n    /* language= */ Language.PL,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly PT_BR = new Layout(\r\n    /* id= */ \"pt-br\",\r\n    /* xid= */ 0x60,\r\n    /* name= */ \"{BR} (ABNT2)\",\r\n    /* family= */ \"qwerty\",\r\n    /* language= */ Language.PT,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.BRAZILIAN_104,\r\n      Geometry.BRAZILIAN_104_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly PT_PT = new Layout(\r\n    /* id= */ \"pt-pt\",\r\n    /* xid= */ 0x62,\r\n    /* name= */ \"{PT}\",\r\n    /* family= */ \"qwerty\",\r\n    /* language= */ Language.PT,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly RU_RU = new Layout(\r\n    /* id= */ \"ru-ru\",\r\n    /* xid= */ 0x70,\r\n    /* name= */ \"{RU}\",\r\n    /* family= */ \"йцукен\",\r\n    /* language= */ Language.RU,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly BE_BY = new Layout(\r\n    /* id= */ \"be-by\",\r\n    /* xid= */ 0x74,\r\n    /* name= */ \"{BY}\",\r\n    /* family= */ \"йцукен\",\r\n    /* language= */ Language.BE,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly UK_UA = new Layout(\r\n    /* id= */ \"uk-ua\",\r\n    /* xid= */ 0x78,\r\n    /* name= */ \"{UA}\",\r\n    /* family= */ \"йцукен\",\r\n    /* language= */ Language.UK,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly SV_SE = new Layout(\r\n    /* id= */ \"sv-se\",\r\n    /* xid= */ 0x80,\r\n    /* name= */ \"{SE}\",\r\n    /* family= */ \"qwerty\",\r\n    /* language= */ Language.SV,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly CS_CZ = new Layout(\r\n    /* id= */ \"cs-cz\",\r\n    /* xid= */ 0x81,\r\n    /* name= */ \"{CZ}\",\r\n    /* family= */ \"qwertz\",\r\n    /* language= */ Language.CS,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly SL_SI = new Layout(\r\n    /* id= */ \"sl-si\",\r\n    /* xid= */ 0x82,\r\n    /* name= */ \"{SI}\",\r\n    /* family= */ \"qwertz\",\r\n    /* language= */ Language.SL,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly EL_GR = new Layout(\r\n    /* id= */ \"el-gr\",\r\n    /* xid= */ 0x83,\r\n    /* name= */ \"{GR}\",\r\n    /* family= */ \"greek\",\r\n    /* language= */ Language.EL,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly NB_NO = new Layout(\r\n    /* id= */ \"nb-no\",\r\n    /* xid= */ 0x88,\r\n    /* name= */ \"{NO}\",\r\n    /* family= */ \"qwerty\",\r\n    /* language= */ Language.NB,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly HE_IL = new Layout(\r\n    /* id= */ \"he-il\",\r\n    /* xid= */ 0x84,\r\n    /* name= */ \"{IL} (מסורתי)\",\r\n    /* family= */ \"hebrew\",\r\n    /* language= */ Language.HE,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly NL_NL = new Layout(\r\n    /* id= */ \"nl-nl\",\r\n    /* xid= */ 0x85,\r\n    /* name= */ \"{NL}\",\r\n    /* family= */ \"qwerty\",\r\n    /* language= */ Language.NL,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly NL_BE = new Layout(\r\n    /* id= */ \"nl-be\",\r\n    /* xid= */ 0x86,\r\n    /* name= */ \"{BE}\",\r\n    /* family= */ \"azerty\",\r\n    /* language= */ Language.NL,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly HU_HU = new Layout(\r\n    /* id= */ \"hu-hu\",\r\n    /* xid= */ 0x87,\r\n    /* name= */ \"{HU}\",\r\n    /* family= */ \"qwertz\",\r\n    /* language= */ Language.HU,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly TR_TR_Q = new Layout(\r\n    /* id= */ \"tr-tr-q\",\r\n    /* xid= */ 0x89,\r\n    /* name= */ \"{TR} Q\",\r\n    /* family= */ \"qwerty\",\r\n    /* language= */ Language.TR,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly TR_TR_F = new Layout(\r\n    /* id= */ \"tr-tr-f\",\r\n    /* xid= */ 0x8a,\r\n    /* name= */ \"{TR} F\",\r\n    /* family= */ \"tr-tr-f\",\r\n    /* language= */ Language.TR,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly EN_CANARY = new Layout(\r\n    /* id= */ \"en-canary\",\r\n    /* xid= */ 0x1e,\r\n    /* name= */ \"Canary\",\r\n    /* family= */ \"canary\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly EN_CANARY_MATRIX = new Layout(\r\n    /* id= */ \"en-canary-matrix\",\r\n    /* xid= */ 0x1d,\r\n    /* name= */ \"Canary (matrix)\",\r\n    /* family= */ \"canary-matrix\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(Geometry.MATRIX),\r\n  );\r\n  static readonly EN_NORMAN = new Layout(\r\n    /* id= */ \"en-norman\",\r\n    /* xid= */ 0x8b,\r\n    /* name= */ \"Norman\",\r\n    /* family= */ \"norman\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly EN_HALMAK = new Layout(\r\n    /* id= */ \"en-halmak\",\r\n    /* xid= */ 0x8c,\r\n    /* name= */ \"Halmak\",\r\n    /* family= */ \"halmak\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly AR_SA = new Layout(\r\n    /* id= */ \"ar-sa\",\r\n    /* xid= */ 0x8d,\r\n    /* name= */ \"{SA} (101)\",\r\n    /* family= */ \"arabic\",\r\n    /* language= */ Language.AR,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly AR_SA_102 = new Layout(\r\n    /* id= */ \"ar-sa-102\",\r\n    /* xid= */ 0x8e,\r\n    /* name= */ \"{SA} (102)\",\r\n    /* family= */ \"arabic\",\r\n    /* language= */ Language.AR,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly FA_IR_LEGACY = new Layout(\r\n    /* id= */ \"fa-ir-legacy\",\r\n    /* xid= */ 0x8f,\r\n    /* name= */ \"Persian Legacy «پیش فرض فارسی»\",\r\n    /* family= */ \"persian\",\r\n    /* language= */ Language.FA,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly HE_IL_ARKN = new Layout(\r\n    /* id= */ \"he-il-arkn\",\r\n    /* xid= */ 0x90,\r\n    /* name= */ \"{IL} (ארקן)\",\r\n    /* family= */ \"hebrew-arkn\",\r\n    /* language= */ Language.HE,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly FA_IR = new Layout(\r\n    /* id= */ \"fa-ir\",\r\n    /* xid= */ 0x91,\r\n    /* name= */ \"Persian Standard «استاندارد فارسی»\",\r\n    /* family= */ \"persian\",\r\n    /* language= */ Language.FA,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly EN_ENGRAM = new Layout(\r\n    /* id= */ \"en-engram\",\r\n    /* xid= */ 0x92,\r\n    /* name= */ \"Engram\",\r\n    /* family= */ \"en-engram\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly EN_NERPS = new Layout(\r\n    /* id= */ \"en-nerps\",\r\n    /* xid= */ 0x93,\r\n    /* name= */ \"Nerps\",\r\n    /* family= */ \"nerps\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly EN_NERPS_MATRIX = new Layout(\r\n    /* id= */ \"en-nerps-matrix\",\r\n    /* xid= */ 0x94,\r\n    /* name= */ \"Nerps (matrix)\",\r\n    /* family= */ \"nerps-matrix\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(Geometry.MATRIX),\r\n  );\r\n  static readonly EN_HANDS_DOWN_NEU = new Layout(\r\n    /* id= */ \"en-hands-down-neu\",\r\n    /* xid= */ 0x95,\r\n    /* name= */ \"Hands Down Neu\",\r\n    /* family= */ \"hands-down-neu\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.MATRIX,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n    ),\r\n  );\r\n  static readonly EN_STURDY = new Layout(\r\n    /* id= */ \"en-sturdy\",\r\n    /* xid= */ 0x96,\r\n    /* name= */ \"Sturdy\",\r\n    /* family= */ \"sturdy\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(Geometry.MATRIX),\r\n  );\r\n  static readonly ES_MX = new Layout(\r\n    /* id= */ \"es-mx\",\r\n    /* xid= */ 0x97,\r\n    /* name= */ \"{MX}\",\r\n    /* family= */ \"qwerty\",\r\n    /* language= */ Language.ES,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly PL_FWYR = new Layout(\r\n    /* id= */ \"pl-fwyr\",\r\n    /* xid= */ 0x98,\r\n    /* name= */ \"FWYR\",\r\n    /* family= */ \"fwyr\",\r\n    /* language= */ Language.PL,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly EN_GRAPHITE = new Layout(\r\n    /* id= */ \"en-graphite\",\r\n    /* xid= */ 0x99,\r\n    /* name= */ \"Graphite\",\r\n    /* family= */ \"en-graphite\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly TH_TH = new Layout(\r\n    /* id= */ \"th-th\",\r\n    /* xid= */ 0x9a,\r\n    /* name= */ \"Thai Kedmanee\",\r\n    /* family= */ \"th-th\",\r\n    /* language= */ Language.TH,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly TH_PAT = new Layout(\r\n    /* id= */ \"th-th-pat\",\r\n    /* xid= */ 0x9b,\r\n    /* name= */ \"Thai Pattachote\",\r\n    /* family= */ \"th-th-pat\",\r\n    /* language= */ Language.TH,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly TH_MAN = new Layout(\r\n    /* id= */ \"th-th-man\",\r\n    /* xid= */ 0x9c,\r\n    /* name= */ \"Thai Manoonchai V1\",\r\n    /* family= */ \"th-th-man\",\r\n    /* language= */ Language.TH,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly NB_KVIKK = new Layout(\r\n    /* id= */ \"nb-no-kvikk\",\r\n    /* xid= */ 0x9d,\r\n    /* name= */ \"Kvikk\",\r\n    /* family= */ \"kvikk\",\r\n    /* language= */ Language.NB,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly NB_SKARP = new Layout(\r\n    /* id= */ \"nb-no-skarp\",\r\n    /* xid= */ 0x9e,\r\n    /* name= */ \"Skarp\",\r\n    /* family= */ \"skarp\",\r\n    /* language= */ Language.NB,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly NB_DVORAK = new Layout(\r\n    /* id= */ \"nb-no-dvorak\",\r\n    /* xid= */ 0x9f,\r\n    /* name= */ \"Dvorak\",\r\n    /* family= */ \"dvorak\",\r\n    /* language= */ Language.NB,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly RO_RO = new Layout(\r\n    /* id= */ \"ro-ro\",\r\n    /* xid= */ 0xa0,\r\n    /* name= */ \"{RO}\",\r\n    /* family= */ \"qwerty\",\r\n    /* language= */ Language.RO,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly EN_GALLIUM = new Layout(\r\n    /* id= */ \"en-gallium\",\r\n    /* xid= */ 0xa1,\r\n    /* name= */ \"Gallium\",\r\n    /* family= */ \"gallium\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly EN_GALLIUM_MATRIX = new Layout(\r\n    /* id= */ \"en-gallium-matrix\",\r\n    /* xid= */ 0xa2,\r\n    /* name= */ \"Gallium (matrix)\",\r\n    /* family= */ \"gallium-matrix\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(Geometry.MATRIX),\r\n  );\r\n  static readonly EN_HANDS_DOWN_PROMETHIUM = new Layout(\r\n    /* id= */ \"en-hands-down-promethium\",\r\n    /* xid= */ 0xa3,\r\n    /* name= */ \"Hands Down Promethium (Matrix)\",\r\n    /* family= */ \"en-hands-down-promethium\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(Geometry.MATRIX),\r\n  );\r\n  static readonly EN_APT_v3 = new Layout(\r\n    /* id= */ \"en-aptv3\",\r\n    /* xid= */ 0xa4,\r\n    /* name= */ \"APTv3\",\r\n    /* family= */ \"en-aptv3\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly EN_FOCAL = new Layout(\r\n    /* id= */ \"en_focal\",\r\n    /* xid= */ 0xa5,\r\n    /* name= */ \"Focal\",\r\n    /* family= */ \"focal\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly DE_ADNW_BUT_XCV = new Layout(\r\n    /* id= */ \"de-adnw-but-xcv\",\r\n    /* xid= */ 0xa6,\r\n    /* name= */ \"AdNW BuT-XCV\",\r\n    /* family= */ \"de-adnw\",\r\n    /* language= */ Language.DE,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(Geometry.MATRIX),\r\n  );\r\n  static readonly DA_DK = new Layout(\r\n    /* id= */ \"da-dk\",\r\n    /* xid= */ 0xa7,\r\n    /* name= */ \"{DK}\",\r\n    /* family= */ \"qwerty\",\r\n    /* language= */ Language.DA,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.MATRIX,\r\n    ),\r\n  );\r\n  static readonly EN_ENTHIUM_V6 = new Layout(\r\n    /* id= */ \"en-enthium-v6\",\r\n    /* xid= */ 0xa8,\r\n    /* name= */ \"Enthium V6 (Matrix)\",\r\n    /* family= */ \"enthium\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(Geometry.MATRIX),\r\n  );\r\n  static readonly EN_ENTHIUM_V10 = new Layout(\r\n    /* id= */ \"en-enthium-v10\",\r\n    /* xid= */ 0xb8,\r\n    /* name= */ \"Enthium V10 (Matrix)\",\r\n    /* family= */ \"enthium\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(Geometry.MATRIX),\r\n  );\r\n  static readonly EN_NIGHT_MATRIX = new Layout(\r\n    /* id= */ \"en-night-matrix\",\r\n    /* xid= */ 0xa9,\r\n    /* name= */ \"Night (matrix)\",\r\n    /* family= */ \"night\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ true,\r\n    /* geometries= */ new Enum(Geometry.MATRIX),\r\n  );\r\n  static readonly EN_MTGAP = new Layout(\r\n    /* id= */ \"en-mtgap\",\r\n    /* xid= */ 0xaa,\r\n    /* name= */ \"MTGAP\",\r\n    /* family= */ \"MTGAP\",\r\n    /* language= */ Language.EN,\r\n    /* emulate= */ false,\r\n    /* geometries= */ new Enum(\r\n      Geometry.MATRIX,\r\n      Geometry.ANSI_101,\r\n      Geometry.ANSI_101_FULL,\r\n      Geometry.ISO_102,\r\n      Geometry.ISO_102_FULL,\r\n    ),\r\n  );\r\n\r\n  static readonly ALL = new XEnum<Layout>(\r\n    Layout.EN_US,\r\n    Layout.EN_DVORAK,\r\n    Layout.EN_DVORAK_PROG,\r\n    Layout.EN_COLEMAK,\r\n    Layout.EN_COLEMAK_DH_ANSI,\r\n    Layout.EN_COLEMAK_DH_ANSI_WIDE,\r\n    Layout.EN_COLEMAK_DH_ISO,\r\n    Layout.EN_COLEMAK_DH_ISO_WIDE,\r\n    Layout.EN_COLEMAK_DH_MATRIX,\r\n    Layout.EN_WORKMAN,\r\n    Layout.EN_CANARY,\r\n    Layout.EN_CANARY_MATRIX,\r\n    Layout.EN_NERPS,\r\n    Layout.EN_NERPS_MATRIX,\r\n    Layout.EN_NIGHT_MATRIX,\r\n    Layout.EN_HANDS_DOWN_NEU,\r\n    Layout.EN_HANDS_DOWN_PROMETHIUM,\r\n    Layout.EN_STURDY,\r\n    Layout.EN_NORMAN,\r\n    Layout.EN_HALMAK,\r\n    Layout.EN_ENGRAM,\r\n    Layout.EN_GALLIUM,\r\n    Layout.EN_GALLIUM_MATRIX,\r\n    Layout.EN_GRAPHITE,\r\n    Layout.EN_APT_v3,\r\n    Layout.EN_FOCAL,\r\n    Layout.EN_ENTHIUM_V6,\r\n    Layout.EN_ENTHIUM_V10,\r\n    Layout.EN_UK,\r\n    Layout.EN_JP,\r\n\tLayout.EN_MTGAP,\r\n    Layout.EL_GR,\r\n    Layout.CS_CZ,\r\n    Layout.DA_DK,\r\n    Layout.DE_DE,\r\n    Layout.DE_CH,\r\n    Layout.DE_NEO_2,\r\n    Layout.DE_BONE,\r\n    Layout.DE_MINE,\r\n    Layout.DE_NOTED,\r\n    Layout.DE_CMOS,\r\n    Layout.DE_ADNW_BUT_XCV,\r\n    Layout.FR_FR,\r\n    Layout.FR_CA,\r\n    Layout.FR_CH,\r\n    Layout.FR_BEPO,\r\n    Layout.FR_ERGO_L,\r\n    Layout.FR_ERGOPTI,\r\n    Layout.FR_ERGLACE,\r\n    Layout.FR_OPTIMOT_ERGO,\r\n    Layout.HE_IL,\r\n    Layout.HE_IL_ARKN,\r\n    Layout.HU_HU,\r\n    Layout.IT_IT,\r\n    Layout.LT_LT,\r\n    Layout.NB_NO,\r\n    Layout.NB_DVORAK,\r\n    Layout.NB_KVIKK,\r\n    Layout.NB_SKARP,\r\n    Layout.NL_NL,\r\n    Layout.NL_BE,\r\n    Layout.ES_ES,\r\n    Layout.ES_MX,\r\n    Layout.PL_PL,\r\n    Layout.PL_FWYR,\r\n    Layout.PT_BR,\r\n    Layout.PT_PT,\r\n    Layout.BE_BY,\r\n    Layout.SL_SI,\r\n    Layout.SV_SE,\r\n    Layout.UK_UA,\r\n    Layout.RU_RU,\r\n    Layout.TR_TR_Q,\r\n    Layout.TR_TR_F,\r\n    Layout.AR_SA,\r\n    Layout.AR_SA_102,\r\n    Layout.FA_IR,\r\n    Layout.FA_IR_LEGACY,\r\n    Layout.TH_TH,\r\n    Layout.TH_PAT,\r\n    Layout.TH_MAN,\r\n    Layout.RO_RO,\r\n  );\r\n\r\n  static findLayout(localeId: string): Layout | null {\r\n    const { language = null, region = null } = (() => {\r\n      try {\r\n        return new Intl.Locale(localeId);\r\n      } catch {\r\n        return {} as Intl.Locale;\r\n      }\r\n    })();\r\n    if (language != null && region != null) {\r\n      const id = `${language}-${region}`.toLowerCase();\r\n      for (const layout of Layout.ALL) {\r\n        if (layout.id === id) {\r\n          return layout;\r\n        }\r\n      }\r\n    }\r\n    if (language != null) {\r\n      const id = `${language}-`.toLowerCase();\r\n      for (const layout of Layout.ALL) {\r\n        if (layout.id.startsWith(id)) {\r\n          return layout;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  static selectableLayouts(language: Language): Layout[] {\r\n    const list = Layout.ALL.filter(\r\n      (layout) => layout.language.script === language.script,\r\n    );\r\n    return [\r\n      ...list.filter((layout) => layout.language.id === language.id),\r\n      ...list.filter((layout) => layout.language.id !== language.id),\r\n    ];\r\n  }\r\n\r\n  static selectLayout(language: Language): Layout {\r\n    const [layout] = Layout.selectableLayouts(language);\r\n    if (layout == null) {\r\n      throw new Error(); // Unreachable.\r\n    }\r\n    return layout;\r\n  }\r\n\r\n  private constructor(\r\n    readonly id: string,\r\n    readonly xid: number,\r\n    readonly name: string,\r\n    readonly family: string,\r\n    readonly language: Language,\r\n    readonly emulate: boolean,\r\n    readonly geometries: Enum<Geometry>,\r\n    readonly mod: Mod = nullMod,\r\n  ) {\r\n    Object.freeze(this);\r\n  }\r\n\r\n  toString() {\r\n    return this.id;\r\n  }\r\n\r\n  toJSON() {\r\n    return this.id;\r\n  }\r\n}\r\n","import {\r\n  booleanProp,\r\n  enumProp,\r\n  itemProp,\r\n  type Settings,\r\n  xitemProp,\r\n} from \"@mkboard/settings\";\r\nimport { Geometry, ZoneMod } from \"./geometry.ts\";\r\nimport { Language } from \"./language.ts\";\r\nimport { Layout } from \"./layout.ts\";\r\nimport { nullMod } from \"./mod.ts\";\r\n\r\nexport enum Emulation {\r\n  /**\r\n   * No emulation.\r\n   */\r\n  None = 0,\r\n  /**\r\n   * Assumes that the physical key locations are correct,\r\n   * fixes the character codes.\r\n   */\r\n  Forward = 1,\r\n  /**\r\n   * Assumes that the character codes are correct,\r\n   * fixes the physical key locations.\r\n   * It reverses the effect of layout emulation in hardware.\r\n   */\r\n  Reverse = 2,\r\n}\r\n\r\nexport const keyboardProps = {\r\n  language: itemProp(\"keyboard.language\", Language.ALL, Language.EN),\r\n  layout: xitemProp(\"keyboard.layout\", Layout.ALL, Layout.EN_US),\r\n  geometry: itemProp(\"keyboard.geometry\", Geometry.ALL, Geometry.ANSI_101),\r\n  zones: itemProp(\"keyboard.zones\", ZoneMod.ALL, ZoneMod.STANDARD),\r\n  emulation: enumProp(\"keyboard.emulation\", Emulation, Emulation.Forward),\r\n  colors: booleanProp(\"keyboard.colors\", true),\r\n  pointers: booleanProp(\"keyboard.pointers\", true),\r\n} as const;\r\n\r\nexport class KeyboardOptions {\r\n  static default(): KeyboardOptions {\r\n    return new KeyboardOptions(\r\n      Language.EN,\r\n      Layout.EN_US,\r\n      Geometry.ANSI_101,\r\n      ZoneMod.STANDARD,\r\n    );\r\n  }\r\n\r\n  static from(settings: Settings): KeyboardOptions {\r\n    const language = settings.get(keyboardProps.language);\r\n    const layout = settings.get(keyboardProps.layout);\r\n    const geometry = settings.get(keyboardProps.geometry);\r\n    const zones = settings.get(keyboardProps.zones);\r\n    return KeyboardOptions.default()\r\n      .withLanguage(language)\r\n      .withLayout(layout)\r\n      .withGeometry(geometry)\r\n      .withZones(zones);\r\n  }\r\n\r\n  readonly #language: Language;\r\n  readonly #layout: Layout;\r\n  readonly #geometry: Geometry;\r\n  readonly #zones: ZoneMod;\r\n\r\n  private constructor(\r\n    language: Language,\r\n    layout: Layout,\r\n    geometry: Geometry,\r\n    zones: ZoneMod,\r\n  ) {\r\n    this.#language = language;\r\n    this.#layout = layout;\r\n    this.#geometry = geometry;\r\n    this.#zones = zones;\r\n  }\r\n\r\n  get language(): Language {\r\n    return this.#language;\r\n  }\r\n\r\n  get layout(): Layout {\r\n    return this.#layout;\r\n  }\r\n\r\n  get geometry(): Geometry {\r\n    return this.#geometry;\r\n  }\r\n\r\n  get zones(): ZoneMod {\r\n    return this.#zones;\r\n  }\r\n\r\n  selectableLanguages(): Language[] {\r\n    return [...Language.ALL];\r\n  }\r\n\r\n  selectableLayouts(): Layout[] {\r\n    return Layout.selectableLayouts(this.#language);\r\n  }\r\n\r\n  selectableGeometries(): Geometry[] {\r\n    return [...this.#layout.geometries];\r\n  }\r\n\r\n  selectableZones(): ZoneMod[] {\r\n    if (this.#layout.mod !== nullMod) {\r\n      return [];\r\n    }\r\n    return [...this.#geometry.zones];\r\n  }\r\n\r\n  withLanguage(language: Language): KeyboardOptions {\r\n    const layout = Layout.selectLayout(language);\r\n    const geometry = Geometry.first(layout.geometries);\r\n    const zones = ZoneMod.first(geometry.zones);\r\n    return new KeyboardOptions(\r\n      language, //\r\n      layout,\r\n      geometry,\r\n      zones,\r\n    );\r\n  }\r\n\r\n  withLayout(layout: Layout): KeyboardOptions {\r\n    if (this.#language.script === layout.language.script) {\r\n      const geometry = Geometry.first(layout.geometries);\r\n      const zones = ZoneMod.first(geometry.zones);\r\n      return new KeyboardOptions(\r\n        this.#language, //\r\n        layout,\r\n        geometry,\r\n        zones,\r\n      );\r\n    } else {\r\n      return this;\r\n    }\r\n  }\r\n\r\n  withGeometry(geometry: Geometry): KeyboardOptions {\r\n    if (this.#layout.geometries.has(geometry)) {\r\n      const zones = ZoneMod.first(geometry.zones);\r\n      return new KeyboardOptions(\r\n        this.#language, //\r\n        this.#layout,\r\n        geometry,\r\n        zones,\r\n      );\r\n    } else {\r\n      return this;\r\n    }\r\n  }\r\n\r\n  withZones(zones: ZoneMod): KeyboardOptions {\r\n    if (this.#layout.mod !== nullMod) {\r\n      return this;\r\n    }\r\n    if (this.#geometry.zones.has(zones)) {\r\n      return new KeyboardOptions(\r\n        this.#language,\r\n        this.#layout,\r\n        this.#geometry,\r\n        zones,\r\n      );\r\n    } else {\r\n      return this;\r\n    }\r\n  }\r\n\r\n  save(settings: Settings): Settings {\r\n    return settings\r\n      .set(keyboardProps.language, this.#language)\r\n      .set(keyboardProps.layout, this.#layout)\r\n      .set(keyboardProps.geometry, this.#geometry)\r\n      .set(keyboardProps.zones, this.#zones);\r\n  }\r\n}\r\n","import { Geometry, ZoneMod } from \"./geometry.ts\";\nimport { ANSI_101 } from \"./geometry/ansi_101.ts\";\nimport { ANSI_101_FULL } from \"./geometry/ansi_101_full.ts\";\nimport { BRAZILIAN_104 } from \"./geometry/brazilian_104.ts\";\nimport { BRAZILIAN_104_FULL } from \"./geometry/brazilian_104_full.ts\";\nimport { ISO_102 } from \"./geometry/iso_102.ts\";\nimport { ISO_102_FULL } from \"./geometry/iso_102_full.ts\";\nimport { JAPANESE_106 } from \"./geometry/japanese_106.ts\";\nimport { JAPANESE_106_FULL } from \"./geometry/japanese_106_full.ts\";\nimport { KOREAN_103 } from \"./geometry/korean_103.ts\";\nimport { KOREAN_103_FULL } from \"./geometry/korean_103_full.ts\";\nimport { MATRIX } from \"./geometry/matrix.ts\";\nimport { Keyboard } from \"./keyboard.ts\";\nimport { Layout } from \"./layout.ts\";\nimport { LAYOUT_AR_SA } from \"./layout/ar_sa.ts\";\nimport { LAYOUT_AR_SA_102 } from \"./layout/ar_sa_102.ts\";\nimport { LAYOUT_BE_BY } from \"./layout/be_by.ts\";\nimport { LAYOUT_CS_CZ } from \"./layout/cs_cz.ts\";\nimport { LAYOUT_DA_DK } from \"./layout/da_dk.ts\";\nimport { LAYOUT_DE_ADNW_BUT_XCV } from \"./layout/de_adnw_but_xcv.ts\";\nimport { LAYOUT_DE_BONE } from \"./layout/de_bone.ts\";\nimport { LAYOUT_DE_CH } from \"./layout/de_ch.ts\";\nimport { LAYOUT_DE_CMOS } from \"./layout/de_cmos.ts\";\nimport { LAYOUT_DE_DE } from \"./layout/de_de.ts\";\nimport { LAYOUT_DE_MINE } from \"./layout/de_mine.ts\";\nimport { LAYOUT_DE_NEO_2 } from \"./layout/de_neo_2.ts\";\nimport { LAYOUT_DE_NOTED } from \"./layout/de_noted.ts\";\nimport { LAYOUT_EL_GR } from \"./layout/el_gr.ts\";\nimport { LAYOUT_EN_APTV3 } from \"./layout/en_aptv3.ts\";\nimport { LAYOUT_EN_CANARY } from \"./layout/en_canary.ts\";\nimport { LAYOUT_EN_CANARY_MATRIX } from \"./layout/en_canary_matrix.ts\";\nimport { LAYOUT_EN_COLEMAK } from \"./layout/en_colemak.ts\";\nimport { LAYOUT_EN_COLEMAK_DH_ANSI } from \"./layout/en_colemak_dh_ansi.ts\";\nimport { LAYOUT_EN_COLEMAK_DH_ANSI_WIDE } from \"./layout/en_colemak_dh_ansi_wide.ts\";\nimport { LAYOUT_EN_COLEMAK_DH_ISO } from \"./layout/en_colemak_dh_iso.ts\";\nimport { LAYOUT_EN_COLEMAK_DH_ISO_WIDE } from \"./layout/en_colemak_dh_iso_wide.ts\";\nimport { LAYOUT_EN_COLEMAK_DH_MATRIX } from \"./layout/en_colemak_dh_matrix.ts\";\nimport { LAYOUT_EN_DVORAK } from \"./layout/en_dvorak.ts\";\nimport { LAYOUT_EN_DVORAK_PROG } from \"./layout/en_dvorak_prog.ts\";\nimport { LAYOUT_EN_ENGRAM } from \"./layout/en_engram.ts\";\nimport { LAYOUT_EN_ENTHIUM_V6 } from \"./layout/en_enthium_v6.ts\";\nimport { LAYOUT_EN_ENTHIUM_V10 } from \"./layout/en_enthium_v10.ts\";\nimport { LAYOUT_EN_FOCAL } from \"./layout/en_focal.ts\";\nimport { LAYOUT_EN_GALLIUM } from \"./layout/en_gallium.ts\";\nimport { LAYOUT_EN_GALLIUM_MATRIX } from \"./layout/en_gallium_matrix.ts\";\nimport { LAYOUT_EN_GRAPHITE } from \"./layout/en_graphite.ts\";\nimport { LAYOUT_EN_HALMAK } from \"./layout/en_halmak.ts\";\nimport { LAYOUT_EN_HANDS_DOWN_NEU } from \"./layout/en_hands_down_neu.ts\";\nimport { LAYOUT_EN_HANDS_DOWN_PROMETHIUM } from \"./layout/en_hands_down_promethium.ts\";\nimport { LAYOUT_EN_MTGAP } from \"./layout/en_mtgap.ts\";\nimport { LAYOUT_EN_NERPS } from \"./layout/en_nerps.ts\";\nimport { LAYOUT_EN_NERPS_MATRIX } from \"./layout/en_nerps_matrix.ts\";\nimport { LAYOUT_EN_NIGHT_MATRIX } from \"./layout/en_night_matrix.ts\";\nimport { LAYOUT_EN_NORMAN } from \"./layout/en_norman.ts\";\nimport { LAYOUT_EN_STURDY } from \"./layout/en_sturdy.ts\";\nimport { LAYOUT_EN_UK } from \"./layout/en_uk.ts\";\nimport { LAYOUT_EN_US } from \"./layout/en_us.ts\";\nimport { LAYOUT_EN_WORKMAN } from \"./layout/en_workman.ts\";\nimport { LAYOUT_ES_ES } from \"./layout/es_es.ts\";\nimport { LAYOUT_ES_MX } from \"./layout/es_mx.ts\";\nimport { LAYOUT_FA_IR } from \"./layout/fa_ir.ts\";\nimport { LAYOUT_FA_IR_LEGACY } from \"./layout/fa_ir_legacy.ts\";\nimport { LAYOUT_FR_BEPO } from \"./layout/fr_bepo.ts\";\nimport { LAYOUT_FR_CA } from \"./layout/fr_ca.ts\";\nimport { LAYOUT_FR_CH } from \"./layout/fr_ch.ts\";\nimport { LAYOUT_FR_ERGLACE } from \"./layout/fr_erglace.ts\";\nimport { LAYOUT_FR_ERGO_L } from \"./layout/fr_ergo_l.ts\";\nimport { LAYOUT_FR_ERGOPTI } from \"./layout/fr_ergopti.ts\";\nimport { LAYOUT_FR_FR } from \"./layout/fr_fr.ts\";\nimport { LAYOUT_FR_OPTIMOT_ERGO } from \"./layout/fr_optimot_ergo.ts\";\nimport { LAYOUT_HE_IL } from \"./layout/he_il.ts\";\nimport { LAYOUT_HE_IL_ARKN } from \"./layout/he_il_arkn.ts\";\nimport { LAYOUT_HU_HU } from \"./layout/hu_hu.ts\";\nimport { LAYOUT_IT_IT } from \"./layout/it_it.ts\";\nimport { LAYOUT_JA_JP_JIS } from \"./layout/ja_jp_jis.ts\";\nimport { LAYOUT_LT_LT } from \"./layout/lt_lt.ts\";\nimport { LAYOUT_NB_DVORAK } from \"./layout/nb_dvorak.ts\";\nimport { LAYOUT_NB_KVIKK } from \"./layout/nb_kvikk.ts\";\nimport { LAYOUT_NB_NO } from \"./layout/nb_no.ts\";\nimport { LAYOUT_NB_SKARP } from \"./layout/nb_skarp.ts\";\nimport { LAYOUT_NL_BE } from \"./layout/nl_be.ts\";\nimport { LAYOUT_NL_NL } from \"./layout/nl_nl.ts\";\nimport { LAYOUT_PL_FWYR } from \"./layout/pl_fwyr.ts\";\nimport { LAYOUT_PL_PL } from \"./layout/pl_pl.ts\";\nimport { LAYOUT_PT_BR } from \"./layout/pt_br.ts\";\nimport { LAYOUT_PT_PT } from \"./layout/pt_pt.ts\";\nimport { LAYOUT_RO_RO } from \"./layout/ro_ro.ts\";\nimport { LAYOUT_RU_RU } from \"./layout/ru_ru.ts\";\nimport { LAYOUT_SL_SI } from \"./layout/sl_si.ts\";\nimport { LAYOUT_SV_SE } from \"./layout/sv_se.ts\";\nimport { LAYOUT_TH_TH } from \"./layout/th_th.ts\";\nimport { LAYOUT_TH_TH_MAN } from \"./layout/th_th_man.ts\";\nimport { LAYOUT_TH_TH_PAT } from \"./layout/th_th_pat.ts\";\nimport { LAYOUT_TR_TR_F } from \"./layout/tr_tr_f.ts\";\nimport { LAYOUT_TR_TR_Q } from \"./layout/tr_tr_q.ts\";\nimport { LAYOUT_UK_UA } from \"./layout/uk_ua.ts\";\nimport { nullMod, remapZones } from \"./mod.ts\";\nimport { KeyboardOptions } from \"./settings.ts\";\nimport { type CharacterDict, type GeometryDict } from \"./types.ts\";\n\nconst layouts = new Map<Layout, CharacterDict>([\n  [Layout.AR_SA, LAYOUT_AR_SA],\n  [Layout.AR_SA_102, LAYOUT_AR_SA_102],\n  [Layout.BE_BY, LAYOUT_BE_BY],\n  [Layout.CS_CZ, LAYOUT_CS_CZ],\n  [Layout.DA_DK, LAYOUT_DA_DK],\n  [Layout.DE_BONE, LAYOUT_DE_BONE],\n  [Layout.DE_CH, LAYOUT_DE_CH],\n  [Layout.DE_CMOS, LAYOUT_DE_CMOS],\n  [Layout.DE_DE, LAYOUT_DE_DE],\n  [Layout.DE_MINE, LAYOUT_DE_MINE],\n  [Layout.DE_NEO_2, LAYOUT_DE_NEO_2],\n  [Layout.DE_NOTED, LAYOUT_DE_NOTED],\n  [Layout.EL_GR, LAYOUT_EL_GR],\n  [Layout.EN_CANARY, LAYOUT_EN_CANARY],\n  [Layout.EN_CANARY_MATRIX, LAYOUT_EN_CANARY_MATRIX],\n  [Layout.EN_COLEMAK, LAYOUT_EN_COLEMAK],\n  [Layout.EN_COLEMAK_DH_ANSI, LAYOUT_EN_COLEMAK_DH_ANSI],\n  [Layout.EN_COLEMAK_DH_ANSI_WIDE, LAYOUT_EN_COLEMAK_DH_ANSI_WIDE],\n  [Layout.EN_COLEMAK_DH_ISO, LAYOUT_EN_COLEMAK_DH_ISO],\n  [Layout.EN_COLEMAK_DH_ISO_WIDE, LAYOUT_EN_COLEMAK_DH_ISO_WIDE],\n  [Layout.EN_COLEMAK_DH_MATRIX, LAYOUT_EN_COLEMAK_DH_MATRIX],\n  [Layout.EN_DVORAK, LAYOUT_EN_DVORAK],\n  [Layout.EN_DVORAK_PROG, LAYOUT_EN_DVORAK_PROG],\n  [Layout.EN_ENGRAM, LAYOUT_EN_ENGRAM],\n  [Layout.EN_ENTHIUM_V6, LAYOUT_EN_ENTHIUM_V6],\n  [Layout.EN_ENTHIUM_V10, LAYOUT_EN_ENTHIUM_V10],\n  [Layout.EN_FOCAL, LAYOUT_EN_FOCAL],\n  [Layout.EN_GALLIUM, LAYOUT_EN_GALLIUM],\n  [Layout.EN_GALLIUM_MATRIX, LAYOUT_EN_GALLIUM_MATRIX],\n  [Layout.EN_GRAPHITE, LAYOUT_EN_GRAPHITE],\n  [Layout.EN_HALMAK, LAYOUT_EN_HALMAK],\n  [Layout.EN_HANDS_DOWN_NEU, LAYOUT_EN_HANDS_DOWN_NEU],\n  [Layout.EN_HANDS_DOWN_PROMETHIUM, LAYOUT_EN_HANDS_DOWN_PROMETHIUM],\n  [Layout.EN_MTGAP, LAYOUT_EN_MTGAP],\n  [Layout.EN_JP, LAYOUT_JA_JP_JIS],\n  [Layout.EN_NERPS, LAYOUT_EN_NERPS],\n  [Layout.EN_NERPS_MATRIX, LAYOUT_EN_NERPS_MATRIX],\n  [Layout.EN_NIGHT_MATRIX, LAYOUT_EN_NIGHT_MATRIX],\n  [Layout.EN_NORMAN, LAYOUT_EN_NORMAN],\n  [Layout.EN_STURDY, LAYOUT_EN_STURDY],\n  [Layout.EN_APT_v3, LAYOUT_EN_APTV3],\n  [Layout.EN_UK, LAYOUT_EN_UK],\n  [Layout.EN_US, LAYOUT_EN_US],\n  [Layout.EN_WORKMAN, LAYOUT_EN_WORKMAN],\n  [Layout.ES_ES, LAYOUT_ES_ES],\n  [Layout.ES_MX, LAYOUT_ES_MX],\n  [Layout.FA_IR, LAYOUT_FA_IR],\n  [Layout.FA_IR_LEGACY, LAYOUT_FA_IR_LEGACY],\n  [Layout.FR_BEPO, LAYOUT_FR_BEPO],\n  [Layout.FR_CA, LAYOUT_FR_CA],\n  [Layout.FR_CH, LAYOUT_FR_CH],\n  [Layout.FR_ERGLACE, LAYOUT_FR_ERGLACE],\n  [Layout.FR_ERGO_L, LAYOUT_FR_ERGO_L],\n  [Layout.FR_ERGOPTI, LAYOUT_FR_ERGOPTI],\n  [Layout.FR_FR, LAYOUT_FR_FR],\n  [Layout.FR_OPTIMOT_ERGO, LAYOUT_FR_OPTIMOT_ERGO],\n  [Layout.HE_IL, LAYOUT_HE_IL],\n  [Layout.HE_IL_ARKN, LAYOUT_HE_IL_ARKN],\n  [Layout.HU_HU, LAYOUT_HU_HU],\n  [Layout.IT_IT, LAYOUT_IT_IT],\n  [Layout.LT_LT, LAYOUT_LT_LT],\n  [Layout.NB_KVIKK, LAYOUT_NB_KVIKK],\n  [Layout.NB_NO, LAYOUT_NB_NO],\n  [Layout.NB_SKARP, LAYOUT_NB_SKARP],\n  [Layout.NB_DVORAK, LAYOUT_NB_DVORAK],\n  [Layout.NL_BE, LAYOUT_NL_BE],\n  [Layout.NL_NL, LAYOUT_NL_NL],\n  [Layout.PL_FWYR, LAYOUT_PL_FWYR],\n  [Layout.PL_PL, LAYOUT_PL_PL],\n  [Layout.PT_BR, LAYOUT_PT_BR],\n  [Layout.PT_PT, LAYOUT_PT_PT],\n  [Layout.RO_RO, LAYOUT_RO_RO],\n  [Layout.RU_RU, LAYOUT_RU_RU],\n  [Layout.SL_SI, LAYOUT_SL_SI],\n  [Layout.SV_SE, LAYOUT_SV_SE],\n  [Layout.TH_MAN, LAYOUT_TH_TH_MAN],\n  [Layout.TH_PAT, LAYOUT_TH_TH_PAT],\n  [Layout.TH_TH, LAYOUT_TH_TH],\n  [Layout.TR_TR_F, LAYOUT_TR_TR_F],\n  [Layout.TR_TR_Q, LAYOUT_TR_TR_Q],\n  [Layout.UK_UA, LAYOUT_UK_UA],\n  [Layout.DE_ADNW_BUT_XCV, LAYOUT_DE_ADNW_BUT_XCV],\n]);\n\nconst geometries = new Map<Geometry, GeometryDict>([\n  [Geometry.ANSI_101, ANSI_101],\n  [Geometry.ANSI_101_FULL, ANSI_101_FULL],\n  [Geometry.BRAZILIAN_104, BRAZILIAN_104],\n  [Geometry.BRAZILIAN_104_FULL, BRAZILIAN_104_FULL],\n  [Geometry.ISO_102, ISO_102],\n  [Geometry.ISO_102_FULL, ISO_102_FULL],\n  [Geometry.JAPANESE_106, JAPANESE_106],\n  [Geometry.JAPANESE_106_FULL, JAPANESE_106_FULL],\n  [Geometry.KOREAN_103, KOREAN_103],\n  [Geometry.KOREAN_103_FULL, KOREAN_103_FULL],\n  [Geometry.MATRIX, MATRIX],\n]);\n\nexport function loadKeyboard(options: KeyboardOptions): Keyboard;\nexport function loadKeyboard(layout: Layout): Keyboard;\nexport function loadKeyboard(layout: Layout, geometry: Geometry): Keyboard;\nexport function loadKeyboard(...args: any[]): Keyboard {\n  const { length } = args;\n  let options: KeyboardOptions;\n  if (length === 1 && (options = args[0]) instanceof KeyboardOptions) {\n    return loadImpl(options.layout, options.geometry, options.zones);\n  }\n  let layout: Layout;\n  if (length === 1 && (layout = args[0]) instanceof Layout) {\n    return loadImpl(layout);\n  }\n  let geometry: Geometry;\n  if (\n    length === 2 &&\n    (layout = args[0]) instanceof Layout &&\n    (geometry = args[1]) instanceof Geometry\n  ) {\n    return loadImpl(layout, geometry);\n  }\n  throw new TypeError();\n}\n\nfunction loadImpl(\n  layout: Layout,\n  geometry: Geometry = Geometry.first(layout.geometries),\n  zones: ZoneMod = ZoneMod.first(geometry.zones),\n): Keyboard {\n  let characterDict = layouts.get(layout)!;\n  let geometryDict = geometries.get(geometry)!;\n  if (layout.mod === nullMod && zones !== ZoneMod.STANDARD) {\n    geometryDict = remapZones(geometryDict, zones.mod);\n  }\n  return new Keyboard(layout, geometry, characterDict, geometryDict);\n}\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_AR_SA: CharacterDict = {\n  Backquote: [/* ARABIC LETTER THAL */ 0x0630, /* ARABIC SHADDA */ 0x0651],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* LEFT PARENTHESIS */ 0x0028],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* ARABIC LETTER DAD */ 0x0636, /* ARABIC FATHA */ 0x064e],\n  KeyW: [/* ARABIC LETTER SAD */ 0x0635, /* ARABIC FATHATAN */ 0x064b],\n  KeyE: [/* ARABIC LETTER THEH */ 0x062b, /* ARABIC DAMMA */ 0x064f],\n  KeyR: [/* ARABIC LETTER QAF */ 0x0642, /* ARABIC DAMMATAN */ 0x064c],\n  KeyT: [/* ARABIC LETTER FEH */ 0x0641, { ligature: \"لإ\" }],\n  KeyY: [/* ARABIC LETTER GHAIN */ 0x063a, /* ARABIC LETTER ALEF WITH HAMZA BELOW */ 0x0625],\n  KeyU: [/* ARABIC LETTER AIN */ 0x0639, /* LEFT SINGLE QUOTATION MARK */ 0x2018],\n  KeyI: [/* ARABIC LETTER HEH */ 0x0647, /* DIVISION SIGN */ 0x00f7],\n  KeyO: [/* ARABIC LETTER KHAH */ 0x062e, /* MULTIPLICATION SIGN */ 0x00d7],\n  KeyP: [/* ARABIC LETTER HAH */ 0x062d, /* ARABIC SEMICOLON */ 0x061b],\n  BracketLeft: [/* ARABIC LETTER JEEM */ 0x062c, /* LESS-THAN SIGN */ 0x003c],\n  BracketRight: [/* ARABIC LETTER DAL */ 0x062f, /* GREATER-THAN SIGN */ 0x003e],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* ARABIC LETTER SHEEN */ 0x0634, /* ARABIC KASRA */ 0x0650],\n  KeyS: [/* ARABIC LETTER SEEN */ 0x0633, /* ARABIC KASRATAN */ 0x064d],\n  KeyD: [/* ARABIC LETTER YEH */ 0x064a, /* RIGHT SQUARE BRACKET */ 0x005d],\n  KeyF: [/* ARABIC LETTER BEH */ 0x0628, /* LEFT SQUARE BRACKET */ 0x005b],\n  KeyG: [/* ARABIC LETTER LAM */ 0x0644, { ligature: \"لأ\" }],\n  KeyH: [/* ARABIC LETTER ALEF */ 0x0627, /* ARABIC LETTER ALEF WITH HAMZA ABOVE */ 0x0623],\n  KeyJ: [/* ARABIC LETTER TEH */ 0x062a, /* ARABIC TATWEEL */ 0x0640],\n  KeyK: [/* ARABIC LETTER NOON */ 0x0646, /* ARABIC COMMA */ 0x060c],\n  KeyL: [/* ARABIC LETTER MEEM */ 0x0645, /* SOLIDUS */ 0x002f],\n  Semicolon: [/* ARABIC LETTER KAF */ 0x0643, /* COLON */ 0x003a],\n  Quote: [/* ARABIC LETTER TAH */ 0x0637, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* ARABIC LETTER YEH WITH HAMZA ABOVE */ 0x0626, /* TILDE */ 0x007e],\n  KeyX: [/* ARABIC LETTER HAMZA */ 0x0621, /* ARABIC SUKUN */ 0x0652],\n  KeyC: [/* ARABIC LETTER WAW WITH HAMZA ABOVE */ 0x0624, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyV: [/* ARABIC LETTER REH */ 0x0631, /* LEFT CURLY BRACKET */ 0x007b],\n  KeyB: [{ ligature: \"لا\" }, { ligature: \"لآ\" }],\n  KeyN: [/* ARABIC LETTER ALEF MAKSURA */ 0x0649, /* ARABIC LETTER ALEF WITH MADDA ABOVE */ 0x0622],\n  KeyM: [/* ARABIC LETTER TEH MARBUTA */ 0x0629, /* RIGHT SINGLE QUOTATION MARK */ 0x2019],\n  Comma: [/* ARABIC LETTER WAW */ 0x0648, /* COMMA */ 0x002c],\n  Period: [/* ARABIC LETTER ZAIN */ 0x0632, /* FULL STOP */ 0x002e],\n  Slash: [/* ARABIC LETTER ZAH */ 0x0638, /* ARABIC QUESTION MARK */ 0x061f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_AR_SA_102: CharacterDict = {\n  Backquote: [/* GREATER-THAN SIGN */ 0x003e, /* LESS-THAN SIGN */ 0x003c],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* CURRENCY SIGN */ 0x00a4],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* LEFT PARENTHESIS */ 0x0028],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* ARABIC LETTER DAD */ 0x0636, /* ARABIC FATHA */ 0x064e, { ligature: \"َّ\" }],\n  KeyW: [/* ARABIC LETTER SAD */ 0x0635, /* ARABIC FATHATAN */ 0x064b, { ligature: \"ًّ\" }],\n  KeyE: [/* ARABIC LETTER THEH */ 0x062b, /* ARABIC DAMMA */ 0x064f, { ligature: \"ُّ\" }],\n  KeyR: [/* ARABIC LETTER QAF */ 0x0642, /* ARABIC DAMMATAN */ 0x064c, { ligature: \"ٌّ\" }],\n  KeyT: [/* ARABIC LETTER FEH */ 0x0641, { ligature: \"لإ\" }],\n  KeyY: [/* ARABIC LETTER GHAIN */ 0x063a, /* ARABIC LETTER ALEF WITH HAMZA BELOW */ 0x0625],\n  KeyU: [/* ARABIC LETTER AIN */ 0x0639, /* LEFT SINGLE QUOTATION MARK */ 0x2018],\n  KeyI: [/* ARABIC LETTER HEH */ 0x0647, /* DIVISION SIGN */ 0x00f7],\n  KeyO: [/* ARABIC LETTER KHAH */ 0x062e, /* MULTIPLICATION SIGN */ 0x00d7],\n  KeyP: [/* ARABIC LETTER HAH */ 0x062d, /* ARABIC SEMICOLON */ 0x061b],\n  BracketLeft: [/* ARABIC LETTER JEEM */ 0x062c, /* RIGHT CURLY BRACKET */ 0x007d],\n  BracketRight: [/* ARABIC LETTER DAL */ 0x062f, /* LEFT CURLY BRACKET */ 0x007b],\n  Backslash: [/* ARABIC LETTER THAL */ 0x0630, /* ARABIC SHADDA */ 0x0651],\n  KeyA: [/* ARABIC LETTER SHEEN */ 0x0634, /* REVERSE SOLIDUS */ 0x005c],\n  KeyS: [/* ARABIC LETTER SEEN */ 0x0633],\n  KeyD: [/* ARABIC LETTER YEH */ 0x064a, /* RIGHT SQUARE BRACKET */ 0x005d],\n  KeyF: [/* ARABIC LETTER BEH */ 0x0628, /* LEFT SQUARE BRACKET */ 0x005b],\n  KeyG: [/* ARABIC LETTER LAM */ 0x0644, { ligature: \"لأ\" }],\n  KeyH: [/* ARABIC LETTER ALEF */ 0x0627, /* ARABIC LETTER ALEF WITH HAMZA ABOVE */ 0x0623],\n  KeyJ: [/* ARABIC LETTER TEH */ 0x062a, /* ARABIC TATWEEL */ 0x0640],\n  KeyK: [/* ARABIC LETTER NOON */ 0x0646, /* ARABIC COMMA */ 0x060c],\n  KeyL: [/* ARABIC LETTER MEEM */ 0x0645, /* SOLIDUS */ 0x002f],\n  Semicolon: [/* ARABIC LETTER KAF */ 0x0643, /* COLON */ 0x003a],\n  Quote: [/* ARABIC LETTER TAH */ 0x0637, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* ARABIC TATWEEL */ 0x0640, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* ARABIC LETTER YEH WITH HAMZA ABOVE */ 0x0626, /* TILDE */ 0x007e],\n  KeyX: [/* ARABIC LETTER HAMZA */ 0x0621, /* ARABIC SUKUN */ 0x0652],\n  KeyC: [/* ARABIC LETTER WAW WITH HAMZA ABOVE */ 0x0624, /* ARABIC KASRA */ 0x0650, { ligature: \"ِّ\" }],\n  KeyV: [/* ARABIC LETTER REH */ 0x0631, /* ARABIC KASRATAN */ 0x064d, { ligature: \"ٍّ\" }],\n  KeyB: [{ ligature: \"لا\" }, { ligature: \"لآ\" }],\n  KeyN: [/* ARABIC LETTER ALEF MAKSURA */ 0x0649, /* ARABIC LETTER ALEF WITH MADDA ABOVE */ 0x0622],\n  KeyM: [/* ARABIC LETTER TEH MARBUTA */ 0x0629, /* RIGHT SINGLE QUOTATION MARK */ 0x2019],\n  Comma: [/* ARABIC LETTER WAW */ 0x0648, /* COMMA */ 0x002c],\n  Period: [/* ARABIC LETTER ZAIN */ 0x0632, /* FULL STOP */ 0x002e],\n  Slash: [/* ARABIC LETTER ZAH */ 0x0638, /* ARABIC QUESTION MARK */ 0x061f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_BE_BY: CharacterDict = {\n  Backquote: [/* CYRILLIC SMALL LETTER IO */ 0x0451, /* CYRILLIC CAPITAL LETTER IO */ 0x0401],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMERO SIGN */ 0x2116],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* SEMICOLON */ 0x003b],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* COLON */ 0x003a],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* QUESTION MARK */ 0x003f],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* CYRILLIC SMALL LETTER SHORT I */ 0x0439, /* CYRILLIC CAPITAL LETTER SHORT I */ 0x0419],\n  KeyW: [/* CYRILLIC SMALL LETTER TSE */ 0x0446, /* CYRILLIC CAPITAL LETTER TSE */ 0x0426],\n  KeyE: [/* CYRILLIC SMALL LETTER U */ 0x0443, /* CYRILLIC CAPITAL LETTER U */ 0x0423],\n  KeyR: [/* CYRILLIC SMALL LETTER KA */ 0x043a, /* CYRILLIC CAPITAL LETTER KA */ 0x041a],\n  KeyT: [/* CYRILLIC SMALL LETTER IE */ 0x0435, /* CYRILLIC CAPITAL LETTER IE */ 0x0415],\n  KeyY: [/* CYRILLIC SMALL LETTER EN */ 0x043d, /* CYRILLIC CAPITAL LETTER EN */ 0x041d],\n  KeyU: [/* CYRILLIC SMALL LETTER GHE */ 0x0433, /* CYRILLIC CAPITAL LETTER GHE */ 0x0413],\n  KeyI: [/* CYRILLIC SMALL LETTER SHA */ 0x0448, /* CYRILLIC CAPITAL LETTER SHA */ 0x0428],\n  KeyO: [/* CYRILLIC SMALL LETTER SHORT U */ 0x045e, /* CYRILLIC CAPITAL LETTER SHORT U */ 0x040e],\n  KeyP: [/* CYRILLIC SMALL LETTER ZE */ 0x0437, /* CYRILLIC CAPITAL LETTER ZE */ 0x0417],\n  BracketLeft: [/* CYRILLIC SMALL LETTER HA */ 0x0445, /* CYRILLIC CAPITAL LETTER HA */ 0x0425],\n  BracketRight: [/* APOSTROPHE */ 0x0027, /* APOSTROPHE */ 0x0027],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* SOLIDUS */ 0x002f],\n  KeyA: [/* CYRILLIC SMALL LETTER EF */ 0x0444, /* CYRILLIC CAPITAL LETTER EF */ 0x0424],\n  KeyS: [/* CYRILLIC SMALL LETTER YERU */ 0x044b, /* CYRILLIC CAPITAL LETTER YERU */ 0x042b],\n  KeyD: [/* CYRILLIC SMALL LETTER VE */ 0x0432, /* CYRILLIC CAPITAL LETTER VE */ 0x0412],\n  KeyF: [/* CYRILLIC SMALL LETTER A */ 0x0430, /* CYRILLIC CAPITAL LETTER A */ 0x0410],\n  KeyG: [/* CYRILLIC SMALL LETTER PE */ 0x043f, /* CYRILLIC CAPITAL LETTER PE */ 0x041f],\n  KeyH: [/* CYRILLIC SMALL LETTER ER */ 0x0440, /* CYRILLIC CAPITAL LETTER ER */ 0x0420],\n  KeyJ: [/* CYRILLIC SMALL LETTER O */ 0x043e, /* CYRILLIC CAPITAL LETTER O */ 0x041e],\n  KeyK: [/* CYRILLIC SMALL LETTER EL */ 0x043b, /* CYRILLIC CAPITAL LETTER EL */ 0x041b],\n  KeyL: [/* CYRILLIC SMALL LETTER DE */ 0x0434, /* CYRILLIC CAPITAL LETTER DE */ 0x0414],\n  Semicolon: [/* CYRILLIC SMALL LETTER ZHE */ 0x0436, /* CYRILLIC CAPITAL LETTER ZHE */ 0x0416],\n  Quote: [/* CYRILLIC SMALL LETTER E */ 0x044d, /* CYRILLIC CAPITAL LETTER E */ 0x042d],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* SOLIDUS */ 0x002f],\n  KeyZ: [/* CYRILLIC SMALL LETTER YA */ 0x044f, /* CYRILLIC CAPITAL LETTER YA */ 0x042f],\n  KeyX: [/* CYRILLIC SMALL LETTER CHE */ 0x0447, /* CYRILLIC CAPITAL LETTER CHE */ 0x0427],\n  KeyC: [/* CYRILLIC SMALL LETTER ES */ 0x0441, /* CYRILLIC CAPITAL LETTER ES */ 0x0421],\n  KeyV: [/* CYRILLIC SMALL LETTER EM */ 0x043c, /* CYRILLIC CAPITAL LETTER EM */ 0x041c],\n  KeyB: [/* CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I */ 0x0456, /* CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I */ 0x0406],\n  KeyN: [/* CYRILLIC SMALL LETTER TE */ 0x0442, /* CYRILLIC CAPITAL LETTER TE */ 0x0422],\n  KeyM: [/* CYRILLIC SMALL LETTER SOFT SIGN */ 0x044c, /* CYRILLIC CAPITAL LETTER SOFT SIGN */ 0x042c],\n  Comma: [/* CYRILLIC SMALL LETTER BE */ 0x0431, /* CYRILLIC CAPITAL LETTER BE */ 0x0411],\n  Period: [/* CYRILLIC SMALL LETTER YU */ 0x044e, /* CYRILLIC CAPITAL LETTER YU */ 0x042e],\n  Slash: [/* FULL STOP */ 0x002e, /* COMMA */ 0x002c],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_CS_CZ: CharacterDict = {\n  Backquote: [/* SEMICOLON */ 0x003b, { dead: /* COMBINING RING ABOVE */ 0x030a }],\n  Digit1: [/* PLUS SIGN */ 0x002b, /* DIGIT ONE */ 0x0031, /* TILDE */ 0x007e],\n  Digit2: [/* LATIN SMALL LETTER E WITH CARON */ 0x011b, /* DIGIT TWO */ 0x0032, { dead: /* COMBINING CARON */ 0x030c }],\n  Digit3: [/* LATIN SMALL LETTER S WITH CARON */ 0x0161, /* DIGIT THREE */ 0x0033, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }],\n  Digit4: [/* LATIN SMALL LETTER C WITH CARON */ 0x010d, /* DIGIT FOUR */ 0x0034, { dead: /* COMBINING BREVE */ 0x0306 }],\n  Digit5: [/* LATIN SMALL LETTER R WITH CARON */ 0x0159, /* DIGIT FIVE */ 0x0035, { dead: /* COMBINING RING ABOVE */ 0x030a }],\n  Digit6: [/* LATIN SMALL LETTER Z WITH CARON */ 0x017e, /* DIGIT SIX */ 0x0036, { dead: /* COMBINING OGONEK */ 0x0328 }],\n  Digit7: [/* LATIN SMALL LETTER Y WITH ACUTE */ 0x00fd, /* DIGIT SEVEN */ 0x0037, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  Digit8: [/* LATIN SMALL LETTER A WITH ACUTE */ 0x00e1, /* DIGIT EIGHT */ 0x0038, { dead: /* COMBINING DOT ABOVE */ 0x0307 }],\n  Digit9: [/* LATIN SMALL LETTER I WITH ACUTE */ 0x00ed, /* DIGIT NINE */ 0x0039, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  Digit0: [/* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* DIGIT ZERO */ 0x0030, { dead: /* COMBINING DOUBLE ACUTE ACCENT */ 0x030b }],\n  Minus: [/* EQUALS SIGN */ 0x003d, /* PERCENT SIGN */ 0x0025, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  Equal: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING CARON */ 0x030c }, { dead: /* COMBINING CEDILLA */ 0x0327 }],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* REVERSE SOLIDUS */ 0x005c],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057, /* VERTICAL LINE */ 0x007c],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER U WITH ACUTE */ 0x00fa, /* SOLIDUS */ 0x002f, /* DIVISION SIGN */ 0x00f7],\n  BracketRight: [/* RIGHT PARENTHESIS */ 0x0029, /* LEFT PARENTHESIS */ 0x0028, /* MULTIPLICATION SIGN */ 0x00d7],\n  Backslash: [{ dead: /* COMBINING DIAERESIS */ 0x0308 }, /* APOSTROPHE */ 0x0027, /* CURRENCY SIGN */ 0x00a4],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* LATIN SMALL LETTER D WITH STROKE */ 0x0111],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044, /* LATIN CAPITAL LETTER D WITH STROKE */ 0x0110],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046, /* LEFT SQUARE BRACKET */ 0x005b],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047, /* RIGHT SQUARE BRACKET */ 0x005d],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b, /* LATIN SMALL LETTER L WITH STROKE */ 0x0142],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c, /* LATIN CAPITAL LETTER L WITH STROKE */ 0x0141],\n  Semicolon: [/* LATIN SMALL LETTER U WITH RING ABOVE */ 0x016f, /* QUOTATION MARK */ 0x0022, /* DOLLAR SIGN */ 0x0024],\n  Quote: [/* SECTION SIGN */ 0x00a7, /* EXCLAMATION MARK */ 0x0021, /* LATIN SMALL LETTER SHARP S */ 0x00df],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, /* NUMBER SIGN */ 0x0023],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, /* AMPERSAND */ 0x0026],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056, /* COMMERCIAL AT */ 0x0040],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042, /* LEFT CURLY BRACKET */ 0x007b],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* QUESTION MARK */ 0x003f, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f, /* ASTERISK */ 0x002a],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_DA_DK: CharacterDict = {\n  Backquote: [/* VULGAR FRACTION ONE HALF */ 0x00bd, /* SECTION SIGN */ 0x00a7],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* POUND SIGN */ 0x00a3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* CURRENCY SIGN */ 0x00a4, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* EURO SIGN */ 0x20ac],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, /* LEFT SQUARE BRACKET */ 0x005b],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Minus: [/* PLUS SIGN */ 0x002b, /* QUESTION MARK */ 0x003f],\n  Equal: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, /* VERTICAL LINE */ 0x007c],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER A WITH RING ABOVE */ 0x00e5, /* LATIN CAPITAL LETTER A WITH RING ABOVE */ 0x00c5],\n  BracketRight: [{ dead: /* COMBINING DIAERESIS */ 0x0308 }, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING TILDE */ 0x0303 }],\n  Backslash: [/* APOSTROPHE */ 0x0027, /* ASTERISK */ 0x002a],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER AE */ 0x00e6, /* LATIN CAPITAL LETTER AE */ 0x00c6],\n  Quote: [/* LATIN SMALL LETTER O WITH STROKE */ 0x00f8, /* LATIN CAPITAL LETTER O WITH STROKE */ 0x00d8],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e, /* REVERSE SOLIDUS */ 0x005c],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, /* MICRO SIGN */ 0x00b5],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_DE_BONE: CharacterDict = {\n  Backquote: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING CARON */ 0x030c }],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* DEGREE SIGN */ 0x00b0, /* SUPERSCRIPT ONE */ 0x00b9, /* SUBSCRIPT ONE */ 0x2081],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* SECTION SIGN */ 0x00a7, /* SUPERSCRIPT TWO */ 0x00b2, /* SUBSCRIPT TWO */ 0x2082],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* SCRIPT SMALL L */ 0x2113, /* SUPERSCRIPT THREE */ 0x00b3, /* SUBSCRIPT THREE */ 0x2083],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb, /* SINGLE RIGHT-POINTING ANGLE QUOTATION MARK */ 0x203a, /* FEMALE SIGN */ 0x2640],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab, /* SINGLE LEFT-POINTING ANGLE QUOTATION MARK */ 0x2039, /* MALE SIGN */ 0x2642],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* DOLLAR SIGN */ 0x0024, /* CENT SIGN */ 0x00a2, /* MALE AND FEMALE SIGN */ 0x26a5],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* EURO SIGN */ 0x20ac, /* YEN SIGN */ 0x00a5, /* GREEK KAPPA SYMBOL */ 0x03f0],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e, /* SINGLE LOW-9 QUOTATION MARK */ 0x201a, /* MATHEMATICAL LEFT ANGLE BRACKET */ 0x27e8],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT DOUBLE QUOTATION MARK */ 0x201c, /* LEFT SINGLE QUOTATION MARK */ 0x2018, /* MATHEMATICAL RIGHT ANGLE BRACKET */ 0x27e9],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d, /* RIGHT SINGLE QUOTATION MARK */ 0x2019, /* SUBSCRIPT ZERO */ 0x2080],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* EM DASH */ 0x2014, null, /* NON-BREAKING HYPHEN */ 0x2011],\n  Equal: [{ dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, { dead: /* COMBINING CEDILLA */ 0x0327 }, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  KeyQ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a, /* HORIZONTAL ELLIPSIS */ 0x2026, /* GREEK SMALL LETTER THETA */ 0x03b8],\n  KeyW: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044, /* LOW LINE */ 0x005f, /* GREEK SMALL LETTER DELTA */ 0x03b4],\n  KeyE: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055, /* LEFT SQUARE BRACKET */ 0x005b],\n  KeyR: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, /* RIGHT SQUARE BRACKET */ 0x005d, /* GREEK SMALL LETTER ALPHA */ 0x03b1],\n  KeyT: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, /* CIRCUMFLEX ACCENT */ 0x005e, /* GREEK SMALL LETTER XI */ 0x03be],\n  KeyY: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050, /* EXCLAMATION MARK */ 0x0021, /* GREEK SMALL LETTER PI */ 0x03c0],\n  KeyU: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048, /* LESS-THAN SIGN */ 0x003c, /* GREEK SMALL LETTER PSI */ 0x03c8],\n  KeyI: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c, /* GREATER-THAN SIGN */ 0x003e, /* GREEK SMALL LETTER LAMDA */ 0x03bb],\n  KeyO: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, /* EQUALS SIGN */ 0x003d, /* GREEK SMALL LETTER MU */ 0x03bc],\n  KeyP: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057, /* AMPERSAND */ 0x0026, /* GREEK SMALL LETTER OMEGA */ 0x03c9],\n  BracketLeft: [/* LATIN SMALL LETTER SHARP S */ 0x00df, /* LATIN CAPITAL LETTER SHARP S */ 0x1e9e, /* LATIN SMALL LETTER LONG S */ 0x017f, /* GREEK RHO SYMBOL */ 0x03f1],\n  BracketRight: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING TILDE */ 0x0303 }],\n  KeyA: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, /* REVERSE SOLIDUS */ 0x005c, /* GREEK SMALL LETTER CHI */ 0x03c7],\n  KeyS: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054, /* SOLIDUS */ 0x002f, /* GREEK SMALL LETTER TAU */ 0x03c4],\n  KeyD: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049, /* LEFT CURLY BRACKET */ 0x007b, /* GREEK SMALL LETTER IOTA */ 0x03b9],\n  KeyF: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* RIGHT CURLY BRACKET */ 0x007d, /* GREEK SMALL LETTER EPSILON */ 0x03b5],\n  KeyG: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f, /* ASTERISK */ 0x002a, /* GREEK SMALL LETTER GAMMA */ 0x03b3],\n  KeyH: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042, /* QUESTION MARK */ 0x003f, /* GREEK SMALL LETTER BETA */ 0x03b2],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e, /* LEFT PARENTHESIS */ 0x0028, /* GREEK SMALL LETTER NU */ 0x03bd],\n  KeyK: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052, /* RIGHT PARENTHESIS */ 0x0029, /* GREEK SMALL LETTER KAPPA */ 0x03ba],\n  KeyL: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* HYPHEN-MINUS */ 0x002d, /* GREEK SMALL LETTER SIGMA */ 0x03c3],\n  Semicolon: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047, /* COLON */ 0x003a, /* GREEK SMALL LETTER GAMMA */ 0x03b3],\n  Quote: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* COMMERCIAL AT */ 0x0040, /* GREEK PHI SYMBOL */ 0x03d5],\n  KeyZ: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046, /* NUMBER SIGN */ 0x0023],\n  KeyX: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056, /* DOLLAR SIGN */ 0x0024],\n  KeyC: [/* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LATIN CAPITAL LETTER U WITH DIAERESIS */ 0x00dc, /* VERTICAL LINE */ 0x007c],\n  KeyV: [/* LATIN SMALL LETTER A WITH DIAERESIS */ 0x00e4, /* LATIN CAPITAL LETTER A WITH DIAERESIS */ 0x00c4, /* TILDE */ 0x007e, /* GREEK SMALL LETTER ETA */ 0x03b7],\n  KeyB: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN CAPITAL LETTER O WITH DIAERESIS */ 0x00d6, /* GRAVE ACCENT */ 0x0060, /* GREEK LUNATE EPSILON SYMBOL */ 0x03f5],\n  KeyN: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059, /* PLUS SIGN */ 0x002b, /* GREEK SMALL LETTER UPSILON */ 0x03c5],\n  KeyM: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a, /* PERCENT SIGN */ 0x0025, /* GREEK SMALL LETTER ZETA */ 0x03b6],\n  Comma: [/* COMMA */ 0x002c, /* EN DASH */ 0x2013, /* QUOTATION MARK */ 0x0022, /* GREEK RHO SYMBOL */ 0x03f1],\n  Period: [/* FULL STOP */ 0x002e, /* BULLET */ 0x2022, /* SEMICOLON */ 0x003b, /* GREEK THETA SYMBOL */ 0x03d1],\n  Slash: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b, /* SEMICOLON */ 0x003b, /* GREEK SMALL LETTER KAPPA */ 0x03ba],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_DE_CH: CharacterDict = {\n  Backquote: [/* SECTION SIGN */ 0x00a7, /* DEGREE SIGN */ 0x00b0],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* PLUS SIGN */ 0x002b, /* BROKEN BAR */ 0x00a6],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* ASTERISK */ 0x002a, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* DEGREE SIGN */ 0x00b0],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* SECTION SIGN */ 0x00a7],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026, /* NOT SIGN */ 0x00ac],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f, /* VERTICAL LINE */ 0x007c],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, /* CENT SIGN */ 0x00a2],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d],\n  Minus: [/* APOSTROPHE */ 0x0027, /* QUESTION MARK */ 0x003f, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  Equal: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, { dead: /* COMBINING TILDE */ 0x0303 }],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LATIN SMALL LETTER E WITH GRAVE */ 0x00e8, /* LEFT SQUARE BRACKET */ 0x005b],\n  BracketRight: [{ dead: /* COMBINING DIAERESIS */ 0x0308 }, /* EXCLAMATION MARK */ 0x0021, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Backslash: [/* DOLLAR SIGN */ 0x0024, /* POUND SIGN */ 0x00a3, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9],\n  Quote: [/* LATIN SMALL LETTER A WITH DIAERESIS */ 0x00e4, /* LATIN SMALL LETTER A WITH GRAVE */ 0x00e0, /* LEFT CURLY BRACKET */ 0x007b],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e, /* REVERSE SOLIDUS */ 0x005c],\n  KeyZ: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_DE_CMOS: CharacterDict = {\n  Backquote: [/* CIRCUMFLEX ACCENT */ 0x005e, /* CARON */ 0x02c7],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* DEGREE SIGN */ 0x00b0],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* SECTION SIGN */ 0x00a7],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* SCRIPT SMALL L */ 0x2113],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* DOLLAR SIGN */ 0x0024],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* EURO SIGN */ 0x20ac],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT DOUBLE QUOTATION MARK */ 0x201c],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* EM DASH */ 0x2014],\n  Equal: [/* GRAVE ACCENT */ 0x0060, /* CEDILLA */ 0x00b8],\n  KeyQ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyW: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyE: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyR: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyT: [/* LATIN SMALL LETTER A WITH DIAERESIS */ 0x00e4, /* LATIN CAPITAL LETTER A WITH DIAERESIS */ 0x00c4],\n  KeyY: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyU: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyI: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyO: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyP: [/* LATIN SMALL LETTER SHARP S */ 0x00df],\n  BracketLeft: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  BracketRight: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyA: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyS: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyD: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyF: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyG: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyH: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyJ: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyK: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyL: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  Semicolon: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  Quote: [/* ACUTE ACCENT */ 0x00b4, /* SMALL TILDE */ 0x02dc],\n  KeyZ: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyX: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  KeyC: [/* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LATIN CAPITAL LETTER U WITH DIAERESIS */ 0x00dc],\n  KeyV: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  KeyB: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN CAPITAL LETTER O WITH DIAERESIS */ 0x00d6],\n  KeyN: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyM: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  Comma: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  Period: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  Slash: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_DE_DE: CharacterDict = {\n  Backquote: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, /* DEGREE SIGN */ 0x00b0],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* SUPERSCRIPT TWO */ 0x00b2],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* SECTION SIGN */ 0x00a7, /* SUPERSCRIPT THREE */ 0x00b3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, /* LEFT SQUARE BRACKET */ 0x005b],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Minus: [/* LATIN SMALL LETTER SHARP S */ 0x00df, /* QUESTION MARK */ 0x003f, /* REVERSE SOLIDUS */ 0x005c, /* LATIN CAPITAL LETTER SHARP S */ 0x1e9e],\n  Equal: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* COMMERCIAL AT */ 0x0040],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LATIN CAPITAL LETTER U WITH DIAERESIS */ 0x00dc],\n  BracketRight: [/* PLUS SIGN */ 0x002b, /* ASTERISK */ 0x002a, /* TILDE */ 0x007e],\n  Backslash: [/* NUMBER SIGN */ 0x0023, /* APOSTROPHE */ 0x0027],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN CAPITAL LETTER O WITH DIAERESIS */ 0x00d6],\n  Quote: [/* LATIN SMALL LETTER A WITH DIAERESIS */ 0x00e4, /* LATIN CAPITAL LETTER A WITH DIAERESIS */ 0x00c4],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, /* MICRO SIGN */ 0x00b5],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_DE_MINE: CharacterDict = {\n  Backquote: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING CARON */ 0x030c }],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* DEGREE SIGN */ 0x00b0],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* SECTION SIGN */ 0x00a7],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* SCRIPT SMALL L */ 0x2113],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* DOLLAR SIGN */ 0x0024],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* EURO SIGN */ 0x20ac],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT DOUBLE QUOTATION MARK */ 0x201c],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* EM DASH */ 0x2014],\n  Equal: [{ dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, { dead: /* COMBINING CEDILLA */ 0x0327 }, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  KeyQ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyW: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyE: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyR: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyT: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyY: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyU: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyI: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyO: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyP: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  BracketLeft: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  BracketRight: [/* LATIN SMALL LETTER SHARP S */ 0x00df, /* LATIN CAPITAL LETTER SHARP S */ 0x1e9e],\n  Backslash: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING TILDE */ 0x0303 }],\n  KeyA: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyF: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyG: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyH: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyL: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  Semicolon: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyZ: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LATIN CAPITAL LETTER U WITH DIAERESIS */ 0x00dc],\n  KeyV: [/* LATIN SMALL LETTER A WITH DIAERESIS */ 0x00e4, /* LATIN CAPITAL LETTER A WITH DIAERESIS */ 0x00c4],\n  KeyB: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN CAPITAL LETTER O WITH DIAERESIS */ 0x00d6],\n  KeyN: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyM: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  Comma: [/* COMMA */ 0x002c, /* EN DASH */ 0x2013],\n  Period: [/* FULL STOP */ 0x002e, /* BULLET */ 0x2022],\n  Slash: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_DE_NEO_2: CharacterDict = {\n  Backquote: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING CARON */ 0x030c }],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* DEGREE SIGN */ 0x00b0],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* SECTION SIGN */ 0x00a7],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* SCRIPT SMALL L */ 0x2113],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* DOLLAR SIGN */ 0x0024],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* EURO SIGN */ 0x20ac],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT DOUBLE QUOTATION MARK */ 0x201c],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* EM DASH */ 0x2014],\n  Equal: [{ dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, { dead: /* COMBINING CEDILLA */ 0x0327 }, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  KeyQ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyW: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyE: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyR: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyT: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyY: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyU: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyI: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyO: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyP: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  BracketLeft: [/* LATIN SMALL LETTER SHARP S */ 0x00df, /* LATIN CAPITAL LETTER SHARP S */ 0x1e9e],\n  BracketRight: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING TILDE */ 0x0303 }],\n  KeyA: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyS: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyD: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyF: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyG: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyH: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyL: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  Semicolon: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  Quote: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyZ: [/* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LATIN CAPITAL LETTER U WITH DIAERESIS */ 0x00dc],\n  KeyX: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN CAPITAL LETTER O WITH DIAERESIS */ 0x00d6],\n  KeyC: [/* LATIN SMALL LETTER A WITH DIAERESIS */ 0x00e4, /* LATIN CAPITAL LETTER A WITH DIAERESIS */ 0x00c4],\n  KeyV: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyB: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyN: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* EN DASH */ 0x2013],\n  Period: [/* FULL STOP */ 0x002e, /* BULLET */ 0x2022],\n  Slash: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_DE_NOTED: CharacterDict = {\n  Backquote: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING CARON */ 0x030c }],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* DEGREE SIGN */ 0x00b0],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* SECTION SIGN */ 0x00a7],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* SCRIPT SMALL L */ 0x2113],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* DOLLAR SIGN */ 0x0024],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* EURO SIGN */ 0x20ac],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT DOUBLE QUOTATION MARK */ 0x201c],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* EM DASH */ 0x2014],\n  Equal: [{ dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, { dead: /* COMBINING CEDILLA */ 0x0327 }, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  KeyQ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyW: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyE: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyR: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyT: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyY: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyU: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyI: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyO: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyP: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  BracketLeft: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  BracketRight: [/* LATIN SMALL LETTER SHARP S */ 0x00df, /* LATIN CAPITAL LETTER SHARP S */ 0x1e9e],\n  Backslash: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING TILDE */ 0x0303 }],\n  KeyA: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyF: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyG: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyH: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyJ: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyK: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyL: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  Semicolon: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyZ: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LATIN CAPITAL LETTER U WITH DIAERESIS */ 0x00dc],\n  KeyV: [/* LATIN SMALL LETTER A WITH DIAERESIS */ 0x00e4, /* LATIN CAPITAL LETTER A WITH DIAERESIS */ 0x00c4],\n  KeyB: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN CAPITAL LETTER O WITH DIAERESIS */ 0x00d6],\n  KeyN: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyM: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  Comma: [/* COMMA */ 0x002c, /* EN DASH */ 0x2013],\n  Period: [/* FULL STOP */ 0x002e, /* BULLET */ 0x2022],\n  Slash: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EL_GR: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040, /* SUPERSCRIPT TWO */ 0x00b2],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* SUPERSCRIPT THREE */ 0x00b3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* POUND SIGN */ 0x00a3],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* SECTION SIGN */ 0x00a7],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e, /* PILCROW SIGN */ 0x00b6],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a, /* CURRENCY SIGN */ 0x00a4],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028, /* BROKEN BAR */ 0x00a6],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029, /* DEGREE SIGN */ 0x00b0],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f, /* PLUS-MINUS SIGN */ 0x00b1],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b, /* VULGAR FRACTION ONE HALF */ 0x00bd],\n  KeyQ: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  KeyW: [/* GREEK SMALL LETTER FINAL SIGMA */ 0x03c2],\n  KeyE: [/* GREEK SMALL LETTER EPSILON */ 0x03b5, /* GREEK CAPITAL LETTER EPSILON */ 0x0395, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* GREEK SMALL LETTER RHO */ 0x03c1, /* GREEK CAPITAL LETTER RHO */ 0x03a1, /* REGISTERED SIGN */ 0x00ae],\n  KeyT: [/* GREEK SMALL LETTER TAU */ 0x03c4, /* GREEK CAPITAL LETTER TAU */ 0x03a4],\n  KeyY: [/* GREEK SMALL LETTER UPSILON */ 0x03c5, /* GREEK CAPITAL LETTER UPSILON */ 0x03a5, /* YEN SIGN */ 0x00a5],\n  KeyU: [/* GREEK SMALL LETTER THETA */ 0x03b8, /* GREEK CAPITAL LETTER THETA */ 0x0398],\n  KeyI: [/* GREEK SMALL LETTER IOTA */ 0x03b9, /* GREEK CAPITAL LETTER IOTA */ 0x0399],\n  KeyO: [/* GREEK SMALL LETTER OMICRON */ 0x03bf, /* GREEK CAPITAL LETTER OMICRON */ 0x039f],\n  KeyP: [/* GREEK SMALL LETTER PI */ 0x03c0, /* GREEK CAPITAL LETTER PI */ 0x03a0],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c, /* NOT SIGN */ 0x00ac],\n  KeyA: [/* GREEK SMALL LETTER ALPHA */ 0x03b1, /* GREEK CAPITAL LETTER ALPHA */ 0x0391],\n  KeyS: [/* GREEK SMALL LETTER SIGMA */ 0x03c3, /* GREEK CAPITAL LETTER SIGMA */ 0x03a3],\n  KeyD: [/* GREEK SMALL LETTER DELTA */ 0x03b4, /* GREEK CAPITAL LETTER DELTA */ 0x0394],\n  KeyF: [/* GREEK SMALL LETTER PHI */ 0x03c6, /* GREEK CAPITAL LETTER PHI */ 0x03a6],\n  KeyG: [/* GREEK SMALL LETTER GAMMA */ 0x03b3, /* GREEK CAPITAL LETTER GAMMA */ 0x0393],\n  KeyH: [/* GREEK SMALL LETTER ETA */ 0x03b7, /* GREEK CAPITAL LETTER ETA */ 0x0397],\n  KeyJ: [/* GREEK SMALL LETTER XI */ 0x03be, /* GREEK CAPITAL LETTER XI */ 0x039e],\n  KeyK: [/* GREEK SMALL LETTER KAPPA */ 0x03ba, /* GREEK CAPITAL LETTER KAPPA */ 0x039a],\n  KeyL: [/* GREEK SMALL LETTER LAMDA */ 0x03bb, /* GREEK CAPITAL LETTER LAMDA */ 0x039b],\n  Semicolon: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyZ: [/* GREEK SMALL LETTER ZETA */ 0x03b6, /* GREEK CAPITAL LETTER ZETA */ 0x0396],\n  KeyX: [/* GREEK SMALL LETTER CHI */ 0x03c7, /* GREEK CAPITAL LETTER CHI */ 0x03a7],\n  KeyC: [/* GREEK SMALL LETTER PSI */ 0x03c8, /* GREEK CAPITAL LETTER PSI */ 0x03a8, /* COPYRIGHT SIGN */ 0x00a9],\n  KeyV: [/* GREEK SMALL LETTER OMEGA */ 0x03c9, /* GREEK CAPITAL LETTER OMEGA */ 0x03a9],\n  KeyB: [/* GREEK SMALL LETTER BETA */ 0x03b2, /* GREEK CAPITAL LETTER BETA */ 0x0392],\n  KeyN: [/* GREEK SMALL LETTER NU */ 0x03bd, /* GREEK CAPITAL LETTER NU */ 0x039d],\n  KeyM: [/* GREEK SMALL LETTER MU */ 0x03bc, /* GREEK CAPITAL LETTER MU */ 0x039c],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_CANARY: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyW: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyE: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyY: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyU: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyI: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyH: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Semicolon: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyX: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyC: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyV: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyB: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyN: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyM: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  Comma: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Period: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Slash: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_CANARY_MATRIX: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyW: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyE: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyY: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyU: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyI: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Semicolon: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  Quote: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyX: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyC: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyV: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyB: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyN: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyM: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  Comma: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Period: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Slash: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_COLEMAK: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyY: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyU: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyI: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyO: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyP: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Semicolon: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_COLEMAK_DH_ANSI: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyY: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyU: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyI: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyO: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyP: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Semicolon: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyZ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyX: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyC: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyN: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyM: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_COLEMAK_DH_ANSI_WIDE: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  Digit8: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit9: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit0: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Minus: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Equal: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyY: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  KeyU: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyI: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  BracketLeft: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketRight: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyJ: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyK: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyL: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  Semicolon: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Quote: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  IntlBackslash: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyZ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyX: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyC: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyN: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  KeyM: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  Comma: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  Period: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Slash: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_COLEMAK_DH_ISO: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* NOT SIGN */ 0x00ac],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* POUND SIGN */ 0x00a3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyY: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyU: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyI: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyO: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyP: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* NUMBER SIGN */ 0x0023, /* TILDE */ 0x007e],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Semicolon: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  Quote: [/* APOSTROPHE */ 0x0027, /* COMMERCIAL AT */ 0x0040],\n  IntlBackslash: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyZ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyX: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyC: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyN: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyM: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_COLEMAK_DH_ISO_WIDE: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* NOT SIGN */ 0x00ac],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* POUND SIGN */ 0x00a3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  Digit8: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit9: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit0: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Minus: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Equal: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyY: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  KeyU: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyI: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  BracketLeft: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketRight: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Backslash: [/* APOSTROPHE */ 0x0027, /* COMMERCIAL AT */ 0x0040],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyJ: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyK: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyL: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  Semicolon: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Quote: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  IntlBackslash: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyZ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyX: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyC: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyN: [/* NUMBER SIGN */ 0x0023, /* TILDE */ 0x007e],\n  KeyM: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  Comma: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  Period: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Slash: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_COLEMAK_DH_MATRIX: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyY: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyU: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyI: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyO: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyP: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Semicolon: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyB: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyN: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyM: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_DVORAK: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  Equal: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyQ: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  KeyW: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  KeyE: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyY: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyU: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyI: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyO: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyP: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  BracketLeft: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  BracketRight: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyF: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyG: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyH: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyJ: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyK: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyL: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  Semicolon: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  Quote: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  KeyX: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyC: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyV: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyB: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyN: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  Period: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  Slash: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_DVORAK_PROG: CharacterDict = {\n  Backquote: [/* DOLLAR SIGN */ 0x0024, /* TILDE */ 0x007e],\n  Digit1: [/* AMPERSAND */ 0x0026, /* PERCENT SIGN */ 0x0025],\n  Digit2: [/* LEFT SQUARE BRACKET */ 0x005b, /* DIGIT SEVEN */ 0x0037],\n  Digit3: [/* LEFT CURLY BRACKET */ 0x007b, /* DIGIT FIVE */ 0x0035],\n  Digit4: [/* RIGHT CURLY BRACKET */ 0x007d, /* DIGIT THREE */ 0x0033],\n  Digit5: [/* LEFT PARENTHESIS */ 0x0028, /* DIGIT ONE */ 0x0031],\n  Digit6: [/* EQUALS SIGN */ 0x003d, /* DIGIT NINE */ 0x0039],\n  Digit7: [/* ASTERISK */ 0x002a, /* DIGIT ZERO */ 0x0030],\n  Digit8: [/* RIGHT PARENTHESIS */ 0x0029, /* DIGIT TWO */ 0x0032],\n  Digit9: [/* PLUS SIGN */ 0x002b, /* DIGIT FOUR */ 0x0034],\n  Digit0: [/* RIGHT SQUARE BRACKET */ 0x005d, /* DIGIT SIX */ 0x0036],\n  Minus: [/* EXCLAMATION MARK */ 0x0021, /* DIGIT EIGHT */ 0x0038],\n  Equal: [/* NUMBER SIGN */ 0x0023, /* GRAVE ACCENT */ 0x0060],\n  KeyQ: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  KeyW: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  KeyE: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyY: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyU: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyI: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyO: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyP: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  BracketLeft: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  BracketRight: [/* COMMERCIAL AT */ 0x0040, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyF: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyG: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyH: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyJ: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyK: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyL: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  Semicolon: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  Quote: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  KeyX: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyC: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyV: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyB: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyN: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  Period: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  Slash: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_ENGRAM: CharacterDict = {\n  Backquote: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* VERTICAL LINE */ 0x007c],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* EQUALS SIGN */ 0x003d],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* TILDE */ 0x007e],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* PLUS SIGN */ 0x002b],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* LESS-THAN SIGN */ 0x003c],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* GREATER-THAN SIGN */ 0x003e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* AMPERSAND */ 0x0026],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* PERCENT SIGN */ 0x0025],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* ASTERISK */ 0x002a],\n  Minus: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Equal: [/* SOLIDUS */ 0x002f, /* REVERSE SOLIDUS */ 0x005c],\n  KeyQ: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyW: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyE: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyR: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyT: [/* APOSTROPHE */ 0x0027, /* LEFT PARENTHESIS */ 0x0028],\n  KeyY: [/* QUOTATION MARK */ 0x0022, /* RIGHT PARENTHESIS */ 0x0029],\n  KeyU: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyI: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyO: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyP: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  BracketLeft: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  BracketRight: [/* NUMBER SIGN */ 0x0023, /* DOLLAR SIGN */ 0x0024],\n  Backslash: [/* COMMERCIAL AT */ 0x0040, /* GRAVE ACCENT */ 0x0060],\n  KeyA: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyS: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyF: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyG: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  KeyH: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  KeyJ: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyK: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyL: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  Semicolon: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  Quote: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyV: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyB: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  KeyN: [/* QUESTION MARK */ 0x003f, /* EXCLAMATION MARK */ 0x0021],\n  KeyM: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  Comma: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Period: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  Slash: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_ENTHIUM_V6: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyE: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyR: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyT: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  KeyY: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyU: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyI: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyO: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyP: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyA: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyS: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyF: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyG: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  KeyH: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyJ: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyK: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyL: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  Semicolon: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  Quote: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyZ: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  KeyX: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  KeyC: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyV: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  KeyB: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  KeyN: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  Period: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  Slash: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  Space: [/* SPACE */ 0x0020],\n  CapsLock: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  ThumbClusterRight1: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_ENTHIUM_V10: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyW: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  KeyE: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyR: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  KeyT: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  KeyY: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyU: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyI: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyO: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyP: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyA: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyS: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyF: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyG: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  KeyH: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyJ: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyK: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyL: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  Semicolon: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  Quote: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyZ: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyX: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyC: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyV: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyB: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  KeyN: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyM: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Comma: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  Period: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  Slash: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  Space: [/* SPACE */ 0x0020],\n  CapsLock: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  ThumbClusterRight1: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_FOCAL: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyW: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyE: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyR: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyT: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyY: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyU: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyI: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyH: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyJ: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyK: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyL: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  Semicolon: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Quote: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyV: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyB: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyN: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  KeyM: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  Comma: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Period: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  Slash: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Space: [/* SPACE */ 0x0020],\n  ThumbClusterLeft1: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  ThumbClusterLeft2: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  ThumbClusterRight1: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_GALLIUM: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyW: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyE: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyR: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyT: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyY: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyU: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyI: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyF: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyJ: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyK: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyL: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  Semicolon: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Quote: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  KeyZ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyX: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyC: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyV: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyB: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyN: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyM: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  Comma: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  Period: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  Slash: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_GALLIUM_MATRIX: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyW: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyE: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyR: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyT: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyY: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyU: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyI: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyF: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyJ: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyK: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyL: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  Semicolon: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Quote: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  KeyZ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyX: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyC: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyV: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyB: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyN: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyM: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  Comma: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  Period: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  Slash: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_GRAPHITE: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  Equal: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyQ: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyW: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyE: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyR: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyT: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyY: [/* APOSTROPHE */ 0x0027, /* LOW LINE */ 0x005f],\n  KeyU: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyI: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  BracketLeft: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketRight: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyF: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyJ: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyK: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyL: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  Semicolon: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Quote: [/* COMMA */ 0x002c, /* QUESTION MARK */ 0x003f],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyV: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyB: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyN: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyM: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  Comma: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Period: [/* HYPHEN-MINUS */ 0x002d, /* QUOTATION MARK */ 0x0022],\n  Slash: [/* SOLIDUS */ 0x002f, /* LESS-THAN SIGN */ 0x003c],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_HALMAK: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LESS-THAN SIGN */ 0x003c],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* GREATER-THAN SIGN */ 0x003e],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyW: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyE: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyR: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyT: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyY: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  KeyU: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyI: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyO: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyP: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyS: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyD: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* COMMA */ 0x002c, /* LEFT PARENTHESIS */ 0x0028],\n  KeyH: [/* FULL STOP */ 0x002e, /* RIGHT PARENTHESIS */ 0x0029],\n  KeyJ: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  Semicolon: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyX: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyC: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyV: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyB: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  KeyN: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyM: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  Comma: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  Period: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  Slash: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_HANDS_DOWN_NEU: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Equal: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  KeyQ: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyW: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyE: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyY: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  KeyU: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  KeyI: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyO: [/* QUOTATION MARK */ 0x0022],\n  KeyP: [/* APOSTROPHE */ 0x0027],\n  BracketLeft: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  Backslash: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  KeyA: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyH: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  KeyJ: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Semicolon: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  Quote: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  IntlBackslash: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  KeyZ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyX: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyC: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyV: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyB: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyN: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  KeyM: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  Comma: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  Period: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  Slash: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_HANDS_DOWN_PROMETHIUM: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyW: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyE: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyR: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyT: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyY: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyO: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyP: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyA: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyS: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyD: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyF: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyG: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyH: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  KeyJ: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Semicolon: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  Quote: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  IntlBackslash: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  KeyZ: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyX: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyC: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyV: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyB: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyN: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  KeyM: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Comma: [/* APOSTROPHE */ 0x0027],\n  Period: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n  ThumbClusterLeft1: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  ThumbClusterRight1: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_MTGAP: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyZ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyP: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  Semicolon: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyK: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyQ: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyR: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyA: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyE: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyW: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyF: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyL: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyU: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyM: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  Comma: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyJ: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyT: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyY: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyI: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyB: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyX: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  Slash: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyO: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  Period: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyN: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyS: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyH: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyG: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  KeyV: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  KeyC: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_JA_JP_JIS: CharacterDict = {\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021, /* HIRAGANA LETTER NU */ 0x306c],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* HIRAGANA LETTER HU */ 0x3075],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* HIRAGANA LETTER A */ 0x3042, /* HIRAGANA LETTER SMALL A */ 0x3041],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* HIRAGANA LETTER U */ 0x3046, /* HIRAGANA LETTER SMALL U */ 0x3045],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* HIRAGANA LETTER E */ 0x3048, /* HIRAGANA LETTER SMALL E */ 0x3047],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026, /* HIRAGANA LETTER O */ 0x304a, /* HIRAGANA LETTER SMALL O */ 0x3049],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* APOSTROPHE */ 0x0027, /* HIRAGANA LETTER YA */ 0x3084, /* HIRAGANA LETTER SMALL YA */ 0x3083],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, /* HIRAGANA LETTER YU */ 0x3086, /* HIRAGANA LETTER SMALL YU */ 0x3085],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, /* HIRAGANA LETTER YO */ 0x3088, /* HIRAGANA LETTER SMALL YO */ 0x3087],\n  Digit0: [/* DIGIT ZERO */ 0x0030, null, /* HIRAGANA LETTER WA */ 0x308f, /* HIRAGANA LETTER WO */ 0x3092],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* EQUALS SIGN */ 0x003d, /* HIRAGANA LETTER HO */ 0x307b],\n  Equal: [/* CIRCUMFLEX ACCENT */ 0x005e, /* TILDE */ 0x007e, /* HIRAGANA LETTER HE */ 0x3078],\n  IntlYen: [/* YEN SIGN */ 0x00a5, /* LOW LINE */ 0x005f],\n  KeyQ: [/* LATIN CAPITAL LETTER Q */ 0x0051, /* LATIN SMALL LETTER Q */ 0x0071, /* HIRAGANA LETTER TA */ 0x305f],\n  KeyW: [/* LATIN CAPITAL LETTER W */ 0x0057, /* LATIN SMALL LETTER W */ 0x0077, /* HIRAGANA LETTER TE */ 0x3066],\n  KeyE: [/* LATIN CAPITAL LETTER E */ 0x0045, /* LATIN SMALL LETTER E */ 0x0065, /* HIRAGANA LETTER I */ 0x3044, /* HIRAGANA LETTER SMALL I */ 0x3043],\n  KeyR: [/* LATIN CAPITAL LETTER R */ 0x0052, /* LATIN SMALL LETTER R */ 0x0072, /* HIRAGANA LETTER SU */ 0x3059],\n  KeyT: [/* LATIN CAPITAL LETTER T */ 0x0054, /* LATIN SMALL LETTER T */ 0x0074, /* HIRAGANA LETTER KA */ 0x304b],\n  KeyY: [/* LATIN CAPITAL LETTER Y */ 0x0059, /* LATIN SMALL LETTER Y */ 0x0079, /* HIRAGANA LETTER N */ 0x3093],\n  KeyU: [/* LATIN CAPITAL LETTER U */ 0x0055, /* LATIN SMALL LETTER U */ 0x0075, /* HIRAGANA LETTER NA */ 0x306a],\n  KeyI: [/* LATIN CAPITAL LETTER I */ 0x0049, /* LATIN SMALL LETTER I */ 0x0069, /* HIRAGANA LETTER NI */ 0x306b],\n  KeyO: [/* LATIN CAPITAL LETTER O */ 0x004f, /* LATIN SMALL LETTER O */ 0x006f, /* HIRAGANA LETTER RA */ 0x3089],\n  KeyP: [/* LATIN CAPITAL LETTER P */ 0x0050, /* LATIN SMALL LETTER P */ 0x0070, /* HIRAGANA LETTER SE */ 0x305b],\n  BracketLeft: [/* COMMERCIAL AT */ 0x0040, /* GRAVE ACCENT */ 0x0060, /* KATAKANA-HIRAGANA VOICED SOUND MARK */ 0x309b],\n  BracketRight: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b, /* WHITE CIRCLE */ 0x25cb, /* LEFT CORNER BRACKET */ 0x300c],\n  Backslash: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d, /* HIRAGANA LETTER MU */ 0x3080, /* RIGHT CORNER BRACKET */ 0x300d],\n  KeyA: [/* LATIN CAPITAL LETTER A */ 0x0041, /* LATIN SMALL LETTER A */ 0x0061, /* HIRAGANA LETTER TI */ 0x3061],\n  KeyS: [/* LATIN CAPITAL LETTER S */ 0x0053, /* LATIN SMALL LETTER S */ 0x0073, /* HIRAGANA LETTER TO */ 0x3068],\n  KeyD: [/* LATIN CAPITAL LETTER D */ 0x0044, /* LATIN SMALL LETTER D */ 0x0064, /* HIRAGANA LETTER SI */ 0x3057],\n  KeyF: [/* LATIN CAPITAL LETTER F */ 0x0046, /* LATIN SMALL LETTER F */ 0x0066, /* HIRAGANA LETTER HA */ 0x306f],\n  KeyG: [/* LATIN CAPITAL LETTER G */ 0x0047, /* LATIN SMALL LETTER G */ 0x0067, /* HIRAGANA LETTER KI */ 0x304d],\n  KeyH: [/* LATIN CAPITAL LETTER H */ 0x0048, /* LATIN SMALL LETTER H */ 0x0068, /* HIRAGANA LETTER KU */ 0x304f],\n  KeyJ: [/* LATIN CAPITAL LETTER J */ 0x004a, /* LATIN SMALL LETTER J */ 0x006a, /* HIRAGANA LETTER MA */ 0x307e],\n  KeyK: [/* LATIN CAPITAL LETTER K */ 0x004b, /* LATIN SMALL LETTER K */ 0x006b, /* HIRAGANA LETTER NO */ 0x306e],\n  KeyL: [/* LATIN CAPITAL LETTER L */ 0x004c, /* LATIN SMALL LETTER L */ 0x006c, /* HIRAGANA LETTER RI */ 0x308a],\n  Semicolon: [/* SEMICOLON */ 0x003b, /* PLUS SIGN */ 0x002b, /* HIRAGANA LETTER RE */ 0x308c],\n  Quote: [/* COLON */ 0x003a, /* ASTERISK */ 0x002a, /* HIRAGANA LETTER KE */ 0x3051],\n  IntlBackslash: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d, /* HIRAGANA LETTER MU */ 0x3080, /* RIGHT CORNER BRACKET */ 0x300d],\n  KeyZ: [/* LATIN CAPITAL LETTER Z */ 0x005a, /* LATIN SMALL LETTER Z */ 0x007a, /* HIRAGANA LETTER TU */ 0x3064, /* HIRAGANA LETTER SMALL TU */ 0x3063],\n  KeyX: [/* LATIN CAPITAL LETTER X */ 0x0058, /* LATIN SMALL LETTER X */ 0x0078, /* HIRAGANA LETTER SA */ 0x3055],\n  KeyC: [/* LATIN CAPITAL LETTER C */ 0x0043, /* LATIN SMALL LETTER C */ 0x0063, /* HIRAGANA LETTER SO */ 0x305d],\n  KeyV: [/* LATIN CAPITAL LETTER V */ 0x0056, /* LATIN SMALL LETTER V */ 0x0076, /* HIRAGANA LETTER HI */ 0x3072],\n  KeyB: [/* LATIN CAPITAL LETTER B */ 0x0042, /* LATIN SMALL LETTER B */ 0x0062, /* HIRAGANA LETTER KO */ 0x3053],\n  KeyN: [/* LATIN CAPITAL LETTER N */ 0x004e, /* LATIN SMALL LETTER N */ 0x006e, /* HIRAGANA LETTER MI */ 0x307f],\n  KeyM: [/* LATIN CAPITAL LETTER M */ 0x004d, /* LATIN SMALL LETTER M */ 0x006d, /* HIRAGANA LETTER MO */ 0x3082],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c, /* HIRAGANA LETTER NE */ 0x306d, /* GRAVE ACCENT */ 0x0060],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e, /* HIRAGANA LETTER RU */ 0x308b, /* WHITE CIRCLE */ 0x25cb],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f, /* HIRAGANA LETTER ME */ 0x3081, /* BLACK CIRCLE */ 0x25cf],\n  IntlRo: [/* REVERSE SOLIDUS */ 0x005c, /* HIRAGANA LETTER RO */ 0x308d],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_NERPS: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyW: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyE: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyY: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyU: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyI: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyF: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyJ: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Semicolon: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  Quote: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyX: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyB: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyN: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyM: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  Comma: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  Period: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Slash: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_NERPS_MATRIX: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyW: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyE: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyY: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyU: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyI: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyF: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyG: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyH: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyJ: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Semicolon: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  Quote: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyX: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyC: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyV: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyB: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyN: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyM: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  Comma: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  Period: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Slash: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_NIGHT_MATRIX: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyW: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyE: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyR: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyT: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyY: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyU: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyI: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyH: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyJ: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyK: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyL: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  Semicolon: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyX: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyC: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyV: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyB: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyN: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  KeyM: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  Comma: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Period: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Slash: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Space: [/* SPACE */ 0x0020],\n  ThumbClusterLeft1: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  ThumbClusterLeft2: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  ThumbClusterRight1: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_NORMAN: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyR: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyT: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyY: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyO: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyP: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyL: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  Semicolon: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_STURDY: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Equal: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  KeyQ: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyW: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyE: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyR: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyT: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyY: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyU: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyI: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  BracketLeft: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  Backslash: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  KeyA: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyS: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyD: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyF: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyG: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyH: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyL: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  Semicolon: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Quote: [/* APOSTROPHE */ 0x0027],\n  IntlBackslash: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyC: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyV: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyB: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyN: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyM: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  Comma: [/* APOSTROPHE */ 0x0027],\n  Period: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  Slash: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_APTV3: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyW: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyE: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyR: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyT: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyY: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyU: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyI: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyF: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyG: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyH: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  Semicolon: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Quote: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyX: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyC: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyV: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyB: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyN: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyM: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Comma: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Period: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_UK: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* NOT SIGN */ 0x00ac, /* BROKEN BAR */ 0x00a6],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* POUND SIGN */ 0x00a3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* EURO SIGN */ 0x20ac],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* LATIN CAPITAL LETTER E WITH ACUTE */ 0x00c9],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055, /* LATIN SMALL LETTER U WITH ACUTE */ 0x00fa, /* LATIN CAPITAL LETTER U WITH ACUTE */ 0x00da],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049, /* LATIN SMALL LETTER I WITH ACUTE */ 0x00ed, /* LATIN CAPITAL LETTER I WITH ACUTE */ 0x00cd],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f, /* LATIN SMALL LETTER O WITH ACUTE */ 0x00f3, /* LATIN CAPITAL LETTER O WITH ACUTE */ 0x00d3],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* NUMBER SIGN */ 0x0023, /* TILDE */ 0x007e, /* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, /* LATIN SMALL LETTER A WITH ACUTE */ 0x00e1, /* LATIN CAPITAL LETTER A WITH ACUTE */ 0x00c1],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  Quote: [/* APOSTROPHE */ 0x0027, /* COMMERCIAL AT */ 0x0040],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_US: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_WORKMAN: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyE: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyR: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyT: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyY: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyU: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyI: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyO: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyP: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  Semicolon: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyV: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyB: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyN: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyM: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_ES_ES: CharacterDict = {\n  Backquote: [/* MASCULINE ORDINAL INDICATOR */ 0x00ba, /* FEMININE ORDINAL INDICATOR */ 0x00aa, /* REVERSE SOLIDUS */ 0x005c],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021, /* VERTICAL LINE */ 0x007c],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* MIDDLE DOT */ 0x00b7, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, { dead: /* COMBINING TILDE */ 0x0303 }],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* EURO SIGN */ 0x20ac],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026, /* NOT SIGN */ 0x00ac],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d],\n  Minus: [/* APOSTROPHE */ 0x0027, /* QUESTION MARK */ 0x003f],\n  Equal: [/* INVERTED EXCLAMATION MARK */ 0x00a1, /* INVERTED QUESTION MARK */ 0x00bf],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [{ dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, /* LEFT SQUARE BRACKET */ 0x005b],\n  BracketRight: [/* PLUS SIGN */ 0x002b, /* ASTERISK */ 0x002a, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Backslash: [/* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* LATIN CAPITAL LETTER C WITH CEDILLA */ 0x00c7, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER N WITH TILDE */ 0x00f1, /* LATIN CAPITAL LETTER N WITH TILDE */ 0x00d1],\n  Quote: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING DIAERESIS */ 0x0308 }, /* LEFT CURLY BRACKET */ 0x007b],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_ES_MX: CharacterDict = {\n  Backquote: [/* VERTICAL LINE */ 0x007c, /* DEGREE SIGN */ 0x00b0, /* NOT SIGN */ 0x00ac],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d],\n  Minus: [/* APOSTROPHE */ 0x0027, /* QUESTION MARK */ 0x003f, /* REVERSE SOLIDUS */ 0x005c],\n  Equal: [/* INVERTED QUESTION MARK */ 0x00bf, /* INVERTED EXCLAMATION MARK */ 0x00a1],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* COMMERCIAL AT */ 0x0040],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  BracketRight: [/* PLUS SIGN */ 0x002b, /* ASTERISK */ 0x002a, /* TILDE */ 0x007e],\n  Backslash: [/* RIGHT CURLY BRACKET */ 0x007d, /* RIGHT SQUARE BRACKET */ 0x005d, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER N WITH TILDE */ 0x00f1, /* LATIN CAPITAL LETTER N WITH TILDE */ 0x00d1],\n  Quote: [/* LEFT CURLY BRACKET */ 0x007b, /* LEFT SQUARE BRACKET */ 0x005b, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_FA_IR: CharacterDict = {\n  Backquote: [{ special: /* ZERO WIDTH JOINER */ 0x200d }, { special: /* ZERO WIDTH JOINER */ 0x200d }],\n  Digit1: [/* EXTENDED ARABIC-INDIC DIGIT ONE */ 0x06f1, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* EXTENDED ARABIC-INDIC DIGIT TWO */ 0x06f2, /* ARABIC THOUSANDS SEPARATOR */ 0x066c],\n  Digit3: [/* EXTENDED ARABIC-INDIC DIGIT THREE */ 0x06f3, /* ARABIC DECIMAL SEPARATOR */ 0x066b],\n  Digit4: [/* EXTENDED ARABIC-INDIC DIGIT FOUR */ 0x06f4, { ligature: \"ریال\" }],\n  Digit5: [/* EXTENDED ARABIC-INDIC DIGIT FIVE */ 0x06f5, /* ARABIC PERCENT SIGN */ 0x066a],\n  Digit6: [/* EXTENDED ARABIC-INDIC DIGIT SIX */ 0x06f6, /* MULTIPLICATION SIGN */ 0x00d7],\n  Digit7: [/* EXTENDED ARABIC-INDIC DIGIT SEVEN */ 0x06f7, /* ARABIC COMMA */ 0x060c],\n  Digit8: [/* EXTENDED ARABIC-INDIC DIGIT EIGHT */ 0x06f8, /* ASTERISK */ 0x002a],\n  Digit9: [/* EXTENDED ARABIC-INDIC DIGIT NINE */ 0x06f9, /* RIGHT PARENTHESIS */ 0x0029],\n  Digit0: [/* EXTENDED ARABIC-INDIC DIGIT ZERO */ 0x06f0, /* LEFT PARENTHESIS */ 0x0028],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* ARABIC TATWEEL */ 0x0640],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* ARABIC LETTER DAD */ 0x0636, /* ARABIC SUKUN */ 0x0652],\n  KeyW: [/* ARABIC LETTER SAD */ 0x0635, /* ARABIC DAMMATAN */ 0x064c],\n  KeyE: [/* ARABIC LETTER THEH */ 0x062b, /* ARABIC KASRATAN */ 0x064d],\n  KeyR: [/* ARABIC LETTER QAF */ 0x0642, /* ARABIC FATHATAN */ 0x064b],\n  KeyT: [/* ARABIC LETTER FEH */ 0x0641, /* ARABIC DAMMA */ 0x064f],\n  KeyY: [/* ARABIC LETTER GHAIN */ 0x063a, /* ARABIC KASRA */ 0x0650],\n  KeyU: [/* ARABIC LETTER AIN */ 0x0639, /* ARABIC FATHA */ 0x064e],\n  KeyI: [/* ARABIC LETTER HEH */ 0x0647, /* ARABIC SHADDA */ 0x0651],\n  KeyO: [/* ARABIC LETTER KHAH */ 0x062e, /* RIGHT SQUARE BRACKET */ 0x005d],\n  KeyP: [/* ARABIC LETTER HAH */ 0x062d, /* LEFT SQUARE BRACKET */ 0x005b],\n  BracketLeft: [/* ARABIC LETTER JEEM */ 0x062c, /* RIGHT CURLY BRACKET */ 0x007d],\n  BracketRight: [/* ARABIC LETTER TCHEH */ 0x0686, /* LEFT CURLY BRACKET */ 0x007b],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* ARABIC LETTER SHEEN */ 0x0634, /* ARABIC LETTER WAW WITH HAMZA ABOVE */ 0x0624],\n  KeyS: [/* ARABIC LETTER SEEN */ 0x0633, /* ARABIC LETTER YEH WITH HAMZA ABOVE */ 0x0626],\n  KeyD: [/* ARABIC LETTER FARSI YEH */ 0x06cc, /* ARABIC LETTER YEH */ 0x064a],\n  KeyF: [/* ARABIC LETTER BEH */ 0x0628, /* ARABIC LETTER ALEF WITH HAMZA BELOW */ 0x0625],\n  KeyG: [/* ARABIC LETTER LAM */ 0x0644, /* ARABIC LETTER ALEF WITH HAMZA ABOVE */ 0x0623],\n  KeyH: [/* ARABIC LETTER ALEF */ 0x0627, /* ARABIC LETTER ALEF WITH MADDA ABOVE */ 0x0622],\n  KeyJ: [/* ARABIC LETTER TEH */ 0x062a, /* ARABIC LETTER TEH MARBUTA */ 0x0629],\n  KeyK: [/* ARABIC LETTER NOON */ 0x0646, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb],\n  KeyL: [/* ARABIC LETTER MEEM */ 0x0645, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab],\n  Semicolon: [/* ARABIC LETTER KEHEH */ 0x06a9, /* COLON */ 0x003a],\n  Quote: [/* ARABIC LETTER GAF */ 0x06af, /* ARABIC SEMICOLON */ 0x061b],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* ARABIC LETTER ZAH */ 0x0638, /* ARABIC LETTER KAF */ 0x0643],\n  KeyX: [/* ARABIC LETTER TAH */ 0x0637, /* ARABIC LETTER TAH */ 0x0637],\n  KeyC: [/* ARABIC LETTER ZAIN */ 0x0632, /* ARABIC LETTER JEH */ 0x0698],\n  KeyV: [/* ARABIC LETTER REH */ 0x0631, /* ARABIC LETTER SUPERSCRIPT ALEF */ 0x0670],\n  KeyB: [/* ARABIC LETTER THAL */ 0x0630, { special: /* ZERO WIDTH NON-JOINER */ 0x200c }],\n  KeyN: [/* ARABIC LETTER DAL */ 0x062f, /* ARABIC HAMZA ABOVE */ 0x0654],\n  KeyM: [/* ARABIC LETTER PEH */ 0x067e, /* ARABIC LETTER HAMZA */ 0x0621],\n  Comma: [/* ARABIC LETTER WAW */ 0x0648, /* GREATER-THAN SIGN */ 0x003e],\n  Period: [/* FULL STOP */ 0x002e, /* LESS-THAN SIGN */ 0x003c],\n  Slash: [/* SOLIDUS */ 0x002f, /* ARABIC QUESTION MARK */ 0x061f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_FA_IR_LEGACY: CharacterDict = {\n  Backquote: [/* DIVISION SIGN */ 0x00f7, /* MULTIPLICATION SIGN */ 0x00d7],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* LEFT PARENTHESIS */ 0x0028],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* ARABIC LETTER DAD */ 0x0636, /* ARABIC FATHATAN */ 0x064b],\n  KeyW: [/* ARABIC LETTER SAD */ 0x0635, /* ARABIC DAMMATAN */ 0x064c],\n  KeyE: [/* ARABIC LETTER THEH */ 0x062b, /* ARABIC KASRATAN */ 0x064d],\n  KeyR: [/* ARABIC LETTER QAF */ 0x0642, { ligature: \"ريال\" }],\n  KeyT: [/* ARABIC LETTER FEH */ 0x0641, /* ARABIC COMMA */ 0x060c],\n  KeyY: [/* ARABIC LETTER GHAIN */ 0x063a, /* ARABIC SEMICOLON */ 0x061b],\n  KeyU: [/* ARABIC LETTER AIN */ 0x0639, /* COMMA */ 0x002c],\n  KeyI: [/* ARABIC LETTER HEH */ 0x0647, /* RIGHT SQUARE BRACKET */ 0x005d],\n  KeyO: [/* ARABIC LETTER KHAH */ 0x062e, /* LEFT SQUARE BRACKET */ 0x005b],\n  KeyP: [/* ARABIC LETTER HAH */ 0x062d, /* REVERSE SOLIDUS */ 0x005c],\n  BracketLeft: [/* ARABIC LETTER JEEM */ 0x062c, /* RIGHT CURLY BRACKET */ 0x007d],\n  BracketRight: [/* ARABIC LETTER TCHEH */ 0x0686, /* LEFT CURLY BRACKET */ 0x007b],\n  Backslash: [/* ARABIC LETTER PEH */ 0x067e, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* ARABIC LETTER SHEEN */ 0x0634, /* ARABIC FATHA */ 0x064e],\n  KeyS: [/* ARABIC LETTER SEEN */ 0x0633, /* ARABIC DAMMA */ 0x064f],\n  KeyD: [/* ARABIC LETTER FARSI YEH */ 0x06cc, /* ARABIC KASRA */ 0x0650],\n  KeyF: [/* ARABIC LETTER BEH */ 0x0628, /* ARABIC SHADDA */ 0x0651],\n  KeyG: [/* ARABIC LETTER LAM */ 0x0644, /* ARABIC LETTER HEH WITH YEH ABOVE */ 0x06c0],\n  KeyH: [/* ARABIC LETTER ALEF */ 0x0627, /* ARABIC LETTER ALEF WITH MADDA ABOVE */ 0x0622],\n  KeyJ: [/* ARABIC LETTER TEH */ 0x062a, /* ARABIC TATWEEL */ 0x0640],\n  KeyK: [/* ARABIC LETTER NOON */ 0x0646, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab],\n  KeyL: [/* ARABIC LETTER MEEM */ 0x0645, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb],\n  Semicolon: [/* ARABIC LETTER KEHEH */ 0x06a9, /* COLON */ 0x003a],\n  Quote: [/* ARABIC LETTER GAF */ 0x06af, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* ARABIC LETTER PEH */ 0x067e, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* ARABIC LETTER ZAH */ 0x0638, /* ARABIC LETTER TEH MARBUTA */ 0x0629],\n  KeyX: [/* ARABIC LETTER TAH */ 0x0637, /* ARABIC LETTER YEH */ 0x064a],\n  KeyC: [/* ARABIC LETTER ZAIN */ 0x0632, /* ARABIC LETTER JEH */ 0x0698],\n  KeyV: [/* ARABIC LETTER REH */ 0x0631, /* ARABIC LETTER WAW WITH HAMZA ABOVE */ 0x0624],\n  KeyB: [/* ARABIC LETTER THAL */ 0x0630, /* ARABIC LETTER ALEF WITH HAMZA BELOW */ 0x0625],\n  KeyN: [/* ARABIC LETTER DAL */ 0x062f, /* ARABIC LETTER ALEF WITH HAMZA ABOVE */ 0x0623],\n  KeyM: [/* ARABIC LETTER YEH WITH HAMZA ABOVE */ 0x0626, /* ARABIC LETTER HAMZA */ 0x0621],\n  Comma: [/* ARABIC LETTER WAW */ 0x0648, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SOLIDUS */ 0x002f, /* ARABIC QUESTION MARK */ 0x061f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_FR_BEPO: CharacterDict = {\n  Backquote: [/* DOLLAR SIGN */ 0x0024, /* NUMBER SIGN */ 0x0023, /* EN DASH */ 0x2013],\n  Digit1: [/* QUOTATION MARK */ 0x0022, /* DIGIT ONE */ 0x0031, /* EM DASH */ 0x2014, /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e],\n  Digit2: [/* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab, /* DIGIT TWO */ 0x0032, /* LESS-THAN SIGN */ 0x003c, /* LEFT DOUBLE QUOTATION MARK */ 0x201c],\n  Digit3: [/* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb, /* DIGIT THREE */ 0x0033, /* GREATER-THAN SIGN */ 0x003e, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d],\n  Digit4: [/* LEFT PARENTHESIS */ 0x0028, /* DIGIT FOUR */ 0x0034, /* LEFT SQUARE BRACKET */ 0x005b, /* LESS-THAN OR EQUAL TO */ 0x2264],\n  Digit5: [/* RIGHT PARENTHESIS */ 0x0029, /* DIGIT FIVE */ 0x0035, /* RIGHT SQUARE BRACKET */ 0x005d, /* GREATER-THAN OR EQUAL TO */ 0x2265],\n  Digit6: [/* COMMERCIAL AT */ 0x0040, /* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* PLUS SIGN */ 0x002b, /* DIGIT SEVEN */ 0x0037, /* PLUS-MINUS SIGN */ 0x00b1, /* NOT SIGN */ 0x00ac],\n  Digit8: [/* HYPHEN-MINUS */ 0x002d, /* DIGIT EIGHT */ 0x0038, /* MINUS SIGN */ 0x2212, /* VULGAR FRACTION ONE QUARTER */ 0x00bc],\n  Digit9: [/* SOLIDUS */ 0x002f, /* DIGIT NINE */ 0x0039, /* DIVISION SIGN */ 0x00f7, /* VULGAR FRACTION ONE HALF */ 0x00bd],\n  Digit0: [/* ASTERISK */ 0x002a, /* DIGIT ZERO */ 0x0030, /* MULTIPLICATION SIGN */ 0x00d7, /* VULGAR FRACTION THREE QUARTERS */ 0x00be],\n  Minus: [/* EQUALS SIGN */ 0x003d, /* DEGREE SIGN */ 0x00b0, /* NOT EQUAL TO */ 0x2260],\n  Equal: [/* PERCENT SIGN */ 0x0025, /* GRAVE ACCENT */ 0x0060, /* PER MILLE SIGN */ 0x2030],\n  KeyQ: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042, /* VERTICAL LINE */ 0x007c, /* BROKEN BAR */ 0x00a6],\n  KeyW: [/* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* LATIN CAPITAL LETTER E WITH ACUTE */ 0x00c9, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  KeyE: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050, /* AMPERSAND */ 0x0026, /* SECTION SIGN */ 0x00a7],\n  KeyR: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f, /* LATIN SMALL LIGATURE OE */ 0x0153, /* LATIN CAPITAL LIGATURE OE */ 0x0152],\n  KeyT: [/* LATIN SMALL LETTER E WITH GRAVE */ 0x00e8, /* LATIN CAPITAL LETTER E WITH GRAVE */ 0x00c8, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  KeyY: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, /* EXCLAMATION MARK */ 0x0021, /* INVERTED EXCLAMATION MARK */ 0x00a1],\n  KeyU: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyI: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyO: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyP: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  BracketLeft: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  BracketRight: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  Backslash: [/* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* LATIN CAPITAL LETTER C WITH CEDILLA */ 0x00c7],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, /* LATIN SMALL LETTER AE */ 0x00e6, /* LATIN CAPITAL LETTER AE */ 0x00c6],\n  KeyS: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055, /* LATIN SMALL LETTER U WITH GRAVE */ 0x00f9, /* LATIN CAPITAL LETTER U WITH GRAVE */ 0x00d9],\n  KeyD: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  KeyF: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyG: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  KeyH: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyJ: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyK: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* LATIN SMALL LETTER SHARP S */ 0x00df, /* LATIN CAPITAL LETTER SHARP S */ 0x1e9e],\n  KeyL: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  Semicolon: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e, { dead: /* COMBINING TILDE */ 0x0303 }],\n  Quote: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  IntlBackslash: [/* LATIN SMALL LETTER E WITH CIRCUMFLEX */ 0x00ea, /* LATIN CAPITAL LETTER E WITH CIRCUMFLEX */ 0x00ca, /* SOLIDUS */ 0x002f],\n  KeyZ: [/* LATIN SMALL LETTER A WITH GRAVE */ 0x00e0, /* LATIN CAPITAL LETTER A WITH GRAVE */ 0x00c0, /* REVERSE SOLIDUS */ 0x005c],\n  KeyX: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059, /* LEFT CURLY BRACKET */ 0x007b],\n  KeyC: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyV: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* HORIZONTAL ELLIPSIS */ 0x2026, /* MIDDLE DOT */ 0x00b7],\n  KeyB: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b, /* TILDE */ 0x007e],\n  KeyN: [/* APOSTROPHE */ 0x0027, /* QUESTION MARK */ 0x003f, /* INVERTED QUESTION MARK */ 0x00bf],\n  KeyM: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  Comma: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  Period: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  Slash: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_FR_CA: CharacterDict = {\n  Backquote: [/* NUMBER SIGN */ 0x0023, /* VERTICAL LINE */ 0x007c, /* REVERSE SOLIDUS */ 0x005c],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021, /* PLUS-MINUS SIGN */ 0x00b1],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* SOLIDUS */ 0x002f, /* POUND SIGN */ 0x00a3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* CENT SIGN */ 0x00a2],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* CURRENCY SIGN */ 0x00a4],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* QUESTION MARK */ 0x003f, /* NOT SIGN */ 0x00ac],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026, /* BROKEN BAR */ 0x00a6],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a, /* SUPERSCRIPT TWO */ 0x00b2],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028, /* SUPERSCRIPT THREE */ 0x00b3],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029, /* VULGAR FRACTION ONE QUARTER */ 0x00bc],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f, /* VULGAR FRACTION ONE HALF */ 0x00bd],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b, /* VULGAR FRACTION THREE QUARTERS */ 0x00be],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f, /* SECTION SIGN */ 0x00a7],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050, /* PILCROW SIGN */ 0x00b6],\n  BracketLeft: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, /* LEFT SQUARE BRACKET */ 0x005b],\n  BracketRight: [{ dead: /* COMBINING CEDILLA */ 0x0327 }, { dead: /* COMBINING DIAERESIS */ 0x0308 }, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Backslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a, /* TILDE */ 0x007e],\n  Quote: [{ dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, /* LEFT CURLY BRACKET */ 0x007b],\n  IntlBackslash: [/* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb, /* DEGREE SIGN */ 0x00b0],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, /* MICRO SIGN */ 0x00b5],\n  Comma: [/* COMMA */ 0x002c, /* APOSTROPHE */ 0x0027, /* MACRON */ 0x00af],\n  Period: [/* FULL STOP */ 0x002e, /* FULL STOP */ 0x002e, /* SOFT HYPHEN */ 0x00ad],\n  Slash: [/* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* LATIN CAPITAL LETTER E WITH ACUTE */ 0x00c9, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_FR_CH: CharacterDict = {\n  Backquote: [/* SECTION SIGN */ 0x00a7, /* DEGREE SIGN */ 0x00b0],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* PLUS SIGN */ 0x002b, /* BROKEN BAR */ 0x00a6],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* ASTERISK */ 0x002a, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* DEGREE SIGN */ 0x00b0],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* SECTION SIGN */ 0x00a7],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026, /* NOT SIGN */ 0x00ac],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f, /* VERTICAL LINE */ 0x007c],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, /* CENT SIGN */ 0x00a2],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d],\n  Minus: [/* APOSTROPHE */ 0x0027, /* QUESTION MARK */ 0x003f, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  Equal: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, { dead: /* COMBINING TILDE */ 0x0303 }],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER E WITH GRAVE */ 0x00e8, /* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LEFT SQUARE BRACKET */ 0x005b],\n  BracketRight: [{ dead: /* COMBINING DIAERESIS */ 0x0308 }, /* EXCLAMATION MARK */ 0x0021, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Backslash: [/* DOLLAR SIGN */ 0x0024, /* POUND SIGN */ 0x00a3, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6],\n  Quote: [/* LATIN SMALL LETTER A WITH GRAVE */ 0x00e0, /* LATIN SMALL LETTER A WITH DIAERESIS */ 0x00e4, /* LEFT CURLY BRACKET */ 0x007b],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e, /* REVERSE SOLIDUS */ 0x005c],\n  KeyZ: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_FR_ERGLACE: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021, /* SUBSCRIPT ONE */ 0x2081, /* SUPERSCRIPT ONE */ 0x00b9],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040, /* SUBSCRIPT TWO */ 0x2082, /* SUPERSCRIPT TWO */ 0x00b2],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* SUBSCRIPT THREE */ 0x2083, /* SUPERSCRIPT THREE */ 0x00b3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* SUBSCRIPT FOUR */ 0x2084, /* SUPERSCRIPT FOUR */ 0x2074],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* SUBSCRIPT FIVE */ 0x2085, /* SUPERSCRIPT FIVE */ 0x2075],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e, /* SUBSCRIPT SIX */ 0x2086, /* SUPERSCRIPT SIX */ 0x2076],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026, /* SUBSCRIPT SEVEN */ 0x2087, /* SUPERSCRIPT SEVEN */ 0x2077],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a, /* SUBSCRIPT EIGHT */ 0x2088, /* SUPERSCRIPT EIGHT */ 0x2078],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028, /* SUBSCRIPT NINE */ 0x2089, /* SUPERSCRIPT NINE */ 0x2079],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029, /* SUBSCRIPT ZERO */ 0x2080, /* SUPERSCRIPT ZERO */ 0x2070],\n  Minus: [/* SOLIDUS */ 0x002f, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059, /* COMMERCIAL AT */ 0x0040],\n  KeyW: [{ dead: /* ASTERISK */ 0x002a }, { dead: /* ASTERISK */ 0x002a }, /* LESS-THAN SIGN */ 0x003c, /* LESS-THAN OR EQUAL TO */ 0x2264],\n  KeyE: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f, /* GREATER-THAN SIGN */ 0x003e, /* GREATER-THAN OR EQUAL TO */ 0x2265],\n  KeyR: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046, /* DOLLAR SIGN */ 0x0024],\n  KeyT: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b, /* PERCENT SIGN */ 0x0025, /* PER MILLE SIGN */ 0x2030],\n  KeyY: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056, /* CIRCUMFLEX ACCENT */ 0x005e, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }],\n  KeyU: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050, /* AMPERSAND */ 0x0026],\n  KeyI: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c, /* ASTERISK */ 0x002a, /* MULTIPLICATION SIGN */ 0x00d7],\n  KeyO: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, /* APOSTROPHE */ 0x0027, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  KeyP: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* GRAVE ACCENT */ 0x0060, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049, /* LEFT CURLY BRACKET */ 0x007b],\n  KeyS: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, /* LEFT PARENTHESIS */ 0x0028, /* SUPERSCRIPT LEFT PARENTHESIS */ 0x207d],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* RIGHT PARENTHESIS */ 0x0029, /* SUPERSCRIPT RIGHT PARENTHESIS */ 0x207e],\n  KeyF: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyG: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b, /* EQUALS SIGN */ 0x003d, /* NOT EQUAL TO */ 0x2260],\n  KeyH: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047, /* REVERSE SOLIDUS */ 0x005c],\n  KeyJ: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054, /* PLUS SIGN */ 0x002b, /* PLUS-MINUS SIGN */ 0x00b1],\n  KeyK: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e, /* HYPHEN-MINUS */ 0x002d, /* EM DASH */ 0x2014],\n  KeyL: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* SOLIDUS */ 0x002f, /* DIVISION SIGN */ 0x00f7],\n  Semicolon: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052, /* QUOTATION MARK */ 0x0022, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyZ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a, /* TILDE */ 0x007e, { dead: /* COMBINING TILDE */ 0x0303 }],\n  KeyX: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* LEFT SQUARE BRACKET */ 0x005b],\n  KeyC: [/* HYPHEN-MINUS */ 0x002d, /* QUESTION MARK */ 0x003f, /* RIGHT SQUARE BRACKET */ 0x005d],\n  KeyV: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048, /* LOW LINE */ 0x005f, /* EN DASH */ 0x2013],\n  KeyB: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a, /* NUMBER SIGN */ 0x0023],\n  KeyN: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042, /* VERTICAL LINE */ 0x007c, /* BROKEN BAR */ 0x00a6],\n  KeyM: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044, /* EXCLAMATION MARK */ 0x0021, /* NOT SIGN */ 0x00ac],\n  Comma: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, /* SEMICOLON */ 0x003b, { dead: /* COMBINING CEDILLA */ 0x0327 }],\n  Period: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057, /* COLON */ 0x003a],\n  Slash: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_FR_ERGO_L: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EURO SIGN */ 0x20ac, /* SUBSCRIPT ONE */ 0x2081, /* SUPERSCRIPT ONE */ 0x00b9],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab, /* SUBSCRIPT TWO */ 0x2082, /* SUPERSCRIPT TWO */ 0x00b2],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb, /* SUBSCRIPT THREE */ 0x2083, /* SUPERSCRIPT THREE */ 0x00b3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* SUBSCRIPT FOUR */ 0x2084, /* SUPERSCRIPT FOUR */ 0x2074],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* SUBSCRIPT FIVE */ 0x2085, /* SUPERSCRIPT FIVE */ 0x2075],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e, /* SUBSCRIPT SIX */ 0x2086, /* SUPERSCRIPT SIX */ 0x2076],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026, /* SUBSCRIPT SEVEN */ 0x2087, /* SUPERSCRIPT SEVEN */ 0x2077],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a, /* SUBSCRIPT EIGHT */ 0x2088, /* SUPERSCRIPT EIGHT */ 0x2078],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* NUMBER SIGN */ 0x0023, /* SUBSCRIPT NINE */ 0x2089, /* SUPERSCRIPT NINE */ 0x2079],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* COMMERCIAL AT */ 0x0040, /* SUBSCRIPT ZERO */ 0x2080, /* SUPERSCRIPT ZERO */ 0x2070],\n  Minus: [/* SOLIDUS */ 0x002f, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* CIRCUMFLEX ACCENT */ 0x005e, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }],\n  KeyW: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, /* LESS-THAN SIGN */ 0x003c, /* LESS-THAN OR EQUAL TO */ 0x2264],\n  KeyE: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f, /* GREATER-THAN SIGN */ 0x003e, /* GREATER-THAN OR EQUAL TO */ 0x2265],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050, /* DOLLAR SIGN */ 0x0024],\n  KeyT: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057, /* PERCENT SIGN */ 0x0025, /* PER MILLE SIGN */ 0x2030],\n  KeyY: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a, /* COMMERCIAL AT */ 0x0040],\n  KeyU: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, /* AMPERSAND */ 0x0026],\n  KeyI: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044, /* ASTERISK */ 0x002a, /* MULTIPLICATION SIGN */ 0x00d7],\n  KeyO: [{ dead: /* ASTERISK */ 0x002a }, /* EXCLAMATION MARK */ 0x0021, /* APOSTROPHE */ 0x0027, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  KeyP: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059, /* GRAVE ACCENT */ 0x0060, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, /* LEFT CURLY BRACKET */ 0x007b, { dead: /* COMBINING CARON */ 0x030c }],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* LEFT PARENTHESIS */ 0x0028],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* RIGHT PARENTHESIS */ 0x0029],\n  KeyF: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e, /* RIGHT CURLY BRACKET */ 0x007d, { dead: /* COMBINING DOT ABOVE */ 0x0307 }],\n  KeyG: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046, /* EQUALS SIGN */ 0x003d, /* NOT EQUAL TO */ 0x2260],\n  KeyH: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c, /* REVERSE SOLIDUS */ 0x005c],\n  KeyJ: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052, /* PLUS SIGN */ 0x002b, /* PLUS-MINUS SIGN */ 0x00b1],\n  KeyK: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054, /* HYPHEN-MINUS */ 0x002d, { dead: /* COMBINING MACRON */ 0x0304 }],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049, /* SOLIDUS */ 0x002f, /* DIVISION SIGN */ 0x00f7],\n  Semicolon: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055, /* QUOTATION MARK */ 0x0022],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a, /* TILDE */ 0x007e, { dead: /* COMBINING TILDE */ 0x0303 }],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, /* LEFT SQUARE BRACKET */ 0x005b],\n  KeyC: [/* HYPHEN-MINUS */ 0x002d, /* QUESTION MARK */ 0x003f, /* RIGHT SQUARE BRACKET */ 0x005d, { dead: /* COMBINING OGONEK */ 0x0328 }],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056, /* LOW LINE */ 0x005f, /* EN DASH */ 0x2013],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042, /* NUMBER SIGN */ 0x0023],\n  KeyN: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* VERTICAL LINE */ 0x007c, /* BROKEN BAR */ 0x00a6],\n  KeyM: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048, /* EXCLAMATION MARK */ 0x0021, /* NOT SIGN */ 0x00ac],\n  Comma: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047, /* SEMICOLON */ 0x003b, { dead: /* COMBINING CEDILLA */ 0x0327 }],\n  Period: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b, /* COLON */ 0x003a, /* COLON */ 0x003a],\n  Slash: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b, /* QUESTION MARK */ 0x003f, { dead: /* COMBINING BREVE */ 0x0306 }],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_FR_ERGOPTI: CharacterDict = {\n  Backquote: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b, /* RIGHT CURLY BRACKET */ 0x007d],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* DIGIT ONE */ 0x0031, /* DIGIT ONE */ 0x0031, /* DIGIT ONE */ 0x0031],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* DIGIT TWO */ 0x0032, /* DIGIT TWO */ 0x0032, /* DIGIT TWO */ 0x0032],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* DIGIT THREE */ 0x0033, /* DIGIT THREE */ 0x0033, /* DIGIT THREE */ 0x0033],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DIGIT FOUR */ 0x0034, /* DIGIT FOUR */ 0x0034, /* DIGIT FOUR */ 0x0034],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* DIGIT FIVE */ 0x0035, /* DIGIT FIVE */ 0x0035, /* DIGIT FIVE */ 0x0035],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* DIGIT SIX */ 0x0036, /* DIGIT SIX */ 0x0036, /* DIGIT SIX */ 0x0036],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* DIGIT SEVEN */ 0x0037, /* DIGIT SEVEN */ 0x0037, /* DIGIT SEVEN */ 0x0037],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* DIGIT EIGHT */ 0x0038, /* DIGIT EIGHT */ 0x0038, /* DIGIT EIGHT */ 0x0038],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* DIGIT NINE */ 0x0039, /* DIGIT NINE */ 0x0039, /* DIGIT NINE */ 0x0039],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* MASCULINE ORDINAL INDICATOR */ 0x00ba, /* DEGREE SIGN */ 0x00b0, /* FEMININE ORDINAL INDICATOR */ 0x00aa],\n  Minus: [/* EURO SIGN */ 0x20ac, /* EURO SIGN */ 0x20ac, /* POUND SIGN */ 0x00a3],\n  Equal: [/* PERCENT SIGN */ 0x0025, /* PERCENT SIGN */ 0x0025, /* PER MILLE SIGN */ 0x2030, /* PER TEN THOUSAND SIGN */ 0x2031],\n  KeyQ: [/* LATIN SMALL LETTER E WITH GRAVE */ 0x00e8, /* LATIN CAPITAL LETTER E WITH GRAVE */ 0x00c8, /* GRAVE ACCENT */ 0x0060, /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e],\n  KeyW: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059, /* COMMERCIAL AT */ 0x0040, /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e],\n  KeyE: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f, /* LATIN SMALL LIGATURE OE */ 0x0153, /* LATIN CAPITAL LIGATURE OE */ 0x0152],\n  KeyR: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057, /* LATIN SMALL LETTER U WITH GRAVE */ 0x00f9, /* LATIN CAPITAL LETTER U WITH GRAVE */ 0x00d9],\n  KeyT: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab, /* LEFT DOUBLE QUOTATION MARK */ 0x201c],\n  KeyY: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d],\n  KeyU: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047, /* TILDE */ 0x007e, /* ALMOST EQUAL TO */ 0x2248],\n  KeyI: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048, /* NUMBER SIGN */ 0x0023],\n  KeyO: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, /* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* LATIN CAPITAL LETTER C WITH CEDILLA */ 0x00c7],\n  KeyP: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, /* ASTERISK */ 0x002a, /* MULTIPLICATION SIGN */ 0x00d7],\n  BracketLeft: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a, /* PERCENT SIGN */ 0x0025, /* PER MILLE SIGN */ 0x2030],\n  BracketRight: [{ dead: /* COMBINING DIAERESIS */ 0x0308 }, /* NARROW NO-BREAK SPACE */ 0x202f, /* NO-BREAK SPACE */ 0x00a0, /* POUND SIGN */ 0x00a3],\n  Backslash: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, /* EXCLAMATION MARK */ 0x0021, /* EXCLAMATION MARK */ 0x0021, /* INVERTED EXCLAMATION MARK */ 0x00a1],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, /* LESS-THAN SIGN */ 0x003c, /* LESS-THAN OR SLANTED EQUAL TO */ 0x2a7d],\n  KeyS: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049, /* GREATER-THAN SIGN */ 0x003e, /* GREATER-THAN OR SLANTED EQUAL TO */ 0x2a7e],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* LEFT CURLY BRACKET */ 0x007b, /* MODIFIER LETTER SMALL E */ 0x1d49],\n  KeyF: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055, /* RIGHT CURLY BRACKET */ 0x007d, /* BLACK SMILING FACE */ 0x263b],\n  KeyG: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* COLON */ 0x003a, /* MIDDLE DOT */ 0x00b7],\n  KeyH: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056, /* VERTICAL LINE */ 0x007c, /* BROKEN BAR */ 0x00a6],\n  KeyJ: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* LEFT PARENTHESIS */ 0x0028, /* EM DASH */ 0x2014],\n  KeyK: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e, /* RIGHT PARENTHESIS */ 0x0029, /* EN DASH */ 0x2013],\n  KeyL: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054, /* LEFT SQUARE BRACKET */ 0x005b, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  Semicolon: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052, /* RIGHT SQUARE BRACKET */ 0x005d, /* DOUBLE-STRUCK CAPITAL R */ 0x211d],\n  Quote: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* RIGHT SINGLE QUOTATION MARK */ 0x2019, /* EURO SIGN */ 0x20ac],\n  IntlBackslash: [/* LATIN SMALL LETTER E WITH CIRCUMFLEX */ 0x00ea, /* LATIN CAPITAL LETTER E WITH CIRCUMFLEX */ 0x00ca, /* CIRCUMFLEX ACCENT */ 0x005e],\n  KeyZ: [/* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* LATIN CAPITAL LETTER E WITH ACUTE */ 0x00c9, /* SOLIDUS */ 0x002f, /* DIVISION SIGN */ 0x00f7],\n  KeyX: [/* LATIN SMALL LETTER A WITH GRAVE */ 0x00e0, /* LATIN CAPITAL LETTER A WITH GRAVE */ 0x00c0, /* REVERSE SOLIDUS */ 0x005c, /* LATIN SUBSCRIPT SMALL LETTER I */ 0x1d62],\n  KeyC: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a, /* QUOTATION MARK */ 0x0022, /* GREEK SMALL LETTER DELTA */ 0x03b4],\n  KeyV: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b, /* SEMICOLON */ 0x003b, /* RIGHT SINGLE QUOTATION MARK */ 0x2019],\n  KeyB: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b, /* HORIZONTAL ELLIPSIS */ 0x2026],\n  KeyN: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, /* AMPERSAND */ 0x0026, /* MINUS SIGN */ 0x2212],\n  KeyM: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044, /* DOLLAR SIGN */ 0x0024, /* SECTION SIGN */ 0x00a7],\n  Comma: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c, /* EQUALS SIGN */ 0x003d, /* NOT EQUAL TO */ 0x2260],\n  Period: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050, /* PLUS SIGN */ 0x002b, /* PLUS-MINUS SIGN */ 0x00b1],\n  Slash: [/* APOSTROPHE */ 0x0027, /* QUESTION MARK */ 0x003f, /* QUESTION MARK */ 0x003f, /* INVERTED QUESTION MARK */ 0x00bf],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_FR_FR: CharacterDict = {\n  Backquote: [/* SUPERSCRIPT TWO */ 0x00b2],\n  Digit1: [/* AMPERSAND */ 0x0026, /* DIGIT ONE */ 0x0031],\n  Digit2: [/* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* DIGIT TWO */ 0x0032, { dead: /* COMBINING TILDE */ 0x0303 }],\n  Digit3: [/* QUOTATION MARK */ 0x0022, /* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* APOSTROPHE */ 0x0027, /* DIGIT FOUR */ 0x0034, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit5: [/* LEFT PARENTHESIS */ 0x0028, /* DIGIT FIVE */ 0x0035, /* LEFT SQUARE BRACKET */ 0x005b],\n  Digit6: [/* HYPHEN-MINUS */ 0x002d, /* DIGIT SIX */ 0x0036, /* VERTICAL LINE */ 0x007c],\n  Digit7: [/* LATIN SMALL LETTER E WITH GRAVE */ 0x00e8, /* DIGIT SEVEN */ 0x0037, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  Digit8: [/* LOW LINE */ 0x005f, /* DIGIT EIGHT */ 0x0038, /* REVERSE SOLIDUS */ 0x005c],\n  Digit9: [/* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* DIGIT NINE */ 0x0039, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit0: [/* LATIN SMALL LETTER A WITH GRAVE */ 0x00e0, /* DIGIT ZERO */ 0x0030, /* COMMERCIAL AT */ 0x0040],\n  Minus: [/* RIGHT PARENTHESIS */ 0x0029, /* DEGREE SIGN */ 0x00b0, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyQ: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyW: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  BracketRight: [/* DOLLAR SIGN */ 0x0024, /* POUND SIGN */ 0x00a3, /* CURRENCY SIGN */ 0x00a4],\n  Backslash: [/* ASTERISK */ 0x002a, /* MICRO SIGN */ 0x00b5],\n  KeyA: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Quote: [/* LATIN SMALL LETTER U WITH GRAVE */ 0x00f9, /* PERCENT SIGN */ 0x0025],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyZ: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* COMMA */ 0x002c, /* QUESTION MARK */ 0x003f],\n  Comma: [/* SEMICOLON */ 0x003b, /* FULL STOP */ 0x002e],\n  Period: [/* COLON */ 0x003a, /* SOLIDUS */ 0x002f],\n  Slash: [/* EXCLAMATION MARK */ 0x0021, /* SECTION SIGN */ 0x00a7],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_FR_OPTIMOT_ERGO: CharacterDict = {\n  Backquote: [/* DOLLAR SIGN */ 0x0024, /* EURO SIGN */ 0x20ac, /* POUND SIGN */ 0x00a3, /* COPYRIGHT SIGN */ 0x00a9],\n  Digit1: [/* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab, /* DIGIT ONE */ 0x0031, /* LEFT DOUBLE QUOTATION MARK */ 0x201c, /* VULGAR FRACTION ONE QUARTER */ 0x00bc],\n  Digit2: [/* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb, /* DIGIT TWO */ 0x0032, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d, /* VULGAR FRACTION ONE HALF */ 0x00bd],\n  Digit3: [/* QUOTATION MARK */ 0x0022, /* DIGIT THREE */ 0x0033, /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e, /* VULGAR FRACTION THREE QUARTERS */ 0x00be],\n  Digit4: [/* HYPHEN-MINUS */ 0x002d, /* DIGIT FOUR */ 0x0034, /* NON-BREAKING HYPHEN */ 0x2011, /* VULGAR FRACTION ONE THIRD */ 0x2153],\n  Digit5: [/* PLUS SIGN */ 0x002b, /* DIGIT FIVE */ 0x0035, /* PLUS-MINUS SIGN */ 0x00b1, /* VULGAR FRACTION TWO THIRDS */ 0x2154],\n  Digit6: [/* ASTERISK */ 0x002a, /* DIGIT SIX */ 0x0036, /* MULTIPLICATION SIGN */ 0x00d7, /* TEARDROP-SPOKED ASTERISK */ 0x273b],\n  Digit7: [/* SOLIDUS */ 0x002f, /* DIGIT SEVEN */ 0x0037, /* REVERSE SOLIDUS */ 0x005c, /* DIVISION SIGN */ 0x00f7],\n  Digit8: [/* EQUALS SIGN */ 0x003d, /* DIGIT EIGHT */ 0x0038, /* NOT EQUAL TO */ 0x2260, /* ALMOST EQUAL TO */ 0x2248],\n  Digit9: [/* LEFT PARENTHESIS */ 0x0028, /* DIGIT NINE */ 0x0039, /* LEFT SQUARE BRACKET */ 0x005b, /* PRIME */ 0x2032],\n  Digit0: [/* RIGHT PARENTHESIS */ 0x0029, /* DIGIT ZERO */ 0x0030, /* RIGHT SQUARE BRACKET */ 0x005d, /* DOUBLE PRIME */ 0x2033],\n  Minus: [/* COMMERCIAL AT */ 0x0040, /* LOW LINE */ 0x005f, /* MINUS SIGN */ 0x2212, /* FIGURE DASH */ 0x2012],\n  Equal: [/* NUMBER SIGN */ 0x0023, /* PERCENT SIGN */ 0x0025, /* DEGREE SIGN */ 0x00b0, /* MASCULINE ORDINAL INDICATOR */ 0x00ba],\n  KeyQ: [/* LATIN SMALL LETTER A WITH GRAVE */ 0x00e0, /* LATIN CAPITAL LETTER A WITH GRAVE */ 0x00c0, /* LESS-THAN SIGN */ 0x003c, /* LESS-THAN OR EQUAL TO */ 0x2264],\n  KeyW: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a, /* GREATER-THAN SIGN */ 0x003e, /* GREATER-THAN OR EQUAL TO */ 0x2265],\n  KeyE: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f, /* LATIN SMALL LIGATURE OE */ 0x0153, /* LATIN CAPITAL LIGATURE OE */ 0x0152],\n  KeyR: [/* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* LATIN CAPITAL LETTER E WITH ACUTE */ 0x00c9, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  KeyT: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042, /* EM DASH */ 0x2014, /* LOWER RIGHT DROP-SHADOWED WHITE SQUARE */ 0x274f],\n  KeyY: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046, /* LEFT SINGLE QUOTATION MARK */ 0x2018, /* BLACK FOUR POINTED STAR */ 0x2726],\n  KeyU: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044, /* LEFT CURLY BRACKET */ 0x007b, /* DAGGER */ 0x2020],\n  KeyI: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c, /* RIGHT CURLY BRACKET */ 0x007d, /* DOUBLE DAGGER */ 0x2021],\n  KeyO: [/* RIGHT SINGLE QUOTATION MARK */ 0x2019, /* QUESTION MARK */ 0x003f, /* RIGHT SINGLE QUOTATION MARK */ 0x2019, /* INVERTED QUESTION MARK */ 0x00bf],\n  KeyP: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, { dead: /* COMBINING RING ABOVE */ 0x030a }, /* REVERSED QUESTION MARK */ 0x2e2e],\n  BracketLeft: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, /* VERTICAL LINE */ 0x007c, /* BROKEN BAR */ 0x00a6],\n  BracketRight: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a, null, /* TRADE MARK SIGN */ 0x2122],\n  Backslash: [/* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* LATIN CAPITAL LETTER C WITH CEDILLA */ 0x00c7, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, /* COPYLEFT SYMBOL */ 0x1f12f],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, /* LATIN SMALL LETTER AE */ 0x00e6, /* LATIN CAPITAL LETTER AE */ 0x00c6],\n  KeyS: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049, /* SUBSCRIPT TWO */ 0x2082, /* SECTION SIGN */ 0x00a7],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* SUPERSCRIPT TWO */ 0x00b2, /* PILCROW SIGN */ 0x00b6],\n  KeyF: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055, /* LATIN SMALL LETTER U WITH GRAVE */ 0x00f9, /* LATIN CAPITAL LETTER U WITH GRAVE */ 0x00d9],\n  KeyG: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b, /* EN DASH */ 0x2013, /* CHECK MARK */ 0x2713],\n  KeyH: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050, /* GRAVE ACCENT */ 0x0060, /* BLACK STAR */ 0x2605],\n  KeyJ: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054, /* AMPERSAND */ 0x0026, /* LEFTWARDS BLACK ARROW */ 0x2b05],\n  KeyK: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, null, /* DOWNWARDS BLACK ARROW */ 0x2b07],\n  KeyL: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052, null, /* UPWARDS BLACK ARROW */ 0x2b06],\n  Semicolon: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e, { dead: /* COMBINING TILDE */ 0x0303 }, /* RIGHTWARDS BLACK ARROW */ 0x2b95],\n  Quote: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, /* EXCLAMATION MARK */ 0x0021, { dead: /* COMBINING DIAERESIS */ 0x0308 }, /* INVERTED EXCLAMATION MARK */ 0x00a1],\n  IntlBackslash: [{ dead: /* COMBINING DIAERESIS */ 0x0308 }, /* INTERROBANG */ 0x203d, /* LATIN SMALL LETTER O WITH STROKE */ 0x00f8, /* LATIN CAPITAL LETTER O WITH STROKE */ 0x00d8],\n  KeyZ: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyX: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059, { dead: /* COMBINING DOT ABOVE */ 0x0307 }, /* OPTION KEY */ 0x2325],\n  KeyC: [/* LATIN SMALL LETTER E WITH GRAVE */ 0x00e8, /* LATIN CAPITAL LETTER E WITH GRAVE */ 0x00c8, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, /* PLACE OF INTEREST SIGN */ 0x2318],\n  KeyV: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* HORIZONTAL ELLIPSIS */ 0x2026, /* MIDDLE DOT */ 0x00b7],\n  KeyB: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057, /* BULLET */ 0x2022, /* BALLOT X */ 0x2717],\n  KeyN: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047, null, /* FOUR BALLOON-SPOKED ASTERISK */ 0x2723],\n  KeyM: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, { dead: /* COMBINING CEDILLA */ 0x0327 }, /* BLACK SPADE SUIT */ 0x2660],\n  Comma: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, { dead: /* COMBINING MACRON */ 0x0304 }, /* BLACK HEART SUIT */ 0x2665],\n  Period: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048, { dead: /* COMBINING BREVE */ 0x0306 }, /* BLACK DIAMOND SUIT */ 0x2666],\n  Slash: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056, { dead: /* COMBINING CARON */ 0x030c }, /* BLACK CLUB SUIT */ 0x2663],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_HE_IL: CharacterDict = {\n  Backquote: [/* SEMICOLON */ 0x003b, /* TILDE */ 0x007e, /* HEBREW PUNCTUATION GERESH */ 0x05f3],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* EURO SIGN */ 0x20ac],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* NEW SHEQEL SIGN */ 0x20aa],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* DEGREE SIGN */ 0x00b0],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e, /* HEBREW ACCENT OLE */ 0x05ab],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026, /* HEBREW POINT METEG */ 0x05bd],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a, /* MULTIPLICATION SIGN */ 0x00d7],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, { special: /* LEFT-TO-RIGHT MARK */ 0x200e }],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* LEFT PARENTHESIS */ 0x0028, { special: /* RIGHT-TO-LEFT MARK */ 0x200f }],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f, /* HEBREW PUNCTUATION MAQAF */ 0x05be],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b, /* EN DASH */ 0x2013],\n  KeyQ: [/* SOLIDUS */ 0x002f, /* LATIN CAPITAL LETTER Q */ 0x0051, /* HEBREW POINT SIN DOT */ 0x05c2],\n  KeyW: [/* APOSTROPHE */ 0x0027, /* LATIN CAPITAL LETTER W */ 0x0057, /* HEBREW POINT SHIN DOT */ 0x05c1],\n  KeyE: [/* HEBREW LETTER QOF */ 0x05e7, /* LATIN CAPITAL LETTER E */ 0x0045, /* HEBREW POINT QAMATS */ 0x05b8],\n  KeyR: [/* HEBREW LETTER RESH */ 0x05e8, /* LATIN CAPITAL LETTER R */ 0x0052, /* HEBREW POINT HATAF QAMATS */ 0x05b3],\n  KeyT: [/* HEBREW LETTER ALEF */ 0x05d0, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* HEBREW LETTER TET */ 0x05d8, /* LATIN CAPITAL LETTER Y */ 0x0059, /* HEBREW LIGATURE YIDDISH DOUBLE VAV */ 0x05f0],\n  KeyU: [/* HEBREW LETTER VAV */ 0x05d5, /* LATIN CAPITAL LETTER U */ 0x0055, /* HEBREW POINT HOLAM */ 0x05b9, /* HEBREW POINT HOLAM HASER FOR VAV */ 0x05ba],\n  KeyI: [/* HEBREW LETTER FINAL NUN */ 0x05df, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* HEBREW LETTER FINAL MEM */ 0x05dd, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* HEBREW LETTER PE */ 0x05e4, /* LATIN CAPITAL LETTER P */ 0x0050, /* HEBREW POINT PATAH */ 0x05b7],\n  BracketLeft: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d, /* HEBREW POINT HATAF PATAH */ 0x05b2],\n  BracketRight: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b, /* HEBREW POINT RAFE */ 0x05bf],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c, /* HEBREW POINT QUBUTS */ 0x05bb],\n  KeyA: [/* HEBREW LETTER SHIN */ 0x05e9, /* LATIN CAPITAL LETTER A */ 0x0041, /* HEBREW POINT SHEVA */ 0x05b0],\n  KeyS: [/* HEBREW LETTER DALET */ 0x05d3, /* LATIN CAPITAL LETTER S */ 0x0053, /* HEBREW POINT DAGESH OR MAPIQ */ 0x05bc],\n  KeyD: [/* HEBREW LETTER GIMEL */ 0x05d2, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* HEBREW LETTER KAF */ 0x05db, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* HEBREW LETTER AYIN */ 0x05e2, /* LATIN CAPITAL LETTER G */ 0x0047, /* HEBREW LIGATURE YIDDISH VAV YOD */ 0x05f1],\n  KeyH: [/* HEBREW LETTER YOD */ 0x05d9, /* LATIN CAPITAL LETTER H */ 0x0048, /* HEBREW LIGATURE YIDDISH DOUBLE YOD */ 0x05f2],\n  KeyJ: [/* HEBREW LETTER HET */ 0x05d7, /* LATIN CAPITAL LETTER J */ 0x004a, /* HEBREW POINT HIRIQ */ 0x05b4, { special: /* ZERO WIDTH JOINER */ 0x200d }],\n  KeyK: [/* HEBREW LETTER LAMED */ 0x05dc, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* HEBREW LETTER FINAL KAF */ 0x05da, /* LATIN CAPITAL LETTER L */ 0x004c, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d, /* LEFT DOUBLE QUOTATION MARK */ 0x201c],\n  Semicolon: [/* HEBREW LETTER FINAL PE */ 0x05e3, /* COLON */ 0x003a, /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d],\n  Quote: [/* COMMA */ 0x002c, /* QUOTATION MARK */ 0x0022, /* HEBREW PUNCTUATION GERSHAYIM */ 0x05f4],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* HEBREW LETTER ZAYIN */ 0x05d6, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* HEBREW LETTER SAMEKH */ 0x05e1, /* LATIN CAPITAL LETTER X */ 0x0058, /* HEBREW POINT SEGOL */ 0x05b6],\n  KeyC: [/* HEBREW LETTER BET */ 0x05d1, /* LATIN CAPITAL LETTER C */ 0x0043, /* HEBREW POINT HATAF SEGOL */ 0x05b1, { special: /* COMBINING GRAPHEME JOINER */ 0x034f }],\n  KeyV: [/* HEBREW LETTER HE */ 0x05d4, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* HEBREW LETTER NUN */ 0x05e0, /* LATIN CAPITAL LETTER B */ 0x0042, null, /* HEBREW PUNCTUATION NUN HAFUKHA */ 0x05c6],\n  KeyN: [/* HEBREW LETTER MEM */ 0x05de, /* LATIN CAPITAL LETTER N */ 0x004e, null, { special: /* ZERO WIDTH NON-JOINER */ 0x200c }],\n  KeyM: [/* HEBREW LETTER TSADI */ 0x05e6, /* LATIN CAPITAL LETTER M */ 0x004d, /* HEBREW POINT TSERE */ 0x05b5],\n  Comma: [/* HEBREW LETTER TAV */ 0x05ea, /* GREATER-THAN SIGN */ 0x003e, /* RIGHT SINGLE QUOTATION MARK */ 0x2019, /* LEFT SINGLE QUOTATION MARK */ 0x2018],\n  Period: [/* HEBREW LETTER FINAL TSADI */ 0x05e5, /* LESS-THAN SIGN */ 0x003c, /* SINGLE LOW-9 QUOTATION MARK */ 0x201a, /* RIGHT SINGLE QUOTATION MARK */ 0x2019],\n  Slash: [/* FULL STOP */ 0x002e, /* QUESTION MARK */ 0x003f, /* DIVISION SIGN */ 0x00f7],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_HE_IL_ARKN: CharacterDict = {\n  Backquote: [/* SEMICOLON */ 0x003b, /* TILDE */ 0x007e, /* HEBREW PUNCTUATION GERESH */ 0x05f3],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* EURO SIGN */ 0x20ac],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* NEW SHEQEL SIGN */ 0x20aa],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* DEGREE SIGN */ 0x00b0],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e, /* HEBREW ACCENT OLE */ 0x05ab],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026, /* HEBREW POINT METEG */ 0x05bd],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a, /* MULTIPLICATION SIGN */ 0x00d7],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, { special: /* LEFT-TO-RIGHT MARK */ 0x200e }],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* LEFT PARENTHESIS */ 0x0028, { special: /* RIGHT-TO-LEFT MARK */ 0x200f }],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f, /* HEBREW PUNCTUATION MAQAF */ 0x05be],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b, /* EN DASH */ 0x2013],\n  KeyQ: [/* HEBREW LETTER FINAL TSADI */ 0x05e5, /* LATIN CAPITAL LETTER Q */ 0x0051, /* HEBREW POINT SIN DOT */ 0x05c2],\n  KeyW: [/* HEBREW LETTER FINAL NUN */ 0x05df, /* LATIN CAPITAL LETTER W */ 0x0057, /* HEBREW POINT SHIN DOT */ 0x05c1],\n  KeyE: [/* HEBREW LETTER QOF */ 0x05e7, /* LATIN CAPITAL LETTER E */ 0x0045, /* HEBREW POINT QAMATS */ 0x05b8],\n  KeyR: [/* HEBREW LETTER RESH */ 0x05e8, /* LATIN CAPITAL LETTER R */ 0x0052, /* HEBREW POINT HATAF QAMATS */ 0x05b3],\n  KeyT: [/* HEBREW LETTER ALEF */ 0x05d0, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* HEBREW LETTER TET */ 0x05d8, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* HEBREW LETTER VAV */ 0x05d5, /* LATIN CAPITAL LETTER U */ 0x0055, /* HEBREW POINT HOLAM */ 0x05b9, /* HEBREW POINT HOLAM HASER FOR VAV */ 0x05ba],\n  KeyI: [/* HEBREW LETTER TAV */ 0x05ea, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* HEBREW LETTER FINAL MEM */ 0x05dd, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* HEBREW LETTER PE */ 0x05e4, /* LATIN CAPITAL LETTER P */ 0x0050, /* HEBREW POINT PATAH */ 0x05b7],\n  BracketLeft: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d, /* HEBREW POINT HATAF PATAH */ 0x05b2],\n  BracketRight: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b, /* HEBREW POINT RAFE */ 0x05bf],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c, /* HEBREW POINT QUBUTS */ 0x05bb],\n  KeyA: [/* HEBREW LETTER SHIN */ 0x05e9, /* LATIN CAPITAL LETTER A */ 0x0041, /* HEBREW POINT SHEVA */ 0x05b0],\n  KeyS: [/* HEBREW LETTER DALET */ 0x05d3, /* LATIN CAPITAL LETTER S */ 0x0053, /* HEBREW POINT DAGESH OR MAPIQ */ 0x05bc],\n  KeyD: [/* HEBREW LETTER GIMEL */ 0x05d2, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* HEBREW LETTER KAF */ 0x05db, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* HEBREW LETTER AYIN */ 0x05e2, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* HEBREW LETTER YOD */ 0x05d9, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* HEBREW LETTER HET */ 0x05d7, /* LATIN CAPITAL LETTER J */ 0x004a, /* HEBREW POINT HIRIQ */ 0x05b4, { special: /* ZERO WIDTH JOINER */ 0x200d }],\n  KeyK: [/* HEBREW LETTER LAMED */ 0x05dc, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* HEBREW LETTER FINAL KAF */ 0x05da, /* LATIN CAPITAL LETTER L */ 0x004c, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d, /* LEFT DOUBLE QUOTATION MARK */ 0x201c],\n  Semicolon: [/* HEBREW LETTER FINAL PE */ 0x05e3, /* COLON */ 0x003a, /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022, /* HEBREW PUNCTUATION GERSHAYIM */ 0x05f4],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* HEBREW LETTER ZAYIN */ 0x05d6, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* HEBREW LETTER SAMEKH */ 0x05e1, /* LATIN CAPITAL LETTER X */ 0x0058, /* HEBREW POINT SEGOL */ 0x05b6],\n  KeyC: [/* HEBREW LETTER BET */ 0x05d1, /* LATIN CAPITAL LETTER C */ 0x0043, /* HEBREW POINT HATAF SEGOL */ 0x05b1, { special: /* COMBINING GRAPHEME JOINER */ 0x034f }],\n  KeyV: [/* HEBREW LETTER HE */ 0x05d4, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* HEBREW LETTER NUN */ 0x05e0, /* LATIN CAPITAL LETTER B */ 0x0042, null, /* HEBREW PUNCTUATION NUN HAFUKHA */ 0x05c6],\n  KeyN: [/* HEBREW LETTER MEM */ 0x05de, /* LATIN CAPITAL LETTER N */ 0x004e, null, { special: /* ZERO WIDTH NON-JOINER */ 0x200c }],\n  KeyM: [/* HEBREW LETTER TSADI */ 0x05e6, /* LATIN CAPITAL LETTER M */ 0x004d, /* HEBREW POINT TSERE */ 0x05b5],\n  Comma: [/* COMMA */ 0x002c, /* GREATER-THAN SIGN */ 0x003e, /* RIGHT SINGLE QUOTATION MARK */ 0x2019, /* LEFT SINGLE QUOTATION MARK */ 0x2018],\n  Period: [/* FULL STOP */ 0x002e, /* LESS-THAN SIGN */ 0x003c, /* SINGLE LOW-9 QUOTATION MARK */ 0x201a, /* RIGHT SINGLE QUOTATION MARK */ 0x2019],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f, /* DIVISION SIGN */ 0x00f7],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_HU_HU: CharacterDict = {\n  Backquote: [/* DIGIT ZERO */ 0x0030, /* SECTION SIGN */ 0x00a7],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* APOSTROPHE */ 0x0027, /* TILDE */ 0x007e],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, { dead: /* COMBINING CARON */ 0x030c }],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* PLUS SIGN */ 0x002b, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* EXCLAMATION MARK */ 0x0021, { dead: /* COMBINING BREVE */ 0x0306 }],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, { dead: /* COMBINING RING ABOVE */ 0x030a }],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* SOLIDUS */ 0x002f, { dead: /* COMBINING OGONEK */ 0x0328 }],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* EQUALS SIGN */ 0x003d, /* GRAVE ACCENT */ 0x0060],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, { dead: /* COMBINING DOT ABOVE */ 0x0307 }],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  Digit0: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN CAPITAL LETTER O WITH DIAERESIS */ 0x00d6, { dead: /* COMBINING DOUBLE ACUTE ACCENT */ 0x030b }],\n  Minus: [/* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LATIN CAPITAL LETTER U WITH DIAERESIS */ 0x00dc, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  Equal: [/* LATIN SMALL LETTER O WITH ACUTE */ 0x00f3, /* LATIN CAPITAL LETTER O WITH ACUTE */ 0x00d3, { dead: /* COMBINING CEDILLA */ 0x0327 }],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* REVERSE SOLIDUS */ 0x005c],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057, /* VERTICAL LINE */ 0x007c],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* LATIN CAPITAL LETTER A WITH DIAERESIS */ 0x00c4],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055, /* EURO SIGN */ 0x20ac],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049, /* LATIN CAPITAL LETTER I WITH ACUTE */ 0x00cd],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER O WITH DOUBLE ACUTE */ 0x0151, /* LATIN CAPITAL LETTER O WITH DOUBLE ACUTE */ 0x0150, /* DIVISION SIGN */ 0x00f7],\n  BracketRight: [/* LATIN SMALL LETTER U WITH ACUTE */ 0x00fa, /* LATIN CAPITAL LETTER U WITH ACUTE */ 0x00da, /* MULTIPLICATION SIGN */ 0x00d7],\n  Backslash: [/* LATIN SMALL LETTER U WITH DOUBLE ACUTE */ 0x0171, /* LATIN CAPITAL LETTER U WITH DOUBLE ACUTE */ 0x0170, /* CURRENCY SIGN */ 0x00a4],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, /* LATIN SMALL LETTER A WITH DIAERESIS */ 0x00e4],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* LATIN SMALL LETTER D WITH STROKE */ 0x0111],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044, /* LATIN CAPITAL LETTER D WITH STROKE */ 0x0110],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046, /* LEFT SQUARE BRACKET */ 0x005b],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047, /* RIGHT SQUARE BRACKET */ 0x005d],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a, /* LATIN SMALL LETTER I WITH ACUTE */ 0x00ed],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b, /* LATIN SMALL LETTER L WITH STROKE */ 0x0142],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c, /* LATIN CAPITAL LETTER L WITH STROKE */ 0x0141],\n  Semicolon: [/* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* LATIN CAPITAL LETTER E WITH ACUTE */ 0x00c9, /* DOLLAR SIGN */ 0x0024],\n  Quote: [/* LATIN SMALL LETTER A WITH ACUTE */ 0x00e1, /* LATIN CAPITAL LETTER A WITH ACUTE */ 0x00c1, /* LATIN SMALL LETTER SHARP S */ 0x00df],\n  IntlBackslash: [/* LATIN SMALL LETTER I WITH ACUTE */ 0x00ed, /* LATIN CAPITAL LETTER I WITH ACUTE */ 0x00cd, /* LESS-THAN SIGN */ 0x003c],\n  KeyZ: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059, /* GREATER-THAN SIGN */ 0x003e],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, /* NUMBER SIGN */ 0x0023],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, /* AMPERSAND */ 0x0026],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056, /* COMMERCIAL AT */ 0x0040],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042, /* LEFT CURLY BRACKET */ 0x007b],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, /* LESS-THAN SIGN */ 0x003c],\n  Comma: [/* COMMA */ 0x002c, /* QUESTION MARK */ 0x003f, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f, /* ASTERISK */ 0x002a],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_IT_IT: CharacterDict = {\n  Backquote: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* POUND SIGN */ 0x00a3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* EURO SIGN */ 0x20ac],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d],\n  Minus: [/* APOSTROPHE */ 0x0027, /* QUESTION MARK */ 0x003f],\n  Equal: [/* LATIN SMALL LETTER I WITH GRAVE */ 0x00ec, /* CIRCUMFLEX ACCENT */ 0x005e],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER E WITH GRAVE */ 0x00e8, /* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* PLUS SIGN */ 0x002b, /* ASTERISK */ 0x002a, /* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* LATIN SMALL LETTER U WITH GRAVE */ 0x00f9, /* SECTION SIGN */ 0x00a7],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER O WITH GRAVE */ 0x00f2, /* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* COMMERCIAL AT */ 0x0040],\n  Quote: [/* LATIN SMALL LETTER A WITH GRAVE */ 0x00e0, /* DEGREE SIGN */ 0x00b0, /* NUMBER SIGN */ 0x0023],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_LT_LT: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e, /* ACUTE ACCENT */ 0x00b4],\n  Digit1: [/* EXCLAMATION MARK */ 0x0021, /* DIGIT ONE */ 0x0031, /* COMMERCIAL AT */ 0x0040],\n  Digit2: [/* HYPHEN-MINUS */ 0x002d, /* DIGIT TWO */ 0x0032, /* LOW LINE */ 0x005f],\n  Digit3: [/* SOLIDUS */ 0x002f, /* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* SEMICOLON */ 0x003b, /* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* COLON */ 0x003a, /* DIGIT FIVE */ 0x0035, /* SECTION SIGN */ 0x00a7],\n  Digit6: [/* COMMA */ 0x002c, /* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* FULL STOP */ 0x002e, /* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* EQUALS SIGN */ 0x003d, /* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* LEFT PARENTHESIS */ 0x0028, /* DIGIT NINE */ 0x0039, /* LEFT SQUARE BRACKET */ 0x005b],\n  Digit0: [/* RIGHT PARENTHESIS */ 0x0029, /* DIGIT ZERO */ 0x0030, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Minus: [/* QUESTION MARK */ 0x003f, /* PLUS SIGN */ 0x002b, /* APOSTROPHE */ 0x0027],\n  Equal: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, /* PERCENT SIGN */ 0x0025],\n  KeyQ: [/* LATIN SMALL LETTER A WITH OGONEK */ 0x0105, /* LATIN CAPITAL LETTER A WITH OGONEK */ 0x0104],\n  KeyW: [/* LATIN SMALL LETTER Z WITH CARON */ 0x017e, /* LATIN CAPITAL LETTER Z WITH CARON */ 0x017d],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER I WITH OGONEK */ 0x012f, /* LATIN CAPITAL LETTER I WITH OGONEK */ 0x012e, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER S WITH CARON */ 0x0161, /* LATIN CAPITAL LETTER S WITH CARON */ 0x0160],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER U WITH OGONEK */ 0x0173, /* LATIN CAPITAL LETTER U WITH OGONEK */ 0x0172],\n  Quote: [/* LATIN SMALL LETTER E WITH DOT ABOVE */ 0x0117, /* LATIN CAPITAL LETTER E WITH DOT ABOVE */ 0x0116, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e, /* EN DASH */ 0x2013],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER U WITH MACRON */ 0x016b, /* LATIN CAPITAL LETTER U WITH MACRON */ 0x016a],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* LATIN SMALL LETTER C WITH CARON */ 0x010d, /* LATIN CAPITAL LETTER C WITH CARON */ 0x010c, /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e],\n  Period: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046, /* LEFT DOUBLE QUOTATION MARK */ 0x201c],\n  Slash: [/* LATIN SMALL LETTER E WITH OGONEK */ 0x0119, /* LATIN CAPITAL LETTER E WITH OGONEK */ 0x0118, /* REVERSE SOLIDUS */ 0x005c],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_NB_KVIKK: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyW: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyE: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyR: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyT: [/* LATIN SMALL LETTER O WITH STROKE */ 0x00f8, /* LATIN CAPITAL LETTER O WITH STROKE */ 0x00d8],\n  KeyY: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyU: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyI: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyO: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyP: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  BracketLeft: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyA: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyF: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyG: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyH: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyJ: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyK: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyL: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  Semicolon: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  Quote: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyZ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyX: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyC: [/* LATIN SMALL LETTER A WITH RING ABOVE */ 0x00e5, /* LATIN CAPITAL LETTER A WITH RING ABOVE */ 0x00c5],\n  KeyV: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyB: [/* LATIN SMALL LETTER AE */ 0x00e6, /* LATIN CAPITAL LETTER AE */ 0x00c6],\n  KeyN: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyM: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_NB_NO: CharacterDict = {\n  Backquote: [/* VERTICAL LINE */ 0x007c, /* SECTION SIGN */ 0x00a7],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* POUND SIGN */ 0x00a3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* CURRENCY SIGN */ 0x00a4, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* EURO SIGN */ 0x20ac],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, /* LEFT SQUARE BRACKET */ 0x005b],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Minus: [/* PLUS SIGN */ 0x002b, /* QUESTION MARK */ 0x003f],\n  Equal: [/* REVERSE SOLIDUS */ 0x005c, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER A WITH RING ABOVE */ 0x00e5, /* LATIN CAPITAL LETTER A WITH RING ABOVE */ 0x00c5],\n  BracketRight: [{ dead: /* COMBINING DIAERESIS */ 0x0308 }, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING TILDE */ 0x0303 }],\n  Backslash: [/* APOSTROPHE */ 0x0027, /* ASTERISK */ 0x002a],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER O WITH STROKE */ 0x00f8, /* LATIN CAPITAL LETTER O WITH STROKE */ 0x00d8],\n  Quote: [/* LATIN SMALL LETTER AE */ 0x00e6, /* LATIN CAPITAL LETTER AE */ 0x00c6],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, /* MICRO SIGN */ 0x00b5],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_NB_SKARP: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyW: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyE: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyR: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyT: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyY: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyU: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyI: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyO: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyP: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  BracketLeft: [/* HYPHEN-MINUS */ 0x002d],\n  KeyA: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyS: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyD: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyH: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  Semicolon: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Quote: [/* LATIN SMALL LETTER AE */ 0x00e6, /* LATIN CAPITAL LETTER AE */ 0x00c6],\n  KeyZ: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  KeyX: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  KeyC: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyV: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyB: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyN: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyM: [/* LATIN SMALL LETTER A WITH RING ABOVE */ 0x00e5, /* LATIN CAPITAL LETTER A WITH RING ABOVE */ 0x00c5],\n  Comma: [/* LATIN SMALL LETTER O WITH STROKE */ 0x00f8, /* LATIN CAPITAL LETTER O WITH STROKE */ 0x00d8],\n  Period: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  Slash: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_NB_DVORAK: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* POUND SIGN */ 0x00a3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* CURRENCY SIGN */ 0x00a4, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, /* LEFT SQUARE BRACKET */ 0x005b],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Minus: [/* PLUS SIGN */ 0x002b, /* QUESTION MARK */ 0x003f],\n  Equal: [/* REVERSE SOLIDUS */ 0x005c, /* GRAVE ACCENT */ 0x0060, /* ACUTE ACCENT */ 0x00b4],\n  KeyQ: [/* LATIN SMALL LETTER A WITH RING ABOVE */ 0x00e5, /* LATIN CAPITAL LETTER A WITH RING ABOVE */ 0x00c5],\n  KeyW: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  KeyE: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyY: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyU: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyI: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyO: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyP: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  BracketLeft: [/* APOSTROPHE */ 0x0027, /* ASTERISK */ 0x002a],\n  BracketRight: [/* DIAERESIS */ 0x00a8, /* CIRCUMFLEX ACCENT */ 0x005e, /* TILDE */ 0x007e],\n  Backslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyF: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyG: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyH: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyJ: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyK: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyL: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  Semicolon: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  Quote: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  IntlBackslash: [/* LATIN SMALL LETTER O WITH STROKE */ 0x00f8, /* LATIN CAPITAL LETTER O WITH STROKE */ 0x00d8],\n  KeyZ: [/* LATIN SMALL LETTER AE */ 0x00e6, /* LATIN CAPITAL LETTER AE */ 0x00c6],\n  KeyX: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyC: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyV: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyB: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyN: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  Period: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  Slash: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_NL_BE: CharacterDict = {\n  Backquote: [/* SUPERSCRIPT TWO */ 0x00b2, /* SUPERSCRIPT THREE */ 0x00b3],\n  Digit1: [/* AMPERSAND */ 0x0026, /* DIGIT ONE */ 0x0031, /* VERTICAL LINE */ 0x007c],\n  Digit2: [/* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* QUOTATION MARK */ 0x0022, /* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* APOSTROPHE */ 0x0027, /* DIGIT FOUR */ 0x0034, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit5: [/* LEFT PARENTHESIS */ 0x0028, /* DIGIT FIVE */ 0x0035, /* LEFT SQUARE BRACKET */ 0x005b],\n  Digit6: [/* SECTION SIGN */ 0x00a7, /* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* LATIN SMALL LETTER E WITH GRAVE */ 0x00e8, /* DIGIT SEVEN */ 0x0037],\n  Digit8: [/* EXCLAMATION MARK */ 0x0021, /* DIGIT EIGHT */ 0x0038],\n  Digit9: [/* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* DIGIT NINE */ 0x0039, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit0: [/* LATIN SMALL LETTER A WITH GRAVE */ 0x00e0, /* DIGIT ZERO */ 0x0030, /* RIGHT CURLY BRACKET */ 0x007d],\n  Minus: [/* RIGHT PARENTHESIS */ 0x0029, /* DEGREE SIGN */ 0x00b0],\n  Equal: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  KeyQ: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyW: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING DIAERESIS */ 0x0308 }, /* LEFT SQUARE BRACKET */ 0x005b],\n  BracketRight: [/* DOLLAR SIGN */ 0x0024, /* ASTERISK */ 0x002a, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Backslash: [/* MICRO SIGN */ 0x00b5, /* POUND SIGN */ 0x00a3, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  KeyA: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Quote: [/* LATIN SMALL LETTER U WITH GRAVE */ 0x00f9, /* PERCENT SIGN */ 0x0025, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e, /* REVERSE SOLIDUS */ 0x005c],\n  KeyZ: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* COMMA */ 0x002c, /* QUESTION MARK */ 0x003f],\n  Comma: [/* SEMICOLON */ 0x003b, /* FULL STOP */ 0x002e],\n  Period: [/* COLON */ 0x003a, /* SOLIDUS */ 0x002f],\n  Slash: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b, { dead: /* COMBINING TILDE */ 0x0303 }, { dead: /* COMBINING TILDE */ 0x0303 }],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_NL_NL: CharacterDict = {\n  Backquote: [/* COMMERCIAL AT */ 0x0040, /* SECTION SIGN */ 0x00a7, /* NOT SIGN */ 0x00ac],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021, /* SUPERSCRIPT ONE */ 0x00b9],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* SUPERSCRIPT TWO */ 0x00b2],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* SUPERSCRIPT THREE */ 0x00b3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* VULGAR FRACTION ONE QUARTER */ 0x00bc],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* VULGAR FRACTION ONE HALF */ 0x00bd],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026, /* VULGAR FRACTION THREE QUARTERS */ 0x00be],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* LOW LINE */ 0x005f, /* POUND SIGN */ 0x00a3],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, /* RIGHT CURLY BRACKET */ 0x007d],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* APOSTROPHE */ 0x0027],\n  Minus: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f, /* REVERSE SOLIDUS */ 0x005c],\n  Equal: [/* DEGREE SIGN */ 0x00b0, { dead: /* COMBINING TILDE */ 0x0303 }, { dead: /* COMBINING CEDILLA */ 0x0327 }],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052, /* PILCROW SIGN */ 0x00b6],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [{ dead: /* COMBINING DIAERESIS */ 0x0308 }, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }],\n  BracketRight: [/* ASTERISK */ 0x002a, /* VERTICAL LINE */ 0x007c],\n  Backslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* LATIN SMALL LETTER SHARP S */ 0x00df],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* PLUS SIGN */ 0x002b, /* PLUS-MINUS SIGN */ 0x00b1],\n  Quote: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  IntlBackslash: [/* RIGHT SQUARE BRACKET */ 0x005d, /* LEFT SQUARE BRACKET */ 0x005b, /* BROKEN BAR */ 0x00a6],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, /* CENT SIGN */ 0x00a2],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, /* MICRO SIGN */ 0x00b5],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* MIDDLE DOT */ 0x00b7],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* EQUALS SIGN */ 0x003d],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_PL_FWYR: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* AMPERSAND */ 0x0026],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* VERTICAL LINE */ 0x007c],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* SOLIDUS */ 0x002f],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  Equal: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyQ: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyW: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyE: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyR: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f, /* LATIN SMALL LETTER O WITH ACUTE */ 0x00f3, /* LATIN CAPITAL LETTER O WITH ACUTE */ 0x00d3],\n  KeyT: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyY: [/* HYPHEN-MINUS */ 0x002d, /* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyU: [/* ASTERISK */ 0x002a, /* NUMBER SIGN */ 0x0023, /* MIDDLE DOT */ 0x00b7],\n  KeyI: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyO: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyP: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  BracketLeft: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  BracketRight: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  Backslash: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* LATIN SMALL LETTER S WITH ACUTE */ 0x015b, /* LATIN CAPITAL LETTER S WITH ACUTE */ 0x015a],\n  KeyA: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyS: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, /* LATIN SMALL LETTER C WITH ACUTE */ 0x0107, /* LATIN CAPITAL LETTER C WITH ACUTE */ 0x0106],\n  KeyD: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049, /* LATIN SMALL LETTER L WITH STROKE */ 0x0142, /* LATIN CAPITAL LETTER L WITH STROKE */ 0x0141],\n  KeyF: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* LATIN SMALL LETTER E WITH OGONEK */ 0x0119, /* LATIN CAPITAL LETTER E WITH OGONEK */ 0x0118],\n  KeyG: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e, /* LATIN SMALL LETTER N WITH ACUTE */ 0x0144, /* LATIN CAPITAL LETTER N WITH ACUTE */ 0x0143],\n  KeyH: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* EXCLAMATION MARK */ 0x0021],\n  KeyJ: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b, /* QUESTION MARK */ 0x003f],\n  KeyK: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyL: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052, /* LATIN SMALL LETTER Z WITH ACUTE */ 0x017a, /* LATIN CAPITAL LETTER Z WITH ACUTE */ 0x0179],\n  Semicolon: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, /* LATIN SMALL LETTER A WITH OGONEK */ 0x0105, /* LATIN CAPITAL LETTER A WITH OGONEK */ 0x0104],\n  Quote: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a, /* LATIN SMALL LETTER Z WITH DOT ABOVE */ 0x017c, /* LATIN CAPITAL LETTER Z WITH DOT ABOVE */ 0x017b],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyX: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056, /* LESS-THAN SIGN */ 0x003c],\n  KeyC: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055, /* GREATER-THAN SIGN */ 0x003e],\n  KeyV: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyB: [/* SOLIDUS */ 0x002f, /* LESS-THAN SIGN */ 0x003c],\n  KeyN: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022, /* LOW LINE */ 0x005f],\n  KeyM: [/* REVERSE SOLIDUS */ 0x005c, /* GREATER-THAN SIGN */ 0x003e],\n  Comma: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Period: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  Slash: [/* FULL STOP */ 0x002e, /* FULL STOP */ 0x002e],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_PL_PL: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, { dead: /* COMBINING TILDE */ 0x0303 }],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* LATIN SMALL LETTER E WITH OGONEK */ 0x0119, /* LATIN CAPITAL LETTER E WITH OGONEK */ 0x0118],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055, /* EURO SIGN */ 0x20ac],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f, /* LATIN SMALL LETTER O WITH ACUTE */ 0x00f3, /* LATIN CAPITAL LETTER O WITH ACUTE */ 0x00d3],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, /* LATIN SMALL LETTER A WITH OGONEK */ 0x0105, /* LATIN CAPITAL LETTER A WITH OGONEK */ 0x0104],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* LATIN SMALL LETTER S WITH ACUTE */ 0x015b, /* LATIN CAPITAL LETTER S WITH ACUTE */ 0x015a],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c, /* LATIN SMALL LETTER L WITH STROKE */ 0x0142, /* LATIN CAPITAL LETTER L WITH STROKE */ 0x0141],\n  Semicolon: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a, /* LATIN SMALL LETTER Z WITH DOT ABOVE */ 0x017c, /* LATIN CAPITAL LETTER Z WITH DOT ABOVE */ 0x017b],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, /* LATIN SMALL LETTER Z WITH ACUTE */ 0x017a, /* LATIN CAPITAL LETTER Z WITH ACUTE */ 0x0179],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, /* LATIN SMALL LETTER C WITH ACUTE */ 0x0107, /* LATIN CAPITAL LETTER C WITH ACUTE */ 0x0106],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e, /* LATIN SMALL LETTER N WITH ACUTE */ 0x0144, /* LATIN CAPITAL LETTER N WITH ACUTE */ 0x0143],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_PT_BR: CharacterDict = {\n  Backquote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021, /* SUPERSCRIPT ONE */ 0x00b9],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040, /* SUPERSCRIPT TWO */ 0x00b2],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* SUPERSCRIPT THREE */ 0x00b3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* POUND SIGN */ 0x00a3],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* CENT SIGN */ 0x00a2],\n  Digit6: [/* DIGIT SIX */ 0x0036, { dead: /* COMBINING DIAERESIS */ 0x0308 }, /* NOT SIGN */ 0x00ac],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b, /* SECTION SIGN */ 0x00a7],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* SOLIDUS */ 0x002f],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057, /* QUESTION MARK */ 0x003f],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* DEGREE SIGN */ 0x00b0],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  BracketRight: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b, /* FEMININE ORDINAL INDICATOR */ 0x00aa],\n  Backslash: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d, /* MASCULINE ORDINAL INDICATOR */ 0x00ba],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* LATIN CAPITAL LETTER C WITH CEDILLA */ 0x00c7],\n  Quote: [{ dead: /* COMBINING TILDE */ 0x0303 }, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, /* CRUZEIRO SIGN */ 0x20a2],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  IntlRo: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f, /* DEGREE SIGN */ 0x00b0],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_PT_PT: CharacterDict = {\n  Backquote: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* POUND SIGN */ 0x00a3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* SECTION SIGN */ 0x00a7],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* EURO SIGN */ 0x20ac],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, /* LEFT SQUARE BRACKET */ 0x005b],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Minus: [/* APOSTROPHE */ 0x0027, /* QUESTION MARK */ 0x003f],\n  Equal: [/* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* PLUS SIGN */ 0x002b, /* ASTERISK */ 0x002a, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  BracketRight: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Backslash: [{ dead: /* COMBINING TILDE */ 0x0303 }, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* LATIN CAPITAL LETTER C WITH CEDILLA */ 0x00c7],\n  Quote: [/* MASCULINE ORDINAL INDICATOR */ 0x00ba, /* FEMININE ORDINAL INDICATOR */ 0x00aa],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_RO_RO: CharacterDict = {\n  Backquote: [/* DOUBLE LOW-9 QUOTATION MARK */ 0x201e, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d, /* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021, { dead: /* COMBINING TILDE */ 0x0303 }],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040, { dead: /* COMBINING CARON */ 0x030c }],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, { dead: /* COMBINING BREVE */ 0x0306 }],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, { dead: /* COMBINING RING ABOVE */ 0x030a }],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e, { dead: /* COMBINING OGONEK */ 0x0328 }],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a, { dead: /* COMBINING DOT ABOVE */ 0x0307 }],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029, { dead: /* COMBINING DOUBLE ACUTE ACCENT */ 0x030b }],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f, { dead: /* COMBINING DIAERESIS */ 0x0308 }, /* EN DASH */ 0x2013],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b, { dead: /* COMBINING CEDILLA */ 0x0327 }, /* PLUS-MINUS SIGN */ 0x00b1],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050, /* SECTION SIGN */ 0x00a7],\n  BracketLeft: [/* LATIN SMALL LETTER A WITH BREVE */ 0x0103, /* LATIN CAPITAL LETTER A WITH BREVE */ 0x0102, /* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* LATIN SMALL LETTER I WITH CIRCUMFLEX */ 0x00ee, /* LATIN CAPITAL LETTER I WITH CIRCUMFLEX */ 0x00ce, /* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* LATIN SMALL LETTER A WITH CIRCUMFLEX */ 0x00e2, /* LATIN CAPITAL LETTER A WITH CIRCUMFLEX */ 0x00c2, /* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* LATIN SMALL LETTER SHARP S */ 0x00df],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044, /* LATIN SMALL LETTER D WITH STROKE */ 0x0111, /* LATIN CAPITAL LETTER D WITH STROKE */ 0x0110],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c, /* LATIN SMALL LETTER L WITH STROKE */ 0x0142, /* LATIN CAPITAL LETTER L WITH STROKE */ 0x0141],\n  Semicolon: [/* LATIN SMALL LETTER S WITH COMMA BELOW */ 0x0219, /* LATIN CAPITAL LETTER S WITH COMMA BELOW */ 0x0218, /* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  Quote: [/* LATIN SMALL LETTER T WITH COMMA BELOW */ 0x021b, /* LATIN CAPITAL LETTER T WITH COMMA BELOW */ 0x021a, /* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, /* COPYRIGHT SIGN */ 0x00a9],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b, /* LESS-THAN SIGN */ 0x003c, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* GREATER-THAN SIGN */ 0x003e, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_RU_RU: CharacterDict = {\n  Backquote: [/* CYRILLIC SMALL LETTER IO */ 0x0451, /* CYRILLIC CAPITAL LETTER IO */ 0x0401],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMERO SIGN */ 0x2116],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* SEMICOLON */ 0x003b],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* COLON */ 0x003a],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* QUESTION MARK */ 0x003f],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a, /* RUBLE SIGN */ 0x20bd],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* CYRILLIC SMALL LETTER SHORT I */ 0x0439, /* CYRILLIC CAPITAL LETTER SHORT I */ 0x0419],\n  KeyW: [/* CYRILLIC SMALL LETTER TSE */ 0x0446, /* CYRILLIC CAPITAL LETTER TSE */ 0x0426],\n  KeyE: [/* CYRILLIC SMALL LETTER U */ 0x0443, /* CYRILLIC CAPITAL LETTER U */ 0x0423],\n  KeyR: [/* CYRILLIC SMALL LETTER KA */ 0x043a, /* CYRILLIC CAPITAL LETTER KA */ 0x041a],\n  KeyT: [/* CYRILLIC SMALL LETTER IE */ 0x0435, /* CYRILLIC CAPITAL LETTER IE */ 0x0415],\n  KeyY: [/* CYRILLIC SMALL LETTER EN */ 0x043d, /* CYRILLIC CAPITAL LETTER EN */ 0x041d],\n  KeyU: [/* CYRILLIC SMALL LETTER GHE */ 0x0433, /* CYRILLIC CAPITAL LETTER GHE */ 0x0413],\n  KeyI: [/* CYRILLIC SMALL LETTER SHA */ 0x0448, /* CYRILLIC CAPITAL LETTER SHA */ 0x0428],\n  KeyO: [/* CYRILLIC SMALL LETTER SHCHA */ 0x0449, /* CYRILLIC CAPITAL LETTER SHCHA */ 0x0429],\n  KeyP: [/* CYRILLIC SMALL LETTER ZE */ 0x0437, /* CYRILLIC CAPITAL LETTER ZE */ 0x0417],\n  BracketLeft: [/* CYRILLIC SMALL LETTER HA */ 0x0445, /* CYRILLIC CAPITAL LETTER HA */ 0x0425],\n  BracketRight: [/* CYRILLIC SMALL LETTER HARD SIGN */ 0x044a, /* CYRILLIC CAPITAL LETTER HARD SIGN */ 0x042a],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* SOLIDUS */ 0x002f],\n  KeyA: [/* CYRILLIC SMALL LETTER EF */ 0x0444, /* CYRILLIC CAPITAL LETTER EF */ 0x0424],\n  KeyS: [/* CYRILLIC SMALL LETTER YERU */ 0x044b, /* CYRILLIC CAPITAL LETTER YERU */ 0x042b],\n  KeyD: [/* CYRILLIC SMALL LETTER VE */ 0x0432, /* CYRILLIC CAPITAL LETTER VE */ 0x0412],\n  KeyF: [/* CYRILLIC SMALL LETTER A */ 0x0430, /* CYRILLIC CAPITAL LETTER A */ 0x0410],\n  KeyG: [/* CYRILLIC SMALL LETTER PE */ 0x043f, /* CYRILLIC CAPITAL LETTER PE */ 0x041f],\n  KeyH: [/* CYRILLIC SMALL LETTER ER */ 0x0440, /* CYRILLIC CAPITAL LETTER ER */ 0x0420],\n  KeyJ: [/* CYRILLIC SMALL LETTER O */ 0x043e, /* CYRILLIC CAPITAL LETTER O */ 0x041e],\n  KeyK: [/* CYRILLIC SMALL LETTER EL */ 0x043b, /* CYRILLIC CAPITAL LETTER EL */ 0x041b],\n  KeyL: [/* CYRILLIC SMALL LETTER DE */ 0x0434, /* CYRILLIC CAPITAL LETTER DE */ 0x0414],\n  Semicolon: [/* CYRILLIC SMALL LETTER ZHE */ 0x0436, /* CYRILLIC CAPITAL LETTER ZHE */ 0x0416],\n  Quote: [/* CYRILLIC SMALL LETTER E */ 0x044d, /* CYRILLIC CAPITAL LETTER E */ 0x042d],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* SOLIDUS */ 0x002f],\n  KeyZ: [/* CYRILLIC SMALL LETTER YA */ 0x044f, /* CYRILLIC CAPITAL LETTER YA */ 0x042f],\n  KeyX: [/* CYRILLIC SMALL LETTER CHE */ 0x0447, /* CYRILLIC CAPITAL LETTER CHE */ 0x0427],\n  KeyC: [/* CYRILLIC SMALL LETTER ES */ 0x0441, /* CYRILLIC CAPITAL LETTER ES */ 0x0421],\n  KeyV: [/* CYRILLIC SMALL LETTER EM */ 0x043c, /* CYRILLIC CAPITAL LETTER EM */ 0x041c],\n  KeyB: [/* CYRILLIC SMALL LETTER I */ 0x0438, /* CYRILLIC CAPITAL LETTER I */ 0x0418],\n  KeyN: [/* CYRILLIC SMALL LETTER TE */ 0x0442, /* CYRILLIC CAPITAL LETTER TE */ 0x0422],\n  KeyM: [/* CYRILLIC SMALL LETTER SOFT SIGN */ 0x044c, /* CYRILLIC CAPITAL LETTER SOFT SIGN */ 0x042c],\n  Comma: [/* CYRILLIC SMALL LETTER BE */ 0x0431, /* CYRILLIC CAPITAL LETTER BE */ 0x0411],\n  Period: [/* CYRILLIC SMALL LETTER YU */ 0x044e, /* CYRILLIC CAPITAL LETTER YU */ 0x042e],\n  Slash: [/* FULL STOP */ 0x002e, /* COMMA */ 0x002c],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_SL_SI: CharacterDict = {\n  Backquote: [{ dead: /* COMBINING CEDILLA */ 0x0327 }, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021, /* TILDE */ 0x007e],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, { dead: /* COMBINING CARON */ 0x030c }],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, { dead: /* COMBINING BREVE */ 0x0306 }],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, { dead: /* COMBINING RING ABOVE */ 0x030a }],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026, { dead: /* COMBINING OGONEK */ 0x0328 }],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f, /* GRAVE ACCENT */ 0x0060],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, { dead: /* COMBINING DOT ABOVE */ 0x0307 }],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d, { dead: /* COMBINING DOUBLE ACUTE ACCENT */ 0x030b }],\n  Minus: [/* APOSTROPHE */ 0x0027, /* QUESTION MARK */ 0x003f, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  Equal: [/* PLUS SIGN */ 0x002b, /* ASTERISK */ 0x002a, { dead: /* COMBINING CEDILLA */ 0x0327 }],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* REVERSE SOLIDUS */ 0x005c],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057, /* VERTICAL LINE */ 0x007c],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER S WITH CARON */ 0x0161, /* LATIN CAPITAL LETTER S WITH CARON */ 0x0160, /* DIVISION SIGN */ 0x00f7],\n  BracketRight: [/* LATIN SMALL LETTER D WITH STROKE */ 0x0111, /* LATIN CAPITAL LETTER D WITH STROKE */ 0x0110, /* MULTIPLICATION SIGN */ 0x00d7],\n  Backslash: [/* LATIN SMALL LETTER Z WITH CARON */ 0x017e, /* LATIN CAPITAL LETTER Z WITH CARON */ 0x017d, /* CURRENCY SIGN */ 0x00a4],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046, /* LEFT SQUARE BRACKET */ 0x005b],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047, /* RIGHT SQUARE BRACKET */ 0x005d],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b, /* LATIN SMALL LETTER L WITH STROKE */ 0x0142],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c, /* LATIN CAPITAL LETTER L WITH STROKE */ 0x0141],\n  Semicolon: [/* LATIN SMALL LETTER C WITH CARON */ 0x010d, /* LATIN CAPITAL LETTER C WITH CARON */ 0x010c],\n  Quote: [/* LATIN SMALL LETTER C WITH ACUTE */ 0x0107, /* LATIN CAPITAL LETTER C WITH ACUTE */ 0x0106, /* LATIN SMALL LETTER SHARP S */ 0x00df],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyZ: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056, /* COMMERCIAL AT */ 0x0040],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042, /* LEFT CURLY BRACKET */ 0x007b],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, /* SECTION SIGN */ 0x00a7],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_SV_SE: CharacterDict = {\n  Backquote: [/* SECTION SIGN */ 0x00a7, /* VULGAR FRACTION ONE HALF */ 0x00bd],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* POUND SIGN */ 0x00a3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* CURRENCY SIGN */ 0x00a4, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* EURO SIGN */ 0x20ac],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, /* LEFT SQUARE BRACKET */ 0x005b],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Minus: [/* PLUS SIGN */ 0x002b, /* QUESTION MARK */ 0x003f, /* REVERSE SOLIDUS */ 0x005c],\n  Equal: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER A WITH RING ABOVE */ 0x00e5, /* LATIN CAPITAL LETTER A WITH RING ABOVE */ 0x00c5],\n  BracketRight: [{ dead: /* COMBINING DIAERESIS */ 0x0308 }, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING TILDE */ 0x0303 }],\n  Backslash: [/* APOSTROPHE */ 0x0027, /* ASTERISK */ 0x002a],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN CAPITAL LETTER O WITH DIAERESIS */ 0x00d6],\n  Quote: [/* LATIN SMALL LETTER A WITH DIAERESIS */ 0x00e4, /* LATIN CAPITAL LETTER A WITH DIAERESIS */ 0x00c4],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, /* MICRO SIGN */ 0x00b5],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_TH_TH_MAN: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021, /* THAI DIGIT ONE */ 0x0e51],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040, /* THAI DIGIT TWO */ 0x0e52],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* THAI DIGIT THREE */ 0x0e53],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* THAI DIGIT FOUR */ 0x0e54],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* THAI DIGIT FIVE */ 0x0e55],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e, /* THAI DIGIT SIX */ 0x0e56],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026, /* THAI DIGIT SEVEN */ 0x0e57],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a, /* THAI DIGIT EIGHT */ 0x0e58],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028, /* THAI DIGIT NINE */ 0x0e59],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029, /* THAI DIGIT ZERO */ 0x0e50],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f, /* DIVISION SIGN */ 0x00f7],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b, /* MULTIPLICATION SIGN */ 0x00d7],\n  KeyQ: [/* THAI CHARACTER SARA AI MAIMUAN */ 0x0e43, /* THAI CHARACTER THO PHUTHAO */ 0x0e12],\n  KeyW: [/* THAI CHARACTER TO TAO */ 0x0e15, /* THAI CHARACTER TO PATAK */ 0x0e0f],\n  KeyE: [/* THAI CHARACTER HO HIP */ 0x0e2b, /* THAI CHARACTER SO SO */ 0x0e0b],\n  KeyR: [/* THAI CHARACTER LO LING */ 0x0e25, /* THAI CHARACTER YO YING */ 0x0e0d],\n  KeyT: [/* THAI CHARACTER SO SUA */ 0x0e2a, /* THAI CHARACTER FO FAN */ 0x0e1f],\n  KeyY: [/* THAI CHARACTER PO PLA */ 0x0e1b, /* THAI CHARACTER CHO CHING */ 0x0e09],\n  KeyU: [/* THAI CHARACTER MAI HAN-AKAT */ 0x0e31, /* THAI CHARACTER SARA UE */ 0x0e36],\n  KeyI: [/* THAI CHARACTER KO KAI */ 0x0e01, /* THAI CHARACTER THO THONG */ 0x0e18],\n  KeyO: [/* THAI CHARACTER SARA I */ 0x0e34, /* THAI CHARACTER THO THAN */ 0x0e10],\n  KeyP: [/* THAI CHARACTER BO BAIMAI */ 0x0e1a, /* THAI CHARACTER DO CHADA */ 0x0e0e],\n  BracketLeft: [/* THAI CHARACTER MAITAIKHU */ 0x0e47, /* THAI CHARACTER KHO RAKHANG */ 0x0e06],\n  BracketRight: [/* THAI CHARACTER LO CHULA */ 0x0e2c, /* THAI CHARACTER THO NANGMONTHO */ 0x0e11],\n  Backslash: [/* THAI CHARACTER PAIYANNOI */ 0x0e2f, /* THAI CHARACTER CHO CHOE */ 0x0e0c],\n  KeyA: [/* THAI CHARACTER NGO NGU */ 0x0e07, /* THAI CHARACTER SO RUSI */ 0x0e29],\n  KeyS: [/* THAI CHARACTER SARA E */ 0x0e40, /* THAI CHARACTER THO THUNG */ 0x0e16],\n  KeyD: [/* THAI CHARACTER RO RUA */ 0x0e23, /* THAI CHARACTER SARA AE */ 0x0e41],\n  KeyF: [/* THAI CHARACTER NO NU */ 0x0e19, /* THAI CHARACTER CHO CHANG */ 0x0e0a],\n  KeyG: [/* THAI CHARACTER MO MA */ 0x0e21, /* THAI CHARACTER PHO PHAN */ 0x0e1e],\n  KeyH: [/* THAI CHARACTER O ANG */ 0x0e2d, /* THAI CHARACTER PHO PHUNG */ 0x0e1c],\n  KeyJ: [/* THAI CHARACTER SARA AA */ 0x0e32, /* THAI CHARACTER SARA AM */ 0x0e33, /* THAI CHARACTER LAKKHANGYAO */ 0x0e45],\n  KeyK: [/* THAI CHARACTER MAI EK */ 0x0e48, /* THAI CHARACTER KHO KHAI */ 0x0e02, /* THAI CHARACTER KHO KHUAT */ 0x0e03],\n  KeyL: [/* THAI CHARACTER MAI THO */ 0x0e49, /* THAI CHARACTER SARA O */ 0x0e42],\n  Semicolon: [/* THAI CHARACTER WO WAEN */ 0x0e27, /* THAI CHARACTER PHO SAMPHAO */ 0x0e20],\n  Quote: [/* THAI CHARACTER SARA UEE */ 0x0e37, /* QUOTATION MARK */ 0x0022],\n  KeyZ: [/* THAI CHARACTER SARA U */ 0x0e38, /* THAI CHARACTER RU */ 0x0e24, /* THAI CHARACTER LU */ 0x0e26],\n  KeyX: [/* THAI CHARACTER SARA AI MAIMALAI */ 0x0e44, /* THAI CHARACTER FO FA */ 0x0e1d],\n  KeyC: [/* THAI CHARACTER THO THAHAN */ 0x0e17, /* THAI CHARACTER MAIYAMOK */ 0x0e46],\n  KeyV: [/* THAI CHARACTER YO YAK */ 0x0e22, /* THAI CHARACTER NO NEN */ 0x0e13],\n  KeyB: [/* THAI CHARACTER CHO CHAN */ 0x0e08, /* THAI CHARACTER MAI TRI */ 0x0e4a],\n  KeyN: [/* THAI CHARACTER KHO KHWAI */ 0x0e04, /* THAI CHARACTER MAI CHATTAWA */ 0x0e4b, /* THAI CHARACTER KHO KHON */ 0x0e05],\n  KeyM: [/* THAI CHARACTER SARA II */ 0x0e35, /* THAI CHARACTER THANTHAKHAT */ 0x0e4c],\n  Comma: [/* THAI CHARACTER DO DEK */ 0x0e14, /* THAI CHARACTER SO SALA */ 0x0e28],\n  Period: [/* THAI CHARACTER SARA A */ 0x0e30, /* THAI CHARACTER HO NOKHUK */ 0x0e2e],\n  Slash: [/* THAI CHARACTER SARA UU */ 0x0e39, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_TH_TH_PAT: CharacterDict = {\n  Backquote: [/* LOW LINE */ 0x005f, /* THAI CURRENCY SYMBOL BAHT */ 0x0e3f],\n  Digit1: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  Digit2: [/* THAI DIGIT TWO */ 0x0e52, /* QUOTATION MARK */ 0x0022],\n  Digit3: [/* THAI DIGIT THREE */ 0x0e53, /* SOLIDUS */ 0x002f],\n  Digit4: [/* THAI DIGIT FOUR */ 0x0e54, /* COMMA */ 0x002c],\n  Digit5: [/* THAI DIGIT FIVE */ 0x0e55, /* QUESTION MARK */ 0x003f],\n  Digit6: [/* THAI CHARACTER SARA UU */ 0x0e39, /* THAI CHARACTER SARA U */ 0x0e38],\n  Digit7: [/* THAI DIGIT SEVEN */ 0x0e57, /* LOW LINE */ 0x005f],\n  Digit8: [/* THAI DIGIT EIGHT */ 0x0e58, /* FULL STOP */ 0x002e],\n  Digit9: [/* THAI DIGIT NINE */ 0x0e59, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* THAI DIGIT ZERO */ 0x0e50, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* THAI DIGIT ONE */ 0x0e51, /* HYPHEN-MINUS */ 0x002d],\n  Equal: [/* THAI DIGIT SIX */ 0x0e56, /* PERCENT SIGN */ 0x0025],\n  KeyQ: [/* THAI CHARACTER MAITAIKHU */ 0x0e47, /* THAI CHARACTER MAI TRI */ 0x0e4a],\n  KeyW: [/* THAI CHARACTER TO TAO */ 0x0e15, /* THAI CHARACTER RU */ 0x0e24],\n  KeyE: [/* THAI CHARACTER YO YAK */ 0x0e22, /* THAI CHARACTER MAIYAMOK */ 0x0e46],\n  KeyR: [/* THAI CHARACTER O ANG */ 0x0e2d, /* THAI CHARACTER YO YING */ 0x0e0d],\n  KeyT: [/* THAI CHARACTER RO RUA */ 0x0e23, /* THAI CHARACTER SO RUSI */ 0x0e29],\n  KeyY: [/* THAI CHARACTER MAI EK */ 0x0e48, /* THAI CHARACTER SARA UE */ 0x0e36],\n  KeyU: [/* THAI CHARACTER DO DEK */ 0x0e14, /* THAI CHARACTER FO FA */ 0x0e1d],\n  KeyI: [/* THAI CHARACTER MO MA */ 0x0e21, /* THAI CHARACTER SO SO */ 0x0e0b],\n  KeyO: [/* THAI CHARACTER WO WAEN */ 0x0e27, /* THAI CHARACTER THO THUNG */ 0x0e16],\n  KeyP: [/* THAI CHARACTER SARA AE */ 0x0e41, /* THAI CHARACTER THO PHUTHAO */ 0x0e12],\n  BracketLeft: [/* THAI CHARACTER SARA AI MAIMUAN */ 0x0e43, /* THAI CHARACTER PAIYANNOI */ 0x0e2f],\n  BracketRight: [/* THAI CHARACTER CHO CHOE */ 0x0e0c, /* THAI CHARACTER LU */ 0x0e26],\n  Backslash: [/* Private Use */ 0xf8c7, /* THAI CHARACTER NIKHAHIT */ 0x0e4d],\n  KeyA: [/* THAI CHARACTER MAI THO */ 0x0e49, /* THAI CHARACTER MAI CHATTAWA */ 0x0e4b],\n  KeyS: [/* THAI CHARACTER THO THAHAN */ 0x0e17, /* THAI CHARACTER THO THONG */ 0x0e18],\n  KeyD: [/* THAI CHARACTER NGO NGU */ 0x0e07, /* THAI CHARACTER SARA AM */ 0x0e33],\n  KeyF: [/* THAI CHARACTER KO KAI */ 0x0e01, /* THAI CHARACTER NO NEN */ 0x0e13],\n  KeyG: [/* THAI CHARACTER MAI HAN-AKAT */ 0x0e31, /* THAI CHARACTER THANTHAKHAT */ 0x0e4c],\n  KeyH: [/* THAI CHARACTER SARA II */ 0x0e35, /* THAI CHARACTER SARA UEE */ 0x0e37],\n  KeyJ: [/* THAI CHARACTER SARA AA */ 0x0e32, /* THAI CHARACTER PHO PHUNG */ 0x0e1c],\n  KeyK: [/* THAI CHARACTER NO NU */ 0x0e19, /* THAI CHARACTER CHO CHANG */ 0x0e0a],\n  KeyL: [/* THAI CHARACTER SARA E */ 0x0e40, /* THAI CHARACTER SARA O */ 0x0e42],\n  Semicolon: [/* THAI CHARACTER SARA AI MAIMALAI */ 0x0e44, /* THAI CHARACTER KHO RAKHANG */ 0x0e06],\n  Quote: [/* THAI CHARACTER KHO KHAI */ 0x0e02, /* THAI CHARACTER THO NANGMONTHO */ 0x0e11],\n  IntlBackslash: [/* Private Use */ 0xf8c7, /* THAI CHARACTER NIKHAHIT */ 0x0e4d],\n  KeyZ: [/* THAI CHARACTER BO BAIMAI */ 0x0e1a, /* THAI CHARACTER DO CHADA */ 0x0e0e],\n  KeyX: [/* THAI CHARACTER PO PLA */ 0x0e1b, /* THAI CHARACTER TO PATAK */ 0x0e0f],\n  KeyC: [/* THAI CHARACTER LO LING */ 0x0e25, /* THAI CHARACTER THO THAN */ 0x0e10],\n  KeyV: [/* THAI CHARACTER HO HIP */ 0x0e2b, /* THAI CHARACTER PHO SAMPHAO */ 0x0e20],\n  KeyB: [/* THAI CHARACTER SARA I */ 0x0e34, /* THAI CHARACTER MAI HAN-AKAT */ 0x0e31],\n  KeyN: [/* THAI CHARACTER KHO KHWAI */ 0x0e04, /* THAI CHARACTER SO SALA */ 0x0e28],\n  KeyM: [/* THAI CHARACTER SO SUA */ 0x0e2a, /* THAI CHARACTER HO NOKHUK */ 0x0e2e],\n  Comma: [/* THAI CHARACTER SARA A */ 0x0e30, /* THAI CHARACTER FO FAN */ 0x0e1f],\n  Period: [/* THAI CHARACTER CHO CHAN */ 0x0e08, /* THAI CHARACTER CHO CHING */ 0x0e09],\n  Slash: [/* THAI CHARACTER PHO PHAN */ 0x0e1e, /* THAI CHARACTER LO CHULA */ 0x0e2c],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_TH_TH: CharacterDict = {\n  Backquote: [/* LOW LINE */ 0x005f, /* PERCENT SIGN */ 0x0025],\n  Digit1: [/* THAI CHARACTER LAKKHANGYAO */ 0x0e45, /* PLUS SIGN */ 0x002b],\n  Digit2: [/* SOLIDUS */ 0x002f, /* THAI DIGIT ONE */ 0x0e51],\n  Digit3: [/* HYPHEN-MINUS */ 0x002d, /* THAI DIGIT TWO */ 0x0e52],\n  Digit4: [/* THAI CHARACTER PHO SAMPHAO */ 0x0e20, /* THAI DIGIT THREE */ 0x0e53],\n  Digit5: [/* THAI CHARACTER THO THUNG */ 0x0e16, /* THAI DIGIT FOUR */ 0x0e54],\n  Digit6: [/* THAI CHARACTER SARA U */ 0x0e38, /* THAI CHARACTER SARA UU */ 0x0e39],\n  Digit7: [/* THAI CHARACTER SARA UE */ 0x0e36, /* THAI CURRENCY SYMBOL BAHT */ 0x0e3f],\n  Digit8: [/* THAI CHARACTER KHO KHWAI */ 0x0e04, /* THAI DIGIT FIVE */ 0x0e55],\n  Digit9: [/* THAI CHARACTER TO TAO */ 0x0e15, /* THAI DIGIT SIX */ 0x0e56],\n  Digit0: [/* THAI CHARACTER CHO CHAN */ 0x0e08, /* THAI DIGIT SEVEN */ 0x0e57],\n  Minus: [/* THAI CHARACTER KHO KHAI */ 0x0e02, /* THAI DIGIT EIGHT */ 0x0e58],\n  Equal: [/* THAI CHARACTER CHO CHANG */ 0x0e0a, /* THAI DIGIT NINE */ 0x0e59],\n  KeyQ: [/* THAI CHARACTER MAIYAMOK */ 0x0e46, /* THAI DIGIT ZERO */ 0x0e50],\n  KeyW: [/* THAI CHARACTER SARA AI MAIMALAI */ 0x0e44, /* QUOTATION MARK */ 0x0022],\n  KeyE: [/* THAI CHARACTER SARA AM */ 0x0e33, /* THAI CHARACTER DO CHADA */ 0x0e0e],\n  KeyR: [/* THAI CHARACTER PHO PHAN */ 0x0e1e, /* THAI CHARACTER THO NANGMONTHO */ 0x0e11],\n  KeyT: [/* THAI CHARACTER SARA A */ 0x0e30, /* THAI CHARACTER THO THONG */ 0x0e18],\n  KeyY: [/* THAI CHARACTER MAI HAN-AKAT */ 0x0e31, /* THAI CHARACTER NIKHAHIT */ 0x0e4d],\n  KeyU: [/* THAI CHARACTER SARA II */ 0x0e35, /* THAI CHARACTER MAI TRI */ 0x0e4a],\n  KeyI: [/* THAI CHARACTER RO RUA */ 0x0e23, /* THAI CHARACTER NO NEN */ 0x0e13],\n  KeyO: [/* THAI CHARACTER NO NU */ 0x0e19, /* THAI CHARACTER PAIYANNOI */ 0x0e2f],\n  KeyP: [/* THAI CHARACTER YO YAK */ 0x0e22, /* THAI CHARACTER YO YING */ 0x0e0d],\n  BracketLeft: [/* THAI CHARACTER BO BAIMAI */ 0x0e1a, /* THAI CHARACTER THO THAN */ 0x0e10],\n  BracketRight: [/* THAI CHARACTER LO LING */ 0x0e25, /* COMMA */ 0x002c],\n  Backslash: [/* THAI CHARACTER KHO KHUAT */ 0x0e03, /* THAI CHARACTER KHO KHON */ 0x0e05],\n  KeyA: [/* THAI CHARACTER FO FAN */ 0x0e1f, /* THAI CHARACTER RU */ 0x0e24],\n  KeyS: [/* THAI CHARACTER HO HIP */ 0x0e2b, /* THAI CHARACTER KHO RAKHANG */ 0x0e06],\n  KeyD: [/* THAI CHARACTER KO KAI */ 0x0e01, /* THAI CHARACTER TO PATAK */ 0x0e0f],\n  KeyF: [/* THAI CHARACTER DO DEK */ 0x0e14, /* THAI CHARACTER SARA O */ 0x0e42],\n  KeyG: [/* THAI CHARACTER SARA E */ 0x0e40, /* THAI CHARACTER CHO CHOE */ 0x0e0c],\n  KeyH: [/* THAI CHARACTER MAI THO */ 0x0e49, /* THAI CHARACTER MAITAIKHU */ 0x0e47],\n  KeyJ: [/* THAI CHARACTER MAI EK */ 0x0e48, /* THAI CHARACTER MAI CHATTAWA */ 0x0e4b],\n  KeyK: [/* THAI CHARACTER SARA AA */ 0x0e32, /* THAI CHARACTER SO RUSI */ 0x0e29],\n  KeyL: [/* THAI CHARACTER SO SUA */ 0x0e2a, /* THAI CHARACTER SO SALA */ 0x0e28],\n  Semicolon: [/* THAI CHARACTER WO WAEN */ 0x0e27, /* THAI CHARACTER SO SO */ 0x0e0b],\n  Quote: [/* THAI CHARACTER NGO NGU */ 0x0e07, /* FULL STOP */ 0x002e],\n  IntlBackslash: [/* THAI CHARACTER KHO KHUAT */ 0x0e03, /* THAI CHARACTER KHO KHON */ 0x0e05],\n  KeyZ: [/* THAI CHARACTER PHO PHUNG */ 0x0e1c, /* LEFT PARENTHESIS */ 0x0028],\n  KeyX: [/* THAI CHARACTER PO PLA */ 0x0e1b, /* RIGHT PARENTHESIS */ 0x0029],\n  KeyC: [/* THAI CHARACTER SARA AE */ 0x0e41, /* THAI CHARACTER CHO CHING */ 0x0e09],\n  KeyV: [/* THAI CHARACTER O ANG */ 0x0e2d, /* THAI CHARACTER HO NOKHUK */ 0x0e2e],\n  KeyB: [/* THAI CHARACTER SARA I */ 0x0e34, /* THAI CHARACTER PHINTHU */ 0x0e3a],\n  KeyN: [/* THAI CHARACTER SARA UEE */ 0x0e37, /* THAI CHARACTER THANTHAKHAT */ 0x0e4c],\n  KeyM: [/* THAI CHARACTER THO THAHAN */ 0x0e17, /* QUESTION MARK */ 0x003f],\n  Comma: [/* THAI CHARACTER MO MA */ 0x0e21, /* THAI CHARACTER THO PHUTHAO */ 0x0e12],\n  Period: [/* THAI CHARACTER SARA AI MAIMUAN */ 0x0e43, /* THAI CHARACTER LO CHULA */ 0x0e2c],\n  Slash: [/* THAI CHARACTER FO FA */ 0x0e1d, /* THAI CHARACTER LU */ 0x0e26],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_TR_TR_F: CharacterDict = {\n  Backquote: [/* PLUS SIGN */ 0x002b, /* ASTERISK */ 0x002a, /* NOT SIGN */ 0x00ac],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021, /* SUPERSCRIPT ONE */ 0x00b9, /* INVERTED EXCLAMATION MARK */ 0x00a1],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* SUPERSCRIPT TWO */ 0x00b2],\n  Digit3: [/* DIGIT THREE */ 0x0033, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, /* NUMBER SIGN */ 0x0023, /* SUPERSCRIPT THREE */ 0x00b3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* VULGAR FRACTION ONE QUARTER */ 0x00bc, /* CURRENCY SIGN */ 0x00a4],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* VULGAR FRACTION ONE HALF */ 0x00bd],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026, /* VULGAR FRACTION THREE QUARTERS */ 0x00be],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* APOSTROPHE */ 0x0027, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, /* LEFT SQUARE BRACKET */ 0x005b],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Minus: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f, /* REVERSE SOLIDUS */ 0x005c, /* INVERTED QUESTION MARK */ 0x00bf],\n  Equal: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f, /* VERTICAL LINE */ 0x007c],\n  KeyQ: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046, /* COMMERCIAL AT */ 0x0040],\n  KeyW: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyE: [/* LATIN SMALL LETTER G WITH BREVE */ 0x011f, /* LATIN CAPITAL LETTER G WITH BREVE */ 0x011e],\n  KeyR: [/* LATIN SMALL LETTER DOTLESS I */ 0x0131, /* LATIN CAPITAL LETTER I */ 0x0049, /* PILCROW SIGN */ 0x00b6, /* REGISTERED SIGN */ 0x00ae],\n  KeyT: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyY: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044, /* YEN SIGN */ 0x00a5],\n  KeyU: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyI: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyO: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048, /* LATIN SMALL LETTER O WITH STROKE */ 0x00f8, /* LATIN CAPITAL LETTER O WITH STROKE */ 0x00d8],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050, /* POUND SIGN */ 0x00a3],\n  BracketLeft: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  BracketRight: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057, { dead: /* COMBINING TILDE */ 0x0303 }],\n  Backslash: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  KeyA: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055, /* LATIN SMALL LETTER AE */ 0x00e6, /* LATIN CAPITAL LETTER AE */ 0x00c6],\n  KeyS: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I WITH DOT ABOVE */ 0x0130, /* LATIN SMALL LETTER SHARP S */ 0x00df, /* SECTION SIGN */ 0x00a7],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyF: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, null, /* FEMININE ORDINAL INDICATOR */ 0x00aa],\n  KeyG: [/* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LATIN CAPITAL LETTER U WITH DIAERESIS */ 0x00dc],\n  KeyH: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054, /* TURKISH LIRA SIGN */ 0x20ba],\n  KeyJ: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyK: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  Quote: [/* LATIN SMALL LETTER S WITH CEDILLA */ 0x015f, /* LATIN CAPITAL LETTER S WITH CEDILLA */ 0x015e],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e, /* VERTICAL LINE */ 0x007c, /* BROKEN BAR */ 0x00a6],\n  KeyZ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab, /* LESS-THAN SIGN */ 0x003c],\n  KeyX: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN CAPITAL LETTER O WITH DIAERESIS */ 0x00d6, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb, /* GREATER-THAN SIGN */ 0x003e],\n  KeyC: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056, /* CENT SIGN */ 0x00a2, /* COPYRIGHT SIGN */ 0x00a9],\n  KeyV: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyB: [/* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* LATIN CAPITAL LETTER C WITH CEDILLA */ 0x00c7],\n  KeyN: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyM: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* MICRO SIGN */ 0x00b5, /* MASCULINE ORDINAL INDICATOR */ 0x00ba],\n  Comma: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042, /* MULTIPLICATION SIGN */ 0x00d7],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* DIVISION SIGN */ 0x00f7],\n  Slash: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b, /* SOFT HYPHEN */ 0x00ad],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_TR_TR_Q: CharacterDict = {\n  Backquote: [/* QUOTATION MARK */ 0x0022, /* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* LESS-THAN SIGN */ 0x003c],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021, /* GREATER-THAN SIGN */ 0x003e],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* APOSTROPHE */ 0x0027, /* POUND SIGN */ 0x00a3],\n  Digit3: [/* DIGIT THREE */ 0x0033, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* PLUS SIGN */ 0x002b, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* VULGAR FRACTION ONE HALF */ 0x00bd],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, /* LEFT SQUARE BRACKET */ 0x005b],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Minus: [/* ASTERISK */ 0x002a, /* QUESTION MARK */ 0x003f, /* REVERSE SOLIDUS */ 0x005c],\n  Equal: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f, /* VERTICAL LINE */ 0x007c],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* COMMERCIAL AT */ 0x0040],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054, /* TURKISH LIRA SIGN */ 0x20ba],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER DOTLESS I */ 0x0131, /* LATIN CAPITAL LETTER I */ 0x0049, /* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I WITH DOT ABOVE */ 0x0130],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER G WITH BREVE */ 0x011f, /* LATIN CAPITAL LETTER G WITH BREVE */ 0x011e, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  BracketRight: [/* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LATIN CAPITAL LETTER U WITH DIAERESIS */ 0x00dc, { dead: /* COMBINING TILDE */ 0x0303 }],\n  Backslash: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, /* LATIN SMALL LETTER AE */ 0x00e6, /* LATIN CAPITAL LETTER AE */ 0x00c6],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* LATIN SMALL LETTER SHARP S */ 0x00df],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER S WITH CEDILLA */ 0x015f, /* LATIN CAPITAL LETTER S WITH CEDILLA */ 0x015e, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  Quote: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I WITH DOT ABOVE */ 0x0130],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN CAPITAL LETTER O WITH DIAERESIS */ 0x00d6],\n  Period: [/* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* LATIN CAPITAL LETTER C WITH CEDILLA */ 0x00c7],\n  Slash: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_UK_UA: CharacterDict = {\n  Backquote: [/* CYRILLIC SMALL LETTER IO */ 0x0451, /* CYRILLIC CAPITAL LETTER IO */ 0x0401],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMERO SIGN */ 0x2116],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* SEMICOLON */ 0x003b],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* COLON */ 0x003a],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* QUESTION MARK */ 0x003f],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* CYRILLIC SMALL LETTER SHORT I */ 0x0439, /* CYRILLIC CAPITAL LETTER SHORT I */ 0x0419],\n  KeyW: [/* CYRILLIC SMALL LETTER TSE */ 0x0446, /* CYRILLIC CAPITAL LETTER TSE */ 0x0426],\n  KeyE: [/* CYRILLIC SMALL LETTER U */ 0x0443, /* CYRILLIC CAPITAL LETTER U */ 0x0423],\n  KeyR: [/* CYRILLIC SMALL LETTER KA */ 0x043a, /* CYRILLIC CAPITAL LETTER KA */ 0x041a],\n  KeyT: [/* CYRILLIC SMALL LETTER IE */ 0x0435, /* CYRILLIC CAPITAL LETTER IE */ 0x0415],\n  KeyY: [/* CYRILLIC SMALL LETTER EN */ 0x043d, /* CYRILLIC CAPITAL LETTER EN */ 0x041d],\n  KeyU: [/* CYRILLIC SMALL LETTER GHE */ 0x0433, /* CYRILLIC CAPITAL LETTER GHE */ 0x0413, /* CYRILLIC SMALL LETTER GHE WITH UPTURN */ 0x0491, /* CYRILLIC CAPITAL LETTER GHE WITH UPTURN */ 0x0490],\n  KeyI: [/* CYRILLIC SMALL LETTER SHA */ 0x0448, /* CYRILLIC CAPITAL LETTER SHA */ 0x0428],\n  KeyO: [/* CYRILLIC SMALL LETTER SHCHA */ 0x0449, /* CYRILLIC CAPITAL LETTER SHCHA */ 0x0429],\n  KeyP: [/* CYRILLIC SMALL LETTER ZE */ 0x0437, /* CYRILLIC CAPITAL LETTER ZE */ 0x0417],\n  BracketLeft: [/* CYRILLIC SMALL LETTER HA */ 0x0445, /* CYRILLIC CAPITAL LETTER HA */ 0x0425],\n  BracketRight: [/* CYRILLIC SMALL LETTER YI */ 0x0457, /* CYRILLIC CAPITAL LETTER YI */ 0x0407],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* SOLIDUS */ 0x002f],\n  KeyA: [/* CYRILLIC SMALL LETTER EF */ 0x0444, /* CYRILLIC CAPITAL LETTER EF */ 0x0424],\n  KeyS: [/* CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I */ 0x0456, /* CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I */ 0x0406],\n  KeyD: [/* CYRILLIC SMALL LETTER VE */ 0x0432, /* CYRILLIC CAPITAL LETTER VE */ 0x0412],\n  KeyF: [/* CYRILLIC SMALL LETTER A */ 0x0430, /* CYRILLIC CAPITAL LETTER A */ 0x0410],\n  KeyG: [/* CYRILLIC SMALL LETTER PE */ 0x043f, /* CYRILLIC CAPITAL LETTER PE */ 0x041f],\n  KeyH: [/* CYRILLIC SMALL LETTER ER */ 0x0440, /* CYRILLIC CAPITAL LETTER ER */ 0x0420],\n  KeyJ: [/* CYRILLIC SMALL LETTER O */ 0x043e, /* CYRILLIC CAPITAL LETTER O */ 0x041e],\n  KeyK: [/* CYRILLIC SMALL LETTER EL */ 0x043b, /* CYRILLIC CAPITAL LETTER EL */ 0x041b],\n  KeyL: [/* CYRILLIC SMALL LETTER DE */ 0x0434, /* CYRILLIC CAPITAL LETTER DE */ 0x0414],\n  Semicolon: [/* CYRILLIC SMALL LETTER ZHE */ 0x0436, /* CYRILLIC CAPITAL LETTER ZHE */ 0x0416],\n  Quote: [/* CYRILLIC SMALL LETTER UKRAINIAN IE */ 0x0454, /* CYRILLIC CAPITAL LETTER UKRAINIAN IE */ 0x0404],\n  IntlBackslash: [/* CYRILLIC SMALL LETTER GHE WITH UPTURN */ 0x0491, /* CYRILLIC CAPITAL LETTER GHE WITH UPTURN */ 0x0490],\n  KeyZ: [/* CYRILLIC SMALL LETTER YA */ 0x044f, /* CYRILLIC CAPITAL LETTER YA */ 0x042f],\n  KeyX: [/* CYRILLIC SMALL LETTER CHE */ 0x0447, /* CYRILLIC CAPITAL LETTER CHE */ 0x0427],\n  KeyC: [/* CYRILLIC SMALL LETTER ES */ 0x0441, /* CYRILLIC CAPITAL LETTER ES */ 0x0421],\n  KeyV: [/* CYRILLIC SMALL LETTER EM */ 0x043c, /* CYRILLIC CAPITAL LETTER EM */ 0x041c],\n  KeyB: [/* CYRILLIC SMALL LETTER I */ 0x0438, /* CYRILLIC CAPITAL LETTER I */ 0x0418],\n  KeyN: [/* CYRILLIC SMALL LETTER TE */ 0x0442, /* CYRILLIC CAPITAL LETTER TE */ 0x0422],\n  KeyM: [/* CYRILLIC SMALL LETTER SOFT SIGN */ 0x044c, /* CYRILLIC CAPITAL LETTER SOFT SIGN */ 0x042c],\n  Comma: [/* CYRILLIC SMALL LETTER BE */ 0x0431, /* CYRILLIC CAPITAL LETTER BE */ 0x0411],\n  Period: [/* CYRILLIC SMALL LETTER YU */ 0x044e, /* CYRILLIC CAPITAL LETTER YU */ 0x042e],\n  Slash: [/* FULL STOP */ 0x002e, /* COMMA */ 0x002c],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_DE_ADNW_BUT_XCV: CharacterDict = {\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  KeyQ: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyW: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyE: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyR: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyT: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyY: [/* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LATIN CAPITAL LETTER U WITH DIAERESIS */ 0x00dc],\n  KeyU: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  KeyI: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  Backslash: [/* LATIN SMALL LETTER SHARP S */ 0x00df],\n  KeyA: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyS: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyD: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyH: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyJ: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Semicolon: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyC: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyV: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyB: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyN: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyM: [/* LATIN SMALL LETTER A WITH DIAERESIS */ 0x00e4, /* LATIN CAPITAL LETTER A WITH DIAERESIS */ 0x00c4],\n  Comma: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN CAPITAL LETTER O WITH DIAERESIS */ 0x00d6],\n  Period: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  Slash: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  Space: [/* SPACE */ 0x0020],\n  Tab: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n};\n","import { type GeometryDict } from \"../types.ts\";\n\nexport const MATRIX: GeometryDict = {\n  // ---\n  Equal: {\n    x: 0,\n    y: 0,\n    w: 1.5,\n    h: 1,\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit1: {\n    x: 1.5,\n    y: 0,\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit2: {\n    x: 2.5,\n    y: 0,\n    zones: [\"ring\", \"left\", \"digit\"],\n  },\n  Digit3: {\n    x: 3.5,\n    y: 0,\n    zones: [\"middle\", \"left\", \"digit\"],\n  },\n  Digit4: {\n    x: 4.5,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit5: {\n    x: 5.5,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit6: {\n    x: 7.5,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit7: {\n    x: 8.5,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit8: {\n    x: 9.5,\n    y: 0,\n    zones: [\"middle\", \"right\", \"digit\"],\n  },\n  Digit9: {\n    x: 10.5,\n    y: 0,\n    zones: [\"ring\", \"right\", \"digit\"],\n  },\n  Digit0: {\n    x: 11.5,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Minus: {\n    x: 12.5,\n    y: 0,\n    w: 1.5,\n    h: 1,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  // ---\n  Tab: {\n    x: 0,\n    y: 1,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Tab\" }],\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyQ: {\n    x: 1.5,\n    y: 1,\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyW: {\n    x: 2.5,\n    y: 1,\n    zones: [\"ring\", \"left\", \"top\"],\n  },\n  KeyE: {\n    x: 3.5,\n    y: 1,\n    zones: [\"middle\", \"left\", \"top\"],\n  },\n  KeyR: {\n    x: 4.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyT: {\n    x: 5.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyY: {\n    x: 7.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyU: {\n    x: 8.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyI: {\n    x: 9.5,\n    y: 1,\n    zones: [\"middle\", \"right\", \"top\"],\n  },\n  KeyO: {\n    x: 10.5,\n    y: 1,\n    zones: [\"ring\", \"right\", \"top\"],\n  },\n  KeyP: {\n    x: 11.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  Backslash: {\n    x: 12.5,\n    y: 1,\n    w: 1.5,\n    h: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  // ---\n  CapsLock: {\n    x: 0,\n    y: 2,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Caps Lock\" }],\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyA: {\n    x: 1.5,\n    y: 2,\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyS: {\n    x: 2.5,\n    y: 2,\n    zones: [\"ring\", \"left\", \"home\"],\n  },\n  KeyD: {\n    x: 3.5,\n    y: 2,\n    zones: [\"middle\", \"left\", \"home\"],\n  },\n  KeyF: {\n    x: 4.5,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n    homing: true,\n  },\n  KeyG: {\n    x: 5.5,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n  },\n  KeyH: {\n    x: 7.5,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n  },\n  KeyJ: {\n    x: 8.5,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n    homing: true,\n  },\n  KeyK: {\n    x: 9.5,\n    y: 2,\n    zones: [\"middle\", \"right\", \"home\"],\n  },\n  KeyL: {\n    x: 10.5,\n    y: 2,\n    zones: [\"ring\", \"right\", \"home\"],\n  },\n  Semicolon: {\n    x: 11.5,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  Quote: {\n    x: 12.5,\n    y: 2,\n    w: 1.5,\n    h: 1,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  // ---\n  ShiftLeft: {\n    x: 0,\n    y: 3,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyZ: {\n    x: 1.5,\n    y: 3,\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyX: {\n    x: 2.5,\n    y: 3,\n    zones: [\"ring\", \"left\", \"bottom\"],\n  },\n  KeyC: {\n    x: 3.5,\n    y: 3,\n    zones: [\"middle\", \"left\", \"bottom\"],\n  },\n  KeyV: {\n    x: 4.5,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyB: {\n    x: 5.5,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyN: {\n    x: 7.5,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  KeyM: {\n    x: 8.5,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  Comma: {\n    x: 9.5,\n    y: 3,\n    zones: [\"middle\", \"right\", \"bottom\"],\n  },\n  Period: {\n    x: 10.5,\n    y: 3,\n    zones: [\"ring\", \"right\", \"bottom\"],\n  },\n  Slash: {\n    x: 11.5,\n    y: 3,\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ShiftRight: {\n    x: 12.5,\n    y: 3,\n    w: 1.5,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ThumbClusterLeft1: {\n    x: 4.5,\n    y: 4,\n    zones: [\"thumb\", \"left\", \"bottom\"],\n  },\n  ThumbClusterLeft2: {\n    x: 5.5,\n    y: 4,\n    zones: [\"thumb\", \"left\", \"bottom\"],\n  },\n  ThumbClusterRight1: {\n    x: 7.5,\n    y: 4,\n    zones: [\"thumb\", \"right\", \"bottom\"],\n  },\n  ThumbClusterRight2: {\n    x: 8.5,\n    y: 4,\n    zones: [\"thumb\", \"right\", \"bottom\"],\n  },\n};\n","import { useSettings } from \"@mkboard/settings\";\r\nimport { createContext, type ReactNode, useContext, useMemo } from \"react\";\r\nimport { type Keyboard } from \"./keyboard.ts\";\r\nimport { loadKeyboard } from \"./load.ts\";\r\nimport { KeyboardOptions } from \"./settings.ts\";\r\n\r\nexport const KeyboardContext = createContext<Keyboard>(null!);\r\n\r\nexport function useKeyboard(): Keyboard {\r\n  const value = useContext(KeyboardContext);\r\n  if (value == null) {\r\n    throw new Error(\r\n      process.env.NODE_ENV !== \"production\"\r\n        ? \"KeyboardContext is missing\"\r\n        : undefined,\r\n    );\r\n  }\r\n  return value;\r\n}\r\n\r\nexport function KeyboardProvider({\r\n  children,\r\n}: {\r\n  readonly children: ReactNode;\r\n}): ReactNode {\r\n  const { settings } = useSettings();\r\n  const keyboard = useMemo(\r\n    () => loadKeyboard(KeyboardOptions.from(settings)),\r\n    [settings],\r\n  );\r\n  return (\r\n    <KeyboardContext.Provider value={keyboard}>\r\n      {children}\r\n    </KeyboardContext.Provider>\r\n  );\r\n}\r\n","import {\r\n  type CodePoint,\r\n  type CodePointSet,\r\n  expand,\r\n  isControl,\r\n  isDiacritic,\r\n  isLinebreak,\r\n  isWhitespace,\r\n  replace,\r\n  toCodePoints,\r\n} from \"@mkboard/unicode\";\r\n\r\n/**\r\n * Removes any illegal characters from the specified text, collapses whitespace.\r\n */\r\nexport function filterText(text: string, set: CodePointSet): string {\r\n  let result = \"\";\r\n  let ws = \"\";\r\n\r\n  const append = (\r\n    codePoint: CodePoint,\r\n    s = String.fromCodePoint(codePoint),\r\n  ) => {\r\n    if (set.has(codePoint)) {\r\n      if (ws !== \"\") {\r\n        result += ws;\r\n        ws = \"\";\r\n      }\r\n      result += s;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const space = (char: string) => {\r\n    if (result !== \"\" && ws !== \"\\n\") {\r\n      ws = char;\r\n    }\r\n  };\r\n\r\n  for (let codePoint of toCodePoints(text.normalize())) {\r\n    if (isLinebreak(codePoint)) {\r\n      space(\"\\n\");\r\n      continue;\r\n    }\r\n    if (isWhitespace(codePoint)) {\r\n      space(\" \");\r\n      continue;\r\n    }\r\n    if (isControl(codePoint)) {\r\n      space(\" \");\r\n      continue;\r\n    }\r\n    if (isDiacritic(codePoint)) {\r\n      continue;\r\n    }\r\n    if (!append(codePoint)) {\r\n      const a = expand(codePoint);\r\n      if (a != null) {\r\n        for (const letter of a) {\r\n          append(letter);\r\n        }\r\n        continue;\r\n      }\r\n      const b = replace(codePoint);\r\n      if (b != null) {\r\n        if (!append(b, String.fromCodePoint(codePoint))) {\r\n          space(\" \");\r\n        }\r\n        continue;\r\n      }\r\n      space(\" \");\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfilterText.normalize = (codePoint: CodePoint): CodePoint => {\r\n  return replace(codePoint) ?? codePoint;\r\n};\r\n","import { type CodePoint } from \"@mkboard/unicode\";\r\n\r\ntype Entry1 = [codePoint: CodePoint, f: number];\r\n\r\n/**\r\n * The unigram frequency table.\r\n */\r\nexport class Ngram1 implements Iterable<Entry1> {\r\n  readonly #alphabet: readonly CodePoint[];\r\n  readonly #data: Float64Array;\r\n\r\n  constructor(alphabet: readonly CodePoint[]) {\r\n    if (alphabet.length === 0) {\r\n      throw new TypeError();\r\n    }\r\n\r\n    this.#alphabet = alphabet;\r\n    this.#data = new Float64Array(alphabet.length);\r\n  }\r\n\r\n  *[Symbol.iterator](): IterableIterator<Entry1> {\r\n    const size = this.#alphabet.length;\r\n    for (let i = 0; i < size; i++) {\r\n      const f = this.#data[i];\r\n      if (f > 0) {\r\n        yield [this.#alphabet[i], f];\r\n      }\r\n    }\r\n  }\r\n\r\n  set(a: CodePoint, f: number): void {\r\n    this.#data[this.#indexOf(a)] = f;\r\n  }\r\n\r\n  add(a: CodePoint, f: number): void {\r\n    this.#data[this.#indexOf(a)] += f;\r\n  }\r\n\r\n  get(a: CodePoint): number {\r\n    return this.#data[this.#indexOf(a)];\r\n  }\r\n\r\n  normalize(): void {\r\n    normalize(this.#data);\r\n  }\r\n\r\n  toJSON() {\r\n    return [...this];\r\n  }\r\n\r\n  #indexOf(codePoint: CodePoint): number {\r\n    const index = this.#alphabet.indexOf(codePoint);\r\n    if (index < 0) {\r\n      throw new TypeError();\r\n    }\r\n    return index;\r\n  }\r\n}\r\n\r\ntype Entry2 = [codePoint0: CodePoint, codePoint1: CodePoint, f: number];\r\n\r\n/**\r\n * The bigram frequency table.\r\n */\r\nexport class Ngram2 implements Iterable<Entry2> {\r\n  readonly #alphabet: readonly CodePoint[];\r\n  readonly #data: Float64Array;\r\n\r\n  constructor(alphabet: readonly CodePoint[]) {\r\n    if (alphabet.length === 0) {\r\n      throw new TypeError();\r\n    }\r\n    this.#alphabet = alphabet;\r\n    this.#data = new Float64Array(alphabet.length * alphabet.length);\r\n  }\r\n\r\n  *[Symbol.iterator](): IterableIterator<Entry2> {\r\n    const size = this.#alphabet.length;\r\n    for (let i = 0; i < size; i++) {\r\n      for (let j = 0; j < size; j++) {\r\n        const f = this.#data[i * size + j];\r\n        if (f > 0) {\r\n          yield [this.#alphabet[i], this.#alphabet[j], f];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  set(a: CodePoint, b: CodePoint, f: number): void {\r\n    const size = this.#alphabet.length;\r\n    const i = this.#indexOf(a);\r\n    const j = this.#indexOf(b);\r\n    this.#data[i * size + j] = f;\r\n  }\r\n\r\n  add(a: CodePoint, b: CodePoint, f: number): void {\r\n    const size = this.#alphabet.length;\r\n    const i = this.#indexOf(a);\r\n    const j = this.#indexOf(b);\r\n    this.#data[i * size + j] += f;\r\n  }\r\n\r\n  get(a: CodePoint, b: CodePoint): number {\r\n    const size = this.#alphabet.length;\r\n    const i = this.#indexOf(a);\r\n    const j = this.#indexOf(b);\r\n    return this.#data[i * size + j];\r\n  }\r\n\r\n  normalize(): void {\r\n    normalize(this.#data);\r\n  }\r\n\r\n  toJSON() {\r\n    return [...this];\r\n  }\r\n\r\n  #indexOf(codePoint: CodePoint): number {\r\n    const index = this.#alphabet.indexOf(codePoint);\r\n    if (index < 0) {\r\n      throw new TypeError();\r\n    }\r\n    return index;\r\n  }\r\n}\r\n\r\nfunction normalize(data: Float64Array): void {\r\n  const { length } = data;\r\n  const sum = data.reduce((sum, f) => sum + f, 0);\r\n  if (sum > 0) {\r\n    for (let i = 0; i < length; i++) {\r\n      data[i] = data[i] / sum;\r\n    }\r\n  }\r\n}\r\n","import { type CodePoint } from \"@mkboard/unicode\";\r\nimport { type Keyboard } from \"./keyboard.ts\";\r\nimport { type KeyShape } from \"./keyshape.ts\";\r\nimport { type Ngram1, type Ngram2 } from \"./ngram.ts\";\r\nimport { type ZoneId } from \"./types.ts\";\r\n\r\nexport type KeyboardStats = {\r\n  readonly homeRow: number;\r\n  readonly topRow: number;\r\n  readonly bottomRow: number;\r\n  readonly handSwitches: number;\r\n  readonly fingerSwitches: number;\r\n};\r\n\r\nexport function computeStats(\r\n  keyboard: Keyboard,\r\n  ng1: Ngram1,\r\n  ng2: Ngram2,\r\n): KeyboardStats {\r\n  return {\r\n    homeRow: keysInZone(\"home\"),\r\n    topRow: keysInZone(\"top\"),\r\n    bottomRow: keysInZone(\"bottom\"),\r\n    handSwitches: handSwitches(),\r\n    fingerSwitches: fingerSwitches(),\r\n  };\r\n\r\n  function keysInZone(zone: ZoneId): number {\r\n    let a = 0;\r\n    let b = 0;\r\n    for (const [codePoint, f] of ng1) {\r\n      const shape = getShape(codePoint);\r\n      if (shape != null) {\r\n        if (shape.inZone(zone)) {\r\n          a += f;\r\n        } else {\r\n          b += f;\r\n        }\r\n      }\r\n    }\r\n    return a / (a + b);\r\n  }\r\n\r\n  function handSwitches(): number {\r\n    let a = 0;\r\n    let b = 0;\r\n    for (const [codePoint0, codePoint1, f] of ng2) {\r\n      const shape0 = getShape(codePoint0);\r\n      const shape1 = getShape(codePoint1);\r\n      if (\r\n        shape0 != null &&\r\n        shape1 != null &&\r\n        shape0.hand != null &&\r\n        shape1.hand != null\r\n      ) {\r\n        if (shape0.hand !== shape1.hand) {\r\n          a += f;\r\n        } else {\r\n          b += f;\r\n        }\r\n      }\r\n    }\r\n    return a / (a + b);\r\n  }\r\n\r\n  function fingerSwitches(): number {\r\n    let a = 0;\r\n    let b = 0;\r\n    for (const [codePoint0, codePoint1, f] of ng2) {\r\n      const shape0 = getShape(codePoint0);\r\n      const shape1 = getShape(codePoint1);\r\n      if (\r\n        shape0 != null &&\r\n        shape1 != null &&\r\n        shape0.finger != null &&\r\n        shape1.finger != null\r\n      ) {\r\n        if (shape0.finger !== shape1.finger) {\r\n          a += f;\r\n        } else {\r\n          b += f;\r\n        }\r\n      }\r\n    }\r\n    return a / (a + b);\r\n  }\r\n\r\n  function getShape(codePoint: CodePoint): KeyShape | null {\r\n    if (codePoint !== 0x0020) {\r\n      const combo = keyboard.getCombo(codePoint);\r\n      if (combo != null) {\r\n        const shape = keyboard.getShape(combo.id);\r\n        if (shape != null) {\r\n          return shape;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { useIntlDisplayNames } from \"@mkboard/intl\";\r\nimport { type Language } from \"./language.ts\";\r\nimport { type Layout } from \"./layout.ts\";\r\n\r\nexport const useFormattedNames = () => {\r\n  const dn = useIntlDisplayNames();\r\n  const formatLanguageName = (language: Language): string => {\r\n    return dn.formatLanguageName(language.id);\r\n  };\r\n  const formatLayoutName = (layout: Layout): string => {\r\n    return layout.name.replaceAll(/\\{([-A-Z]+)\\}/g, (regionId) => {\r\n      return dn.formatRegionName(regionId.substring(1, regionId.length - 1));\r\n    });\r\n  };\r\n  const formatFullLayoutName = (layout: Layout): string => {\r\n    return `${formatLanguageName(layout.language)}/${formatLayoutName(layout)}`;\r\n  };\r\n  return {\r\n    formatLanguageName,\r\n    formatLayoutName,\r\n    formatFullLayoutName,\r\n  };\r\n};\r\n","import { useCallback, useEffect, useRef } from \"react\";\nimport { useWindowEvent } from \"./use-window-event.ts\";\n\ntype HotkeyMap = Record<string, Handler>;\ntype Handler = (event: KeyEvent) => void;\ntype KeyEvent = {\n  readonly key: string;\n  readonly code: string;\n  readonly altKey: boolean;\n  readonly ctrlKey: boolean;\n  readonly metaKey: boolean;\n  readonly shiftKey: boolean;\n  preventDefault(): void;\n  stopPropagation(): void;\n};\ntype Hotkey = {\n  readonly alt: boolean;\n  readonly ctrl: boolean;\n  readonly meta: boolean;\n  readonly shift: boolean;\n  readonly key: string;\n};\n\nexport const useHotkeys = (map: HotkeyMap): void => {\n  useWindowEvent(\"keydown\", useHotkeysHandler(map));\n};\n\nexport const useHotkeysHandler = (map: HotkeyMap) => {\n  const ref = useRef<[Hotkey, Handler][]>([]);\n  useEffect(() => {\n    ref.current = parseHotkeyMap(map);\n  }, [map]);\n  return useCallback((event: KeyEvent): void => {\n    for (const [hotkey, handler] of ref.current) {\n      if (\n        (event.key === hotkey.key || event.code === hotkey.key) &&\n        event.altKey === hotkey.alt &&\n        event.ctrlKey === hotkey.ctrl &&\n        event.metaKey === hotkey.meta &&\n        event.shiftKey === hotkey.shift\n      ) {\n        event.preventDefault();\n        event.stopPropagation();\n        handler(event);\n      }\n    }\n  }, []);\n};\n\nconst parseHotkeyMap = (map: HotkeyMap): [Hotkey, Handler][] => {\n  return Object.entries(map) //\n    .map(([spec, handler]) => [parseHotkey(spec), handler]);\n};\n\nconst hotkeyCache = new Map<string, Hotkey>();\n\nconst parseHotkey = (spec: string): Hotkey => {\n  let hotkey = hotkeyCache.get(spec);\n  if (hotkey == null) {\n    const error = () => {\n      throw new TypeError(\n        process.env.NODE_ENV !== \"production\"\n          ? `Invalid hotkey [${spec}]`\n          : undefined,\n      );\n    };\n    const parsed = {\n      alt: false,\n      ctrl: false,\n      meta: false,\n      shift: false,\n      key: \"\",\n    };\n    const keys = spec.split(\"+\");\n    while (keys.length > 0) {\n      const key = keys.shift()!;\n      switch (key) {\n        case \"Alt\":\n          if (parsed.alt) {\n            error();\n          } else {\n            parsed.alt = true;\n          }\n          break;\n        case \"Ctrl\":\n          if (parsed.ctrl) {\n            error();\n          } else {\n            parsed.ctrl = true;\n          }\n          break;\n        case \"Meta\":\n          if (parsed.meta) {\n            error();\n          } else {\n            parsed.meta = true;\n          }\n          break;\n        case \"Shift\":\n          if (parsed.shift) {\n            error();\n          } else {\n            parsed.shift = true;\n          }\n          break;\n        default:\n          if (keys.length === 0) {\n            parsed.key = key;\n          } else {\n            error();\n          }\n          break;\n      }\n    }\n    if (parsed.key === \"\") {\n      error();\n    }\n    hotkeyCache.set(spec, (hotkey = parsed));\n  }\n  return hotkey;\n};\n","// extracted by mini-css-extract-plugin\nvar _1 = \"xqLB7WSlLf\";\nvar _2 = \"daIFkxLJ8o\";\nvar _3 = \"WBfB9HoFEC\";\nvar _4 = \"yfNAjUCu49\";\nvar _5 = \"CLsKa4YHJ2\";\nexport { _1 as \"name\", _2 as \"nameValue\", _3 as \"value\", _4 as \"value_less\", _5 as \"value_more\" }\n","import { clsx } from \"clsx\";\nimport { isValidElement, type ReactElement, type ReactNode } from \"react\";\nimport * as styles from \"./NameValue.module.less\";\nimport {\n  type NameProps,\n  type NameValueProps,\n  type ValueProps,\n} from \"./NameValue.types.ts\";\n\nexport function NameValue({\n  className,\n  title,\n  name,\n  value,\n}: NameValueProps): ReactNode {\n  return (\n    <span className={clsx(styles.nameValue, className)} title={title}>\n      {asName(name)}\n      {asValue(value)}\n    </span>\n  );\n}\n\nexport function asName(v: any): ReactElement<NameProps> {\n  if (isValidElement<NameProps>(v) && v.type === Name) {\n    return v;\n  } else {\n    return <Name name={v} />;\n  }\n}\n\nexport function Name({\n  className,\n  title,\n  name,\n  children,\n}: NameProps): ReactNode {\n  return (\n    <span className={clsx(styles.name, className)} title={title}>\n      {children || name + \":\"}\n    </span>\n  );\n}\n\nexport function asValue(v: any): ReactElement<ValueProps> {\n  if (isValidElement<ValueProps>(v) && v.type === Value) {\n    return v;\n  } else {\n    return <Value value={v} />;\n  }\n}\n\nexport function Value({\n  className,\n  title,\n  value,\n  delta,\n  children,\n}: ValueProps): ReactNode {\n  return (\n    <span\n      className={clsx(\n        styles.value,\n        delta != null && delta > 0 && styles.value_more,\n        delta != null && delta < 0 && styles.value_less,\n        className,\n      )}\n      title={title}\n    >\n      {children || value}\n    </span>\n  );\n}\n","// extracted by mini-css-extract-plugin\nvar _1 = \"zrY6NJLsjU\";\nvar _2 = \"AI6J9sOmuY\";\nvar _3 = \"hZTBp9XL78\";\nvar _4 = \"MWiSksyIWM\";\nvar _5 = \"S4NToTgmky\";\nvar _6 = \"HtD99cMB1D\";\nvar _7 = \"P1CnCpeaDm\";\nexport { _1 as \"root\", _2 as \"size1\", _3 as \"size10\", _4 as \"size2\", _5 as \"size3\", _6 as \"size4\", _7 as \"size5\" }\n","import { clsx } from \"clsx\";\nimport { type ReactNode } from \"react\";\nimport * as styles from \"./Spacer.module.less\";\nimport { type SpacerProps } from \"./Spacer.types.ts\";\n\nexport function Spacer({ size }: SpacerProps): ReactNode {\n  return (\n    <div\n      className={clsx(styles.root, {\n        [styles.size1]: size === 1,\n        [styles.size2]: size === 2,\n        [styles.size3]: size === 3,\n        [styles.size4]: size === 4,\n        [styles.size5]: size === 5,\n        [styles.size10]: size === 10,\n      })}\n    />\n  );\n}\n","// extracted by mini-css-extract-plugin\nvar _1 = \"x2Lg63l40b\";\nvar _2 = \"xPHSMfj6EY\";\nvar _3 = \"DSVNbzFzsR\";\nvar _4 = \"i_dDEYeVeB\";\nvar _5 = \"R_XuxEXYdY\";\nvar _6 = \"ewkZ4Qssea\";\nexport { _1 as \"disabled\", _2 as \"focused\", _3 as \"placeholder\", _4 as \"placeholderArrow\", _5 as \"placeholderName\", _6 as \"root\" }\n","import { clsx } from \"clsx\";\nimport { type ReactNode, useRef } from \"react\";\nimport { sizeClassName, type SizeName } from \"../../styles/index.ts\";\nimport {\n  type FocusProps,\n  type KeyboardProps,\n  type MouseProps,\n} from \"../types.ts\";\nimport { type OptionListOption } from \"./OptionList.types.ts\";\nimport * as styles from \"./OptionListButton.module.less\";\n\nexport function OptionListButton({\n  children,\n  size,\n  disabled,\n  focused,\n  open,\n  option,\n  tabIndex,\n  title,\n  onClick,\n  ...props\n}: {\n  readonly children: ReactNode;\n  readonly size?: SizeName;\n  readonly focused: boolean;\n  readonly open: boolean;\n  readonly option: OptionListOption;\n  readonly title?: string;\n} & FocusProps &\n  MouseProps &\n  KeyboardProps): ReactNode {\n  const element = useRef<HTMLSpanElement>(null);\n  return (\n    <span\n      {...props}\n      ref={element}\n      className={clsx(\n        styles.root,\n        focused && styles.focused,\n        disabled && styles.disabled,\n        sizeClassName(size),\n      )}\n      tabIndex={disabled ? undefined : (tabIndex ?? 0)}\n      title={title}\n    >\n      <span className={styles.placeholder} onClick={onClick}>\n        <span className={styles.placeholderName}>{option.name}</span>\n        <span className={styles.placeholderArrow}>\n          {open ? \"\\u25BC\" : \"\\u25BA\"}\n        </span>\n      </span>\n      {children}\n    </span>\n  );\n}\n","// extracted by mini-css-extract-plugin\nvar _1 = \"niIew68kNI\";\nvar _2 = \"Xmi6VoMoPO\";\nvar _3 = \"zlz_HYXy2I\";\nexport { _1 as \"item\", _2 as \"item_selected\", _3 as \"root\" }\n","import { clsx } from \"clsx\";\nimport { type ReactNode, useEffect, useRef } from \"react\";\nimport { ensureVisible } from \"../../utils/index.ts\";\nimport * as iconStyles from \"../icon/Icon.module.less\";\nimport { type OptionListOption } from \"./OptionList.types.ts\";\nimport * as styles from \"./OptionListMenu.module.less\";\n\nexport function OptionListMenu({\n  options,\n  selectedOption,\n  onSelect,\n}: {\n  readonly options: readonly OptionListOption[];\n  readonly selectedOption: OptionListOption;\n  readonly onSelect: (value: OptionListOption) => void;\n}): ReactNode {\n  const list = useRef(null);\n  const item = useRef(null);\n  useEffect(() => {\n    ensureVisible(list.current, item.current);\n  });\n  return (\n    <ul ref={list} role=\"menu\" className={styles.root}>\n      {options.map((option, index) => (\n        <li\n          key={index}\n          ref={option === selectedOption ? item : null}\n          role=\"menuitem\"\n          className={clsx(\n            styles.item,\n            iconStyles.altIcon,\n            option === selectedOption && styles.item_selected,\n          )}\n          onClick={(event) => {\n            event.preventDefault();\n            onSelect(option);\n          }}\n        >\n          {option.name}\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { type ReactNode, useState } from \"react\";\nimport { useHotkeysHandler } from \"../../hooks/use-hotkeys.ts\";\nimport { type OptionListProps } from \"./OptionList.types.ts\";\nimport { OptionListButton } from \"./OptionListButton.tsx\";\nimport { OptionListMenu } from \"./OptionListMenu.tsx\";\n\nexport function OptionList({\n  disabled,\n  options,\n  size,\n  tabIndex,\n  title,\n  value,\n  onBlur,\n  onFocus,\n  onSelect,\n  ...props\n}: OptionListProps): ReactNode {\n  const [focused, setFocused] = useState(false);\n  const {\n    open,\n    setOpen,\n    option,\n    selectedOption,\n    handleOpen,\n    handleNavigate,\n    handleSelect,\n  } = useOptionList({\n    disabled,\n    options,\n    value,\n    onSelect,\n  });\n  return (\n    <OptionListButton\n      {...props}\n      focused={focused}\n      open={open}\n      option={option}\n      size={size}\n      tabIndex={tabIndex}\n      title={title}\n      onBlur={(event) => {\n        if (!disabled) {\n          setFocused(false);\n          setOpen(false);\n          if (onBlur != null) {\n            onBlur(event);\n          }\n        }\n      }}\n      onFocus={(event) => {\n        if (!disabled) {\n          setFocused(true);\n          if (onFocus != null) {\n            onFocus(event);\n          }\n        }\n      }}\n      onKeyDown={useHotkeysHandler({\n        [\"Space\"]: handleOpen,\n        [\"Enter\"]: handleSelect,\n        [\"Home\"]: () => handleNavigate(\"first\"),\n        [\"ArrowUp\"]: () => handleNavigate(\"prev\"),\n        [\"ArrowDown\"]: () => handleNavigate(\"next\"),\n        [\"End\"]: () => handleNavigate(\"last\"),\n      })}\n      onClick={(event) => {\n        event.preventDefault();\n        handleOpen();\n      }}\n    >\n      {open && (\n        <OptionListMenu\n          options={options}\n          selectedOption={selectedOption}\n          onSelect={(option) => {\n            setOpen(false);\n            if (onSelect != null) {\n              onSelect(option.value);\n            }\n          }}\n        />\n      )}\n    </OptionListButton>\n  );\n}\n\nfunction useOptionList({\n  options,\n  disabled,\n  value,\n  onSelect,\n}: OptionListProps) {\n  const option = options.find((option) => option.value === value) ?? {\n    value: \"\",\n    name: \"-\",\n  };\n\n  const [open, setOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(option);\n\n  const handleOpen = () => {\n    if (disabled) {\n      return;\n    }\n    if (!open) {\n      setOpen(true);\n      setSelectedOption(option);\n    } else {\n      setOpen(false);\n    }\n  };\n\n  const handleNavigate = (dir: \"first\" | \"prev\" | \"next\" | \"last\") => {\n    if (disabled) {\n      return;\n    }\n    if (!open) {\n      setOpen(true);\n      setSelectedOption(option);\n    } else {\n      const { length } = options;\n      let index = options.indexOf(selectedOption);\n      if (index === -1) {\n        index = 0;\n      }\n      switch (dir) {\n        case \"first\":\n          index = 0;\n          break;\n        case \"prev\":\n          index -= 1;\n          if (index < 0) {\n            index = length - 1;\n          }\n          break;\n        case \"next\":\n          index += 1;\n          if (index >= length) {\n            index = 0;\n          }\n          break;\n        case \"last\":\n          index = length - 1;\n          break;\n      }\n      setSelectedOption(options[index]);\n    }\n  };\n\n  const handleSelect = () => {\n    if (disabled) {\n      return;\n    }\n    if (open) {\n      setOpen(false);\n      if (onSelect != null) {\n        onSelect(selectedOption.value);\n      }\n    }\n  };\n\n  return {\n    open,\n    setOpen,\n    option,\n    selectedOption,\n    handleOpen,\n    handleNavigate,\n    handleSelect,\n  };\n}\n","import { type RNG } from \"./types.ts\";\n\n/**\n * Selects a random element from the given list of uniform elements.\n * @param list A list of uniform elements to sample from.\n * @param random A random number generator function.\n * @return A random element sampled from the list.\n */\nexport function randomSample<T>(\n  list: readonly T[],\n  random: RNG = Math.random,\n): T {\n  const { length } = list;\n  if (length === 0) {\n    throw new Error();\n  }\n  return list[(random() * length) | 0];\n}\n\n/**\n * Selects a random element from the given list of weighted elements.\n * @param list A list of weighted elements to sample from.\n * @param weight A function that gives weights to elements.\n * @param random A random number generator function.\n * @return A random element sampled from the list.\n */\nexport function weightedRandomSample<T>(\n  list: readonly T[],\n  weight: (v: T) => number,\n  random: RNG = Math.random,\n): T {\n  const { length } = list;\n  if (length === 0) {\n    throw new Error();\n  }\n  let sum = 0;\n  for (const v of list) {\n    sum += weight(v);\n  }\n  let r = random() * sum;\n  for (const v of list) {\n    const w = weight(v);\n    if (r <= w) {\n      return v;\n    }\n    r -= w;\n  }\n  throw new Error();\n}\n\n/**\n * Selects a subset of random elements without replacement of the given size\n * from the given list of uniform elements.\n * @param list A list of uniform elements to sample from.\n * @param size The number of unique elements to sample.\n * @param random A random number generator function.\n * @return A subset of random unique elements sampled from the list.\n */\nexport function randomSamples<T>(\n  list: readonly T[],\n  size: number,\n  random: RNG = Math.random,\n): T[] {\n  const { length } = list;\n  if (size > length) {\n    throw new Error();\n  }\n  const shuffled = [...list];\n  for (let i = 0; i < size; i++) {\n    const j = (i + random() * (length - i)) | 0;\n    const tmp = shuffled[i];\n    shuffled[i] = shuffled[j];\n    shuffled[j] = tmp;\n  }\n  return shuffled.slice(0, size);\n}\n","import { type CodePoint } from \"./types.ts\";\n\nexport const isCodePoint = (value: number): boolean =>\n  Number.isSafeInteger(value) && value >= 0 && value < 0x11_0000;\n\nexport const charCount = (codePoint: CodePoint): number =>\n  codePoint >= 0x01_0000 ? 2 : 1;\n\nexport const toCodePoints = (text: string): Iterable<CodePoint> => {\n  const { length } = text;\n  return {\n    [Symbol.iterator](): IterableIterator<CodePoint> {\n      let index = 0;\n      const result = { done: true, value: -1 } as IteratorResult<CodePoint>;\n      const iterator = {\n        [Symbol.iterator](): IterableIterator<CodePoint> {\n          return iterator;\n        },\n        next(): IteratorResult<CodePoint> {\n          if (index < length) {\n            const codePoint = text.codePointAt(index) ?? 0;\n            index += charCount(codePoint);\n            result.done = false;\n            result.value = codePoint;\n          } else {\n            result.done = true;\n            result.value = -1;\n          }\n          return result;\n        },\n      };\n      return iterator;\n    },\n  };\n};\n\nexport const codePointLength = (text: string): number => {\n  const it = toCodePoints(text)[Symbol.iterator]();\n  let length = 0;\n  while (true) {\n    const { done } = it.next();\n    if (done) {\n      return length;\n    }\n    length += 1;\n  }\n};\n","// https://en.wikipedia.org/wiki/Combining_character\n// https://en.wikipedia.org/wiki/Diacritic\n// https://en.wikipedia.org/wiki/List_of_precomposed_Latin_characters_in_Unicode\n// https://bepo.fr/wiki/Touches_mortes\n\nimport { type CodePoint } from \"./types.ts\";\n\nconst toCombined = new Map<number, CodePoint>();\nconst toBase = new Map<CodePoint, CodePoint>();\n\nexport const isDiacritic = (codePoint: CodePoint): boolean =>\n  codePoint >= 0x0300 && codePoint <= 0x036f;\n\nexport const combineDiacritic = (\n  base: CodePoint,\n  combining: CodePoint,\n): CodePoint => {\n  return toCombined.get((combining << 16) | base) ?? base;\n};\n\nexport const stripDiacritic = (combined: CodePoint): CodePoint => {\n  return toBase.get(combined) ?? combined;\n};\n\nfor (const [codePoint, baseList, combinedList] of [\n  [\n    /* COMBINING GRAVE ACCENT */ 0x0300, //\n    \"AEINOUWYaeinouwy\",\n    \"ÀÈÌǸÒÙẀỲàèìǹòùẁỳ\",\n  ],\n  [\n    /* COMBINING ACUTE ACCENT */ 0x0301, //\n    \"ACEGIKLMNOPRSUWYZacegiklmnoprsuwyzΑΕΗΙΟΥΩαεηιουω\",\n    \"ÁĆÉǴÍḰĹḾŃÓṔŔŚÚẂÝŹáćéǵíḱĺḿńóṕŕśúẃýźΆΈΉΊΌΎΏάέήίόύώ\",\n  ],\n  [\n    /* COMBINING CIRCUMFLEX ACCENT */ 0x0302, //\n    \"ACEGHIJOSUWYZaceghijosuwyz\",\n    \"ÂĈÊĜĤÎĴÔŜÛŴŶẐâĉêĝĥîĵôŝûŵŷẑ\",\n  ],\n  [\n    /* COMBINING TILDE */ 0x0303, //\n    \"AEINOUVYaeinouvy\",\n    \"ÃẼĨÑÕŨṼỸãẽĩñõũṽỹ\",\n  ],\n  [\n    /* COMBINING MACRON */ 0x0304, //\n    \"AEGIOUYaegiouy\",\n    \"ĀĒḠĪŌŪȲāēḡīōūȳ\",\n  ],\n  [\n    /* COMBINING BREVE */ 0x0306, //\n    \"AEGIOUaegiou\",\n    \"ĂĔĞĬŎŬăĕğĭŏŭ\",\n  ],\n  [\n    /* COMBINING DOT ABOVE */ 0x0307,\n    \"ABCDEFGHIMNOPRSTWXYZabcdefghmnoprstwxyz\",\n    \"ȦḂĊḊĖḞĠḢİṀṄȮṖṘṠṪẆẊẎŻȧḃċḋėḟġḣṁṅȯṗṙṡṫẇẋẏż\",\n  ],\n  [\n    /* COMBINING DIAERESIS */ 0x0308, //\n    \"AEHIOUWXYaehiotuwxyΙΥιυ\",\n    \"ÄËḦÏÖÜẄẌŸäëḧïöẗüẅẍÿΪΫϊϋ\",\n  ],\n  [\n    /* COMBINING RING ABOVE */ 0x030a, //\n    \"AUauwy\",\n    \"ÅŮåůẘẙ\",\n  ],\n  [\n    /* COMBINING DOUBLE ACUTE ACCENT */ 0x030b, //\n    \"OUou\",\n    \"ŐŰőű\",\n  ],\n  [\n    /* COMBINING CARON */ 0x030c, //\n    \"ACDEGHIKLNORSTUZacdeghijklnorstuz\",\n    \"ǍČĎĚǦȞǏǨĽŇǑŘŠŤǓŽǎčďěǧȟǐǰǩľňǒřšťǔž\",\n  ],\n  [\n    /* COMBINING DOUBLE GRAVE ACCENT */ 0x030f, //\n    \"AEIORUaeioru\",\n    \"ȀȄȈȌȐȔȁȅȉȍȑȕ\",\n  ],\n  [\n    /* COMBINING CEDILLA */ 0x0327, //\n    \"CDEGHKLNRSTcdeghklnrst\",\n    \"ÇḐȨĢḨĶĻŅŖŞŢçḑȩģḩķļņŗşţ\",\n  ],\n  [\n    /* COMBINING OGONEK */ 0x0328, //\n    \"AEIOUaeiou\",\n    \"ĄĘĮǪŲąęįǫų\",\n  ],\n] as [CodePoint, string, string][]) {\n  for (let i = 0; i < baseList.length; i++) {\n    const base = baseList.codePointAt(i)!;\n    const combined = combinedList.codePointAt(i)!;\n    toCombined.set((codePoint << 16) | base, combined);\n    toBase.set(combined, base);\n  }\n}\n","import { type CodePoint } from \"./types.ts\";\n\nexport function formatCodePoint(codePoint: CodePoint): string {\n  return \"U+\" + codePoint.toString(16).padStart(4, \"0\");\n}\n","import { type CodePoint } from \"./types.ts\";\n\nexport function expand(codePoint: CodePoint): readonly CodePoint[] | null {\n  return expandMap.get(codePoint) ?? null;\n}\n\nexport function replace(codePoint: CodePoint): CodePoint | null {\n  return replaceMap.get(codePoint) ?? null;\n}\n\nconst expandMap = ((data: [to: CodePoint[], from: CodePoint[]][]) => {\n  const map = new Map<CodePoint, readonly CodePoint[]>();\n  for (const [to, from] of data) {\n    for (const codePoint of from) {\n      map.set(codePoint, to);\n    }\n  }\n  return map;\n})([\n  // ----- Letters -----\n  [\n    [/* \"A\" */ 0x0041],\n    [\n      /* \"À\" */ 0x00c0, /* \"Á\" */ 0x00c1, /* \"Â\" */ 0x00c2, /* \"Ã\" */ 0x00c3,\n      /* \"Ä\" */ 0x00c4, /* \"Å\" */ 0x00c5, /* \"Ā\" */ 0x0100, /* \"Ă\" */ 0x0102,\n      /* \"Ą\" */ 0x0104, /* \"Ǎ\" */ 0x01cd, /* \"Ǟ\" */ 0x01de, /* \"Ǡ\" */ 0x01e0,\n      /* \"Ǻ\" */ 0x01fa, /* \"Ȁ\" */ 0x0200, /* \"Ȃ\" */ 0x0202, /* \"Ȧ\" */ 0x0226,\n      /* \"Ⱥ\" */ 0x023a, /* \"Ḁ\" */ 0x1e00, /* \"Ạ\" */ 0x1ea0, /* \"Ả\" */ 0x1ea2,\n      /* \"Ấ\" */ 0x1ea4, /* \"Ầ\" */ 0x1ea6, /* \"Ẩ\" */ 0x1ea8, /* \"Ẫ\" */ 0x1eaa,\n      /* \"Ậ\" */ 0x1eac, /* \"Ắ\" */ 0x1eae, /* \"Ằ\" */ 0x1eb0, /* \"Ẳ\" */ 0x1eb2,\n      /* \"Ẵ\" */ 0x1eb4, /* \"Ặ\" */ 0x1eb6, /* \"Ⓐ\" */ 0x24b6, /* \"Ɐ\" */ 0x2c6f,\n      /* \"Ａ\" */ 0xff21,\n    ],\n  ],\n  [[/* \"A\" */ 0x0041, /* \"A\" */ 0x0041], [/* \"Ꜳ\" */ 0xa732]],\n  [\n    [/* \"A\" */ 0x0041, /* \"E\" */ 0x0045],\n    [/* \"Æ\" */ 0x00c6, /* \"Ǣ\" */ 0x01e2, /* \"Ǽ\" */ 0x01fc],\n  ],\n  [[/* \"A\" */ 0x0041, /* \"O\" */ 0x004f], [/* \"Ꜵ\" */ 0xa734]],\n  [[/* \"A\" */ 0x0041, /* \"U\" */ 0x0055], [/* \"Ꜷ\" */ 0xa736]],\n  [\n    [/* \"A\" */ 0x0041, /* \"V\" */ 0x0056],\n    [/* \"Ꜹ\" */ 0xa738, /* \"Ꜻ\" */ 0xa73a],\n  ],\n  [[/* \"A\" */ 0x0041, /* \"Y\" */ 0x0059], [/* \"Ꜽ\" */ 0xa73c]],\n  [\n    [/* \"B\" */ 0x0042],\n    [\n      /* \"Ɓ\" */ 0x0181, /* \"Ƀ\" */ 0x0243, /* \"Ḃ\" */ 0x1e02, /* \"Ḅ\" */ 0x1e04,\n      /* \"Ḇ\" */ 0x1e06, /* \"Ⓑ\" */ 0x24b7, /* \"Ｂ\" */ 0xff22,\n    ],\n  ],\n  [\n    [/* \"C\" */ 0x0043],\n    [\n      /* \"C\" */ 0x0043, /* \"Ç\" */ 0x00c7, /* \"Ć\" */ 0x0106, /* \"Ĉ\" */ 0x0108,\n      /* \"Ċ\" */ 0x010a, /* \"Č\" */ 0x010c, /* \"Ƈ\" */ 0x0187, /* \"Ȼ\" */ 0x023b,\n      /* \"Ḉ\" */ 0x1e08, /* \"Ⓒ\" */ 0x24b8, /* \"Ꜿ\" */ 0xa73e, /* \"Ｃ\" */ 0xff23,\n    ],\n  ],\n  [\n    [/* \"D\" */ 0x0044],\n    [\n      /* \"Ď\" */ 0x010e, /* \"Đ\" */ 0x0110, /* \"Ɖ\" */ 0x0189, /* \"Ɗ\" */ 0x018a,\n      /* \"ᴅ\" */ 0x1d05, /* \"Ḋ\" */ 0x1e0a, /* \"Ḍ\" */ 0x1e0c, /* \"Ḏ\" */ 0x1e0e,\n      /* \"Ḑ\" */ 0x1e10, /* \"Ḓ\" */ 0x1e12, /* \"Ⓓ\" */ 0x24b9, /* \"Ꝺ\" */ 0xa779,\n      /* \"Ｄ\" */ 0xff24,\n    ],\n  ],\n  [\n    [/* \"D\" */ 0x0044, /* \"Z\" */ 0x005a],\n    [/* \"Ǆ\" */ 0x01c4, /* \"Ǳ\" */ 0x01f1],\n  ],\n  [[/* \"D\" */ 0x0044, /* \"h\" */ 0x0068], [/* \"Ð\" */ 0x00d0]],\n  [\n    [/* \"D\" */ 0x0044, /* \"z\" */ 0x007a],\n    [/* \"ǅ\" */ 0x01c5, /* \"ǲ\" */ 0x01f2],\n  ],\n  [\n    [/* \"E\" */ 0x0045],\n    [\n      /* \"È\" */ 0x00c8, /* \"É\" */ 0x00c9, /* \"Ê\" */ 0x00ca, /* \"Ë\" */ 0x00cb,\n      /* \"Ē\" */ 0x0112, /* \"Ĕ\" */ 0x0114, /* \"Ė\" */ 0x0116, /* \"Ę\" */ 0x0118,\n      /* \"Ě\" */ 0x011a, /* \"Ǝ\" */ 0x018e, /* \"Ɛ\" */ 0x0190, /* \"Ȅ\" */ 0x0204,\n      /* \"Ȇ\" */ 0x0206, /* \"Ȩ\" */ 0x0228, /* \"ɛ\" */ 0x025b, /* \"ᴇ\" */ 0x1d07,\n      /* \"Ḕ\" */ 0x1e14, /* \"Ḗ\" */ 0x1e16, /* \"Ḙ\" */ 0x1e18, /* \"Ḛ\" */ 0x1e1a,\n      /* \"Ḝ\" */ 0x1e1c, /* \"Ẹ\" */ 0x1eb8, /* \"Ẻ\" */ 0x1eba, /* \"Ẽ\" */ 0x1ebc,\n      /* \"Ế\" */ 0x1ebe, /* \"Ề\" */ 0x1ec0, /* \"Ể\" */ 0x1ec2, /* \"Ễ\" */ 0x1ec4,\n      /* \"Ệ\" */ 0x1ec6, /* \"Ⓔ\" */ 0x24ba, /* \"Ｅ\" */ 0xff25,\n    ],\n  ],\n  [\n    [/* \"F\" */ 0x0046],\n    [\n      /* \"Ƒ\" */ 0x0191, /* \"Ḟ\" */ 0x1e1e, /* \"Ⓕ\" */ 0x24bb, /* \"Ꝼ\" */ 0xa77b,\n      /* \"ꝼ\" */ 0xa77c, /* \"Ｆ\" */ 0xff26,\n    ],\n  ],\n  [\n    [/* \"G\" */ 0x0047],\n    [\n      /* \"Ĝ\" */ 0x011c, /* \"Ğ\" */ 0x011e, /* \"Ġ\" */ 0x0120, /* \"Ģ\" */ 0x0122,\n      /* \"Ɠ\" */ 0x0193, /* \"Ǥ\" */ 0x01e4, /* \"Ǧ\" */ 0x01e6, /* \"Ǵ\" */ 0x01f4,\n      /* \"ɢ\" */ 0x0262, /* \"Ḡ\" */ 0x1e20, /* \"Ⓖ\" */ 0x24bc, /* \"Ᵹ\" */ 0xa77d,\n      /* \"Ꝿ\" */ 0xa77e, /* \"Ꞡ\" */ 0xa7a0, /* \"Ｇ\" */ 0xff27,\n    ],\n  ],\n  [\n    [/* \"H\" */ 0x0048],\n    [\n      /* \"Ĥ\" */ 0x0124, /* \"Ħ\" */ 0x0126, /* \"Ȟ\" */ 0x021e, /* \"Ḣ\" */ 0x1e22,\n      /* \"Ḥ\" */ 0x1e24, /* \"Ḧ\" */ 0x1e26, /* \"Ḩ\" */ 0x1e28, /* \"Ḫ\" */ 0x1e2a,\n      /* \"Ⓗ\" */ 0x24bd, /* \"Ⱨ\" */ 0x2c67, /* \"Ⱶ\" */ 0x2c75, /* \"Ɥ\" */ 0xa78d,\n      /* \"Ｈ\" */ 0xff28,\n    ],\n  ],\n  [\n    [/* \"I\" */ 0x0049],\n    [\n      /* \"Ì\" */ 0x00cc, /* \"Í\" */ 0x00cd, /* \"Î\" */ 0x00ce, /* \"Ï\" */ 0x00cf,\n      /* \"Ĩ\" */ 0x0128, /* \"Ī\" */ 0x012a, /* \"Ĭ\" */ 0x012c, /* \"Į\" */ 0x012e,\n      /* \"İ\" */ 0x0130, /* \"Ɨ\" */ 0x0197, /* \"Ǐ\" */ 0x01cf, /* \"Ȉ\" */ 0x0208,\n      /* \"Ȋ\" */ 0x020a, /* \"Ḭ\" */ 0x1e2c, /* \"Ḯ\" */ 0x1e2e, /* \"Ỉ\" */ 0x1ec8,\n      /* \"Ị\" */ 0x1eca, /* \"Ⓘ\" */ 0x24be, /* \"Ｉ\" */ 0xff29,\n    ],\n  ],\n  [\n    [/* \"J\" */ 0x004a],\n    [\n      /* \"Ĵ\" */ 0x0134, /* \"ȷ\" */ 0x0237, /* \"Ɉ\" */ 0x0248, /* \"Ⓙ\" */ 0x24bf,\n      /* \"Ｊ\" */ 0xff2a,\n    ],\n  ],\n  [\n    [/* \"K\" */ 0x004b],\n    [\n      /* \"Ķ\" */ 0x0136, /* \"Ƙ\" */ 0x0198, /* \"Ǩ\" */ 0x01e8, /* \"Ḱ\" */ 0x1e30,\n      /* \"Ḳ\" */ 0x1e32, /* \"Ḵ\" */ 0x1e34, /* \"Ⓚ\" */ 0x24c0, /* \"Ⱪ\" */ 0x2c69,\n      /* \"Ꝁ\" */ 0xa740, /* \"Ꝃ\" */ 0xa742, /* \"Ꝅ\" */ 0xa744, /* \"Ꞣ\" */ 0xa7a2,\n      /* \"Ｋ\" */ 0xff2b,\n    ],\n  ],\n  [\n    [/* \"L\" */ 0x004c],\n    [\n      /* \"Ĺ\" */ 0x0139, /* \"Ļ\" */ 0x013b, /* \"Ľ\" */ 0x013d, /* \"Ŀ\" */ 0x013f,\n      /* \"Ł\" */ 0x0141, /* \"Ƚ\" */ 0x023d, /* \"Ḷ\" */ 0x1e36, /* \"Ḹ\" */ 0x1e38,\n      /* \"Ḻ\" */ 0x1e3a, /* \"Ḽ\" */ 0x1e3c, /* \"Ⓛ\" */ 0x24c1, /* \"Ⱡ\" */ 0x2c60,\n      /* \"Ɫ\" */ 0x2c62, /* \"Ꝇ\" */ 0xa746, /* \"Ꝉ\" */ 0xa748, /* \"Ꞁ\" */ 0xa780,\n      /* \"Ｌ\" */ 0xff2c,\n    ],\n  ],\n  [[/* \"L\" */ 0x004c, /* \"J\" */ 0x004a], [/* \"Ǉ\" */ 0x01c7]],\n  [[/* \"L\" */ 0x004c, /* \"j\" */ 0x006a], [/* \"ǈ\" */ 0x01c8]],\n  [\n    [/* \"M\" */ 0x004d],\n    [\n      /* \"Ɯ\" */ 0x019c, /* \"ϻ\" */ 0x03fb, /* \"Ḿ\" */ 0x1e3e, /* \"Ṁ\" */ 0x1e40,\n      /* \"Ṃ\" */ 0x1e42, /* \"Ⓜ\" */ 0x24c2, /* \"Ɱ\" */ 0x2c6e, /* \"Ｍ\" */ 0xff2d,\n    ],\n  ],\n  [\n    [/* \"N\" */ 0x004e],\n    [\n      /* \"Ñ\" */ 0x00d1, /* \"Ń\" */ 0x0143, /* \"Ņ\" */ 0x0145, /* \"Ň\" */ 0x0147,\n      /* \"Ɲ\" */ 0x019d, /* \"Ǹ\" */ 0x01f8, /* \"Ƞ\" */ 0x0220, /* \"ᴎ\" */ 0x1d0e,\n      /* \"Ṅ\" */ 0x1e44, /* \"Ṇ\" */ 0x1e46, /* \"Ṉ\" */ 0x1e48, /* \"Ṋ\" */ 0x1e4a,\n      /* \"Ⓝ\" */ 0x24c3, /* \"Ꞑ\" */ 0xa790, /* \"Ꞥ\" */ 0xa7a4, /* \"Ｎ\" */ 0xff2e,\n    ],\n  ],\n  [[/* \"N\" */ 0x004e, /* \"J\" */ 0x004a], [/* \"Ǌ\" */ 0x01ca]],\n  [[/* \"N\" */ 0x004e, /* \"j\" */ 0x006a], [/* \"ǋ\" */ 0x01cb]],\n  [\n    [/* \"O\" */ 0x004f],\n    [\n      /* \"Ò\" */ 0x00d2, /* \"Ó\" */ 0x00d3, /* \"Ô\" */ 0x00d4, /* \"Õ\" */ 0x00d5,\n      /* \"Ö\" */ 0x00d6, /* \"Ø\" */ 0x00d8, /* \"Ō\" */ 0x014c, /* \"Ŏ\" */ 0x014e,\n      /* \"Ő\" */ 0x0150, /* \"Ɔ\" */ 0x0186, /* \"Ɵ\" */ 0x019f, /* \"Ơ\" */ 0x01a0,\n      /* \"Ǒ\" */ 0x01d1, /* \"Ǫ\" */ 0x01ea, /* \"Ǭ\" */ 0x01ec, /* \"Ǿ\" */ 0x01fe,\n      /* \"Ȍ\" */ 0x020c, /* \"Ȏ\" */ 0x020e, /* \"Ȫ\" */ 0x022a, /* \"Ȭ\" */ 0x022c,\n      /* \"Ȯ\" */ 0x022e, /* \"Ȱ\" */ 0x0230, /* \"Ṍ\" */ 0x1e4c, /* \"Ṏ\" */ 0x1e4e,\n      /* \"Ṑ\" */ 0x1e50, /* \"Ṓ\" */ 0x1e52, /* \"Ọ\" */ 0x1ecc, /* \"Ỏ\" */ 0x1ece,\n      /* \"Ố\" */ 0x1ed0, /* \"Ồ\" */ 0x1ed2, /* \"Ổ\" */ 0x1ed4, /* \"Ỗ\" */ 0x1ed6,\n      /* \"Ộ\" */ 0x1ed8, /* \"Ớ\" */ 0x1eda, /* \"Ờ\" */ 0x1edc, /* \"Ở\" */ 0x1ede,\n      /* \"Ỡ\" */ 0x1ee0, /* \"Ợ\" */ 0x1ee2, /* \"Ⓞ\" */ 0x24c4, /* \"Ꝋ\" */ 0xa74a,\n      /* \"Ꝍ\" */ 0xa74c, /* \"Ｏ\" */ 0xff2f,\n    ],\n  ],\n  [[/* \"O\" */ 0x004f, /* \"E\" */ 0x0045], [/* \"Œ\" */ 0x0152]],\n  [[/* \"O\" */ 0x004f, /* \"I\" */ 0x0049], [/* \"Ƣ\" */ 0x01a2]],\n  [[/* \"O\" */ 0x004f, /* \"O\" */ 0x004f], [/* \"Ꝏ\" */ 0xa74e]],\n  [[/* \"O\" */ 0x004f, /* \"U\" */ 0x0055], [/* \"Ȣ\" */ 0x0222]],\n  [\n    [/* \"P\" */ 0x0050],\n    [\n      /* \"Ƥ\" */ 0x01a4, /* \"Ṕ\" */ 0x1e54, /* \"Ṗ\" */ 0x1e56, /* \"Ⓟ\" */ 0x24c5,\n      /* \"Ᵽ\" */ 0x2c63, /* \"Ꝑ\" */ 0xa750, /* \"Ꝓ\" */ 0xa752, /* \"Ꝕ\" */ 0xa754,\n      /* \"Ｐ\" */ 0xff30,\n    ],\n  ],\n  [\n    [/* \"Q\" */ 0x0051],\n    [\n      /* \"Ɋ\" */ 0x024a, /* \"Ⓠ\" */ 0x24c6, /* \"Ꝗ\" */ 0xa756, /* \"Ꝙ\" */ 0xa758,\n      /* \"Ｑ\" */ 0xff31,\n    ],\n  ],\n  [\n    [/* \"R\" */ 0x0052],\n    [\n      /* \"Ŕ\" */ 0x0154, /* \"Ŗ\" */ 0x0156, /* \"Ř\" */ 0x0158, /* \"Ȑ\" */ 0x0210,\n      /* \"Ȓ\" */ 0x0212, /* \"Ɍ\" */ 0x024c, /* \"Ṙ\" */ 0x1e58, /* \"Ṛ\" */ 0x1e5a,\n      /* \"Ṝ\" */ 0x1e5c, /* \"Ṟ\" */ 0x1e5e, /* \"Ⓡ\" */ 0x24c7, /* \"Ɽ\" */ 0x2c64,\n      /* \"Ꝛ\" */ 0xa75a, /* \"Ꞃ\" */ 0xa782, /* \"Ꞧ\" */ 0xa7a6, /* \"Ｒ\" */ 0xff32,\n    ],\n  ],\n  [\n    [/* \"S\" */ 0x0053],\n    [\n      /* \"Ś\" */ 0x015a, /* \"Ŝ\" */ 0x015c, /* \"Ş\" */ 0x015e, /* \"Š\" */ 0x0160,\n      /* \"Ș\" */ 0x0218, /* \"Ṡ\" */ 0x1e60, /* \"Ṣ\" */ 0x1e62, /* \"Ṥ\" */ 0x1e64,\n      /* \"Ṧ\" */ 0x1e66, /* \"Ṩ\" */ 0x1e68, /* \"ẞ\" */ 0x1e9e, /* \"Ⓢ\" */ 0x24c8,\n      /* \"Ȿ\" */ 0x2c7e, /* \"Ꞅ\" */ 0xa784, /* \"Ꞩ\" */ 0xa7a8, /* \"Ｓ\" */ 0xff33,\n    ],\n  ],\n  [\n    [/* \"T\" */ 0x0054],\n    [\n      /* \"Ţ\" */ 0x0162, /* \"Ť\" */ 0x0164, /* \"Ŧ\" */ 0x0166, /* \"Ƭ\" */ 0x01ac,\n      /* \"Ʈ\" */ 0x01ae, /* \"Ț\" */ 0x021a, /* \"Ⱦ\" */ 0x023e, /* \"Ṫ\" */ 0x1e6a,\n      /* \"Ṭ\" */ 0x1e6c, /* \"Ṯ\" */ 0x1e6e, /* \"Ṱ\" */ 0x1e70, /* \"Ⓣ\" */ 0x24c9,\n      /* \"Ꞇ\" */ 0xa786, /* \"Ｔ\" */ 0xff34,\n    ],\n  ],\n  [[/* \"T\" */ 0x0054, /* \"Z\" */ 0x005a], [/* \"Ꜩ\" */ 0xa728]],\n  [[/* \"T\" */ 0x0054, /* \"h\" */ 0x0068], [/* \"Þ\" */ 0x00de]],\n  [\n    [/* \"U\" */ 0x0055],\n    [\n      /* \"Ù\" */ 0x00d9, /* \"Ú\" */ 0x00da, /* \"Û\" */ 0x00db, /* \"Ü\" */ 0x00dc,\n      /* \"Ũ\" */ 0x0168, /* \"Ū\" */ 0x016a, /* \"Ŭ\" */ 0x016c, /* \"Ů\" */ 0x016e,\n      /* \"Ű\" */ 0x0170, /* \"Ų\" */ 0x0172, /* \"Ư\" */ 0x01af, /* \"Ǔ\" */ 0x01d3,\n      /* \"Ǖ\" */ 0x01d5, /* \"Ǘ\" */ 0x01d7, /* \"Ǚ\" */ 0x01d9, /* \"Ǜ\" */ 0x01db,\n      /* \"Ȕ\" */ 0x0214, /* \"Ȗ\" */ 0x0216, /* \"Ʉ\" */ 0x0244, /* \"Ṳ\" */ 0x1e72,\n      /* \"Ṵ\" */ 0x1e74, /* \"Ṷ\" */ 0x1e76, /* \"Ṹ\" */ 0x1e78, /* \"Ṻ\" */ 0x1e7a,\n      /* \"Ụ\" */ 0x1ee4, /* \"Ủ\" */ 0x1ee6, /* \"Ứ\" */ 0x1ee8, /* \"Ừ\" */ 0x1eea,\n      /* \"Ử\" */ 0x1eec, /* \"Ữ\" */ 0x1eee, /* \"Ự\" */ 0x1ef0, /* \"Ⓤ\" */ 0x24ca,\n      /* \"Ｕ\" */ 0xff35,\n    ],\n  ],\n  [\n    [/* \"V\" */ 0x0056],\n    [\n      /* \"Ʋ\" */ 0x01b2, /* \"Ʌ\" */ 0x0245, /* \"Ṽ\" */ 0x1e7c, /* \"Ṿ\" */ 0x1e7e,\n      /* \"Ⓥ\" */ 0x24cb, /* \"Ꝟ\" */ 0xa75e, /* \"Ｖ\" */ 0xff36,\n    ],\n  ],\n  [[/* \"V\" */ 0x0056, /* \"Y\" */ 0x0059], [/* \"Ꝡ\" */ 0xa760]],\n  [\n    [/* \"W\" */ 0x0057],\n    [\n      /* \"Ŵ\" */ 0x0174, /* \"Ẁ\" */ 0x1e80, /* \"Ẃ\" */ 0x1e82, /* \"Ẅ\" */ 0x1e84,\n      /* \"Ẇ\" */ 0x1e86, /* \"Ẉ\" */ 0x1e88, /* \"Ⓦ\" */ 0x24cc, /* \"Ⱳ\" */ 0x2c72,\n      /* \"Ｗ\" */ 0xff37,\n    ],\n  ],\n  [\n    [/* \"X\" */ 0x0058],\n    [/* \"Ẋ\" */ 0x1e8a, /* \"Ẍ\" */ 0x1e8c, /* \"Ⓧ\" */ 0x24cd, /* \"Ｘ\" */ 0xff38],\n  ],\n  [\n    [/* \"Y\" */ 0x0059],\n    [\n      /* \"Ý\" */ 0x00dd, /* \"Ŷ\" */ 0x0176, /* \"Ÿ\" */ 0x0178, /* \"Ƴ\" */ 0x01b3,\n      /* \"Ȳ\" */ 0x0232, /* \"Ɏ\" */ 0x024e, /* \"Ẏ\" */ 0x1e8e, /* \"Ỳ\" */ 0x1ef2,\n      /* \"Ỵ\" */ 0x1ef4, /* \"Ỷ\" */ 0x1ef6, /* \"Ỹ\" */ 0x1ef8, /* \"Ỿ\" */ 0x1efe,\n      /* \"Ⓨ\" */ 0x24ce, /* \"Ｙ\" */ 0xff39,\n    ],\n  ],\n  [\n    [/* \"Z\" */ 0x005a],\n    [\n      /* \"Ź\" */ 0x0179, /* \"Ż\" */ 0x017b, /* \"Ž\" */ 0x017d, /* \"Ƶ\" */ 0x01b5,\n      /* \"Ȥ\" */ 0x0224, /* \"Ẑ\" */ 0x1e90, /* \"Ẓ\" */ 0x1e92, /* \"Ẕ\" */ 0x1e94,\n      /* \"Ⓩ\" */ 0x24cf, /* \"Ⱬ\" */ 0x2c6b, /* \"Ɀ\" */ 0x2c7f, /* \"Ꝣ\" */ 0xa762,\n      /* \"Ｚ\" */ 0xff3a,\n    ],\n  ],\n  [\n    [/* \"a\" */ 0x0061],\n    [\n      /* \"à\" */ 0x00e0, /* \"á\" */ 0x00e1, /* \"â\" */ 0x00e2, /* \"ã\" */ 0x00e3,\n      /* \"ä\" */ 0x00e4, /* \"å\" */ 0x00e5, /* \"ā\" */ 0x0101, /* \"ă\" */ 0x0103,\n      /* \"ą\" */ 0x0105, /* \"ǎ\" */ 0x01ce, /* \"ǟ\" */ 0x01df, /* \"ǡ\" */ 0x01e1,\n      /* \"ǻ\" */ 0x01fb, /* \"ȁ\" */ 0x0201, /* \"ȃ\" */ 0x0203, /* \"ȧ\" */ 0x0227,\n      /* \"ɐ\" */ 0x0250, /* \"ɑ\" */ 0x0251, /* \"ḁ\" */ 0x1e01, /* \"ẚ\" */ 0x1e9a,\n      /* \"ạ\" */ 0x1ea1, /* \"ả\" */ 0x1ea3, /* \"ấ\" */ 0x1ea5, /* \"ầ\" */ 0x1ea7,\n      /* \"ẩ\" */ 0x1ea9, /* \"ẫ\" */ 0x1eab, /* \"ậ\" */ 0x1ead, /* \"ắ\" */ 0x1eaf,\n      /* \"ằ\" */ 0x1eb1, /* \"ẳ\" */ 0x1eb3, /* \"ẵ\" */ 0x1eb5, /* \"ặ\" */ 0x1eb7,\n      /* \"ⓐ\" */ 0x24d0, /* \"ⱥ\" */ 0x2c65, /* \"ａ\" */ 0xff41,\n    ],\n  ],\n  [[/* \"a\" */ 0x0061, /* \"a\" */ 0x0061], [/* \"ꜳ\" */ 0xa733]],\n  [\n    [/* \"a\" */ 0x0061, /* \"e\" */ 0x0065],\n    [/* \"æ\" */ 0x00e6, /* \"ǣ\" */ 0x01e3, /* \"ǽ\" */ 0x01fd],\n  ],\n  [[/* \"a\" */ 0x0061, /* \"o\" */ 0x006f], [/* \"ꜵ\" */ 0xa735]],\n  [[/* \"a\" */ 0x0061, /* \"u\" */ 0x0075], [/* \"ꜷ\" */ 0xa737]],\n  [\n    [/* \"a\" */ 0x0061, /* \"v\" */ 0x0076],\n    [/* \"ꜹ\" */ 0xa739, /* \"ꜻ\" */ 0xa73b],\n  ],\n  [[/* \"a\" */ 0x0061, /* \"y\" */ 0x0079], [/* \"ꜽ\" */ 0xa73d]],\n  [\n    [/* \"b\" */ 0x0062],\n    [\n      /* \"ƀ\" */ 0x0180, /* \"Ƃ\" */ 0x0182, /* \"ƃ\" */ 0x0183, /* \"ɓ\" */ 0x0253,\n      /* \"ḃ\" */ 0x1e03, /* \"ḅ\" */ 0x1e05, /* \"ḇ\" */ 0x1e07, /* \"ⓑ\" */ 0x24d1,\n      /* \"ｂ\" */ 0xff42,\n    ],\n  ],\n  [\n    [/* \"c\" */ 0x0063],\n    [\n      /* \"ç\" */ 0x00e7, /* \"ć\" */ 0x0107, /* \"ĉ\" */ 0x0109, /* \"ċ\" */ 0x010b,\n      /* \"č\" */ 0x010d, /* \"ƈ\" */ 0x0188, /* \"ȼ\" */ 0x023c, /* \"ḉ\" */ 0x1e09,\n      /* \"ↄ\" */ 0x2184, /* \"ⓒ\" */ 0x24d2, /* \"ꜿ\" */ 0xa73f, /* \"ｃ\" */ 0xff43,\n    ],\n  ],\n  [\n    [/* \"d\" */ 0x0064],\n    [\n      /* \"ď\" */ 0x010f, /* \"đ\" */ 0x0111, /* \"Ƌ\" */ 0x018b, /* \"ƌ\" */ 0x018c,\n      /* \"ɖ\" */ 0x0256, /* \"ɗ\" */ 0x0257, /* \"ԁ\" */ 0x0501, /* \"Ꮷ\" */ 0x13e7,\n      /* \"ḋ\" */ 0x1e0b, /* \"ḍ\" */ 0x1e0d, /* \"ḏ\" */ 0x1e0f, /* \"ḑ\" */ 0x1e11,\n      /* \"ḓ\" */ 0x1e13, /* \"ⓓ\" */ 0x24d3, /* \"Ɦ\" */ 0xa7aa, /* \"ｄ\" */ 0xff44,\n    ],\n  ],\n  [[/* \"d\" */ 0x0064, /* \"h\" */ 0x0068], [/* \"ð\" */ 0x00f0]],\n  [\n    [/* \"d\" */ 0x0064, /* \"z\" */ 0x007a],\n    [/* \"ǆ\" */ 0x01c6, /* \"ǳ\" */ 0x01f3],\n  ],\n  [\n    [/* \"e\" */ 0x0065],\n    [\n      /* \"è\" */ 0x00e8, /* \"é\" */ 0x00e9, /* \"ê\" */ 0x00ea, /* \"ë\" */ 0x00eb,\n      /* \"ē\" */ 0x0113, /* \"ĕ\" */ 0x0115, /* \"ė\" */ 0x0117, /* \"ę\" */ 0x0119,\n      /* \"ě\" */ 0x011b, /* \"ǝ\" */ 0x01dd, /* \"ȅ\" */ 0x0205, /* \"ȇ\" */ 0x0207,\n      /* \"ȩ\" */ 0x0229, /* \"ɇ\" */ 0x0247, /* \"ḕ\" */ 0x1e15, /* \"ḗ\" */ 0x1e17,\n      /* \"ḙ\" */ 0x1e19, /* \"ḛ\" */ 0x1e1b, /* \"ḝ\" */ 0x1e1d, /* \"ẹ\" */ 0x1eb9,\n      /* \"ẻ\" */ 0x1ebb, /* \"ẽ\" */ 0x1ebd, /* \"ế\" */ 0x1ebf, /* \"ề\" */ 0x1ec1,\n      /* \"ể\" */ 0x1ec3, /* \"ễ\" */ 0x1ec5, /* \"ệ\" */ 0x1ec7, /* \"ⓔ\" */ 0x24d4,\n      /* \"ｅ\" */ 0xff45,\n    ],\n  ],\n  [\n    [/* \"f\" */ 0x0066],\n    [/* \"ƒ\" */ 0x0192, /* \"ḟ\" */ 0x1e1f, /* \"ⓕ\" */ 0x24d5, /* \"ｆ\" */ 0xff46],\n  ],\n  [[/* \"f\" */ 0x0066, /* \"f\" */ 0x0066], [/* \"ﬀ\" */ 0xfb00]],\n  [[/* \"f\" */ 0x0066, /* \"f\" */ 0x0066, /* \"i\" */ 0x0069], [/* \"ﬃ\" */ 0xfb03]],\n  [[/* \"f\" */ 0x0066, /* \"f\" */ 0x0066, /* \"l\" */ 0x006c], [/* \"ﬄ\" */ 0xfb04]],\n  [[/* \"f\" */ 0x0066, /* \"i\" */ 0x0069], [/* \"ﬁ\" */ 0xfb01]],\n  [[/* \"f\" */ 0x0066, /* \"l\" */ 0x006c], [/* \"ﬂ\" */ 0xfb02]],\n  [\n    [/* \"g\" */ 0x0067],\n    [\n      /* \"ĝ\" */ 0x011d, /* \"ğ\" */ 0x011f, /* \"ġ\" */ 0x0121, /* \"ģ\" */ 0x0123,\n      /* \"ǥ\" */ 0x01e5, /* \"ǧ\" */ 0x01e7, /* \"ǵ\" */ 0x01f5, /* \"ɠ\" */ 0x0260,\n      /* \"ᵹ\" */ 0x1d79, /* \"ḡ\" */ 0x1e21, /* \"ⓖ\" */ 0x24d6, /* \"ꝿ\" */ 0xa77f,\n      /* \"ꞡ\" */ 0xa7a1, /* \"ｇ\" */ 0xff47,\n    ],\n  ],\n  [\n    [/* \"h\" */ 0x0068],\n    [\n      /* \"ĥ\" */ 0x0125, /* \"ħ\" */ 0x0127, /* \"ȟ\" */ 0x021f, /* \"ɥ\" */ 0x0265,\n      /* \"ḣ\" */ 0x1e23, /* \"ḥ\" */ 0x1e25, /* \"ḧ\" */ 0x1e27, /* \"ḩ\" */ 0x1e29,\n      /* \"ḫ\" */ 0x1e2b, /* \"ẖ\" */ 0x1e96, /* \"ⓗ\" */ 0x24d7, /* \"ⱨ\" */ 0x2c68,\n      /* \"ⱶ\" */ 0x2c76, /* \"ｈ\" */ 0xff48,\n    ],\n  ],\n  [[/* \"h\" */ 0x0068, /* \"v\" */ 0x0076], [/* \"ƕ\" */ 0x0195]],\n  [\n    [/* \"i\" */ 0x0069],\n    [\n      /* \"ì\" */ 0x00ec, /* \"í\" */ 0x00ed, /* \"î\" */ 0x00ee, /* \"ï\" */ 0x00ef,\n      /* \"ĩ\" */ 0x0129, /* \"ī\" */ 0x012b, /* \"ĭ\" */ 0x012d, /* \"į\" */ 0x012f,\n      /* \"ı\" */ 0x0131, /* \"ǐ\" */ 0x01d0, /* \"ȉ\" */ 0x0209, /* \"ȋ\" */ 0x020b,\n      /* \"ɨ\" */ 0x0268, /* \"ḭ\" */ 0x1e2d, /* \"ḯ\" */ 0x1e2f, /* \"ỉ\" */ 0x1ec9,\n      /* \"ị\" */ 0x1ecb, /* \"ⓘ\" */ 0x24d8, /* \"ｉ\" */ 0xff49,\n    ],\n  ],\n  [\n    [/* \"j\" */ 0x006a],\n    [\n      /* \"ĵ\" */ 0x0135, /* \"ǰ\" */ 0x01f0, /* \"ɉ\" */ 0x0249, /* \"ⓙ\" */ 0x24d9,\n      /* \"ｊ\" */ 0xff4a,\n    ],\n  ],\n  [\n    [/* \"k\" */ 0x006b],\n    [\n      /* \"ķ\" */ 0x0137, /* \"ƙ\" */ 0x0199, /* \"ǩ\" */ 0x01e9, /* \"ḱ\" */ 0x1e31,\n      /* \"ḳ\" */ 0x1e33, /* \"ḵ\" */ 0x1e35, /* \"ⓚ\" */ 0x24da, /* \"ⱪ\" */ 0x2c6a,\n      /* \"ꝁ\" */ 0xa741, /* \"ꝃ\" */ 0xa743, /* \"ꝅ\" */ 0xa745, /* \"ꞣ\" */ 0xa7a3,\n      /* \"ｋ\" */ 0xff4b,\n    ],\n  ],\n  [\n    [/* \"l\" */ 0x006c],\n    [\n      /* \"ĺ\" */ 0x013a, /* \"ļ\" */ 0x013c, /* \"ľ\" */ 0x013e, /* \"ŀ\" */ 0x0140,\n      /* \"ł\" */ 0x0142, /* \"ſ\" */ 0x017f, /* \"ƚ\" */ 0x019a, /* \"ɫ\" */ 0x026b,\n      /* \"ɭ\" */ 0x026d, /* \"ḷ\" */ 0x1e37, /* \"ḹ\" */ 0x1e39, /* \"ḻ\" */ 0x1e3b,\n      /* \"ḽ\" */ 0x1e3d, /* \"ⓛ\" */ 0x24db, /* \"ⱡ\" */ 0x2c61, /* \"ꝇ\" */ 0xa747,\n      /* \"ꝉ\" */ 0xa749, /* \"ꞁ\" */ 0xa781, /* \"ｌ\" */ 0xff4c,\n    ],\n  ],\n  [[/* \"l\" */ 0x006c, /* \"j\" */ 0x006a], [/* \"ǉ\" */ 0x01c9]],\n  [\n    [/* \"m\" */ 0x006d],\n    [\n      /* \"ɯ\" */ 0x026f, /* \"ɱ\" */ 0x0271, /* \"ḿ\" */ 0x1e3f, /* \"ṁ\" */ 0x1e41,\n      /* \"ṃ\" */ 0x1e43, /* \"ⓜ\" */ 0x24dc, /* \"ｍ\" */ 0xff4d,\n    ],\n  ],\n  [\n    [/* \"n\" */ 0x006e],\n    [\n      /* \"ñ\" */ 0x00f1, /* \"ń\" */ 0x0144, /* \"ņ\" */ 0x0146, /* \"ň\" */ 0x0148,\n      /* \"ŉ\" */ 0x0149, /* \"ƞ\" */ 0x019e, /* \"ǹ\" */ 0x01f9, /* \"ɲ\" */ 0x0272,\n      /* \"л\" */ 0x043b, /* \"ԉ\" */ 0x0509, /* \"ṅ\" */ 0x1e45, /* \"ṇ\" */ 0x1e47,\n      /* \"ṉ\" */ 0x1e49, /* \"ṋ\" */ 0x1e4b, /* \"ⓝ\" */ 0x24dd, /* \"ꞑ\" */ 0xa791,\n      /* \"ꞥ\" */ 0xa7a5, /* \"ｎ\" */ 0xff4e,\n    ],\n  ],\n  [[/* \"n\" */ 0x006e, /* \"j\" */ 0x006a], [/* \"ǌ\" */ 0x01cc]],\n  [\n    [/* \"o\" */ 0x006f],\n    [\n      /* \"ò\" */ 0x00f2, /* \"ó\" */ 0x00f3, /* \"ô\" */ 0x00f4, /* \"õ\" */ 0x00f5,\n      /* \"ö\" */ 0x00f6, /* \"ø\" */ 0x00f8, /* \"ō\" */ 0x014d, /* \"ŏ\" */ 0x014f,\n      /* \"ő\" */ 0x0151, /* \"ơ\" */ 0x01a1, /* \"ǒ\" */ 0x01d2, /* \"ǫ\" */ 0x01eb,\n      /* \"ǭ\" */ 0x01ed, /* \"ǿ\" */ 0x01ff, /* \"ȍ\" */ 0x020d, /* \"ȏ\" */ 0x020f,\n      /* \"ȫ\" */ 0x022b, /* \"ȭ\" */ 0x022d, /* \"ȯ\" */ 0x022f, /* \"ȱ\" */ 0x0231,\n      /* \"ɔ\" */ 0x0254, /* \"ɵ\" */ 0x0275, /* \"ᴑ\" */ 0x1d11, /* \"ṍ\" */ 0x1e4d,\n      /* \"ṏ\" */ 0x1e4f, /* \"ṑ\" */ 0x1e51, /* \"ṓ\" */ 0x1e53, /* \"ọ\" */ 0x1ecd,\n      /* \"ỏ\" */ 0x1ecf, /* \"ố\" */ 0x1ed1, /* \"ồ\" */ 0x1ed3, /* \"ổ\" */ 0x1ed5,\n      /* \"ỗ\" */ 0x1ed7, /* \"ộ\" */ 0x1ed9, /* \"ớ\" */ 0x1edb, /* \"ờ\" */ 0x1edd,\n      /* \"ở\" */ 0x1edf, /* \"ỡ\" */ 0x1ee1, /* \"ợ\" */ 0x1ee3, /* \"ⓞ\" */ 0x24de,\n      /* \"ꝋ\" */ 0xa74b, /* \"ꝍ\" */ 0xa74d, /* \"ｏ\" */ 0xff4f,\n    ],\n  ],\n  [[/* \"o\" */ 0x006f, /* \"e\" */ 0x0065], [/* \"œ\" */ 0x0153]],\n  [[/* \"o\" */ 0x006f, /* \"i\" */ 0x0069], [/* \"ƣ\" */ 0x01a3]],\n  [[/* \"o\" */ 0x006f, /* \"o\" */ 0x006f], [/* \"ꝏ\" */ 0xa74f]],\n  [[/* \"o\" */ 0x006f, /* \"u\" */ 0x0075], [/* \"ȣ\" */ 0x0223]],\n  [\n    [/* \"p\" */ 0x0070],\n    [\n      /* \"ƥ\" */ 0x01a5, /* \"ρ\" */ 0x03c1, /* \"ᵽ\" */ 0x1d7d, /* \"ṕ\" */ 0x1e55,\n      /* \"ṗ\" */ 0x1e57, /* \"ⓟ\" */ 0x24df, /* \"ꝑ\" */ 0xa751, /* \"ꝓ\" */ 0xa753,\n      /* \"ꝕ\" */ 0xa755, /* \"ｐ\" */ 0xff50,\n    ],\n  ],\n  [\n    [/* \"q\" */ 0x0071],\n    [\n      /* \"ɋ\" */ 0x024b, /* \"ⓠ\" */ 0x24e0, /* \"ꝗ\" */ 0xa757, /* \"ꝙ\" */ 0xa759,\n      /* \"ｑ\" */ 0xff51,\n    ],\n  ],\n  [\n    [/* \"r\" */ 0x0072],\n    [\n      /* \"ŕ\" */ 0x0155, /* \"ŗ\" */ 0x0157, /* \"ř\" */ 0x0159, /* \"ȑ\" */ 0x0211,\n      /* \"ȓ\" */ 0x0213, /* \"ɍ\" */ 0x024d, /* \"ɽ\" */ 0x027d, /* \"ṙ\" */ 0x1e59,\n      /* \"ṛ\" */ 0x1e5b, /* \"ṝ\" */ 0x1e5d, /* \"ṟ\" */ 0x1e5f, /* \"ⓡ\" */ 0x24e1,\n      /* \"ꝛ\" */ 0xa75b, /* \"ꞃ\" */ 0xa783, /* \"ꞧ\" */ 0xa7a7, /* \"ｒ\" */ 0xff52,\n    ],\n  ],\n  [\n    [/* \"s\" */ 0x0073],\n    [\n      /* \"ś\" */ 0x015b, /* \"ŝ\" */ 0x015d, /* \"ş\" */ 0x015f, /* \"š\" */ 0x0161,\n      /* \"ș\" */ 0x0219, /* \"ȿ\" */ 0x023f, /* \"ʂ\" */ 0x0282, /* \"ṡ\" */ 0x1e61,\n      /* \"ṣ\" */ 0x1e63, /* \"ṥ\" */ 0x1e65, /* \"ṧ\" */ 0x1e67, /* \"ṩ\" */ 0x1e69,\n      /* \"ẛ\" */ 0x1e9b, /* \"ⓢ\" */ 0x24e2, /* \"ꞅ\" */ 0xa785, /* \"ꞩ\" */ 0xa7a9,\n      /* \"ｓ\" */ 0xff53,\n    ],\n  ],\n  [[/* \"s\" */ 0x0073, /* \"s\" */ 0x0073], [/* \"ß\" */ 0x00df]],\n  [\n    [/* \"t\" */ 0x0074],\n    [\n      /* \"ţ\" */ 0x0163, /* \"ť\" */ 0x0165, /* \"ŧ\" */ 0x0167, /* \"ƭ\" */ 0x01ad,\n      /* \"ț\" */ 0x021b, /* \"ʈ\" */ 0x0288, /* \"ṫ\" */ 0x1e6b, /* \"ṭ\" */ 0x1e6d,\n      /* \"ṯ\" */ 0x1e6f, /* \"ṱ\" */ 0x1e71, /* \"ẗ\" */ 0x1e97, /* \"ⓣ\" */ 0x24e3,\n      /* \"ⱦ\" */ 0x2c66, /* \"ꞇ\" */ 0xa787, /* \"ｔ\" */ 0xff54,\n    ],\n  ],\n  [[/* \"t\" */ 0x0074, /* \"h\" */ 0x0068], [/* \"þ\" */ 0x00fe]],\n  [[/* \"t\" */ 0x0074, /* \"z\" */ 0x007a], [/* \"ꜩ\" */ 0xa729]],\n  [\n    [/* \"u\" */ 0x0075],\n    [\n      /* \"ù\" */ 0x00f9, /* \"ú\" */ 0x00fa, /* \"û\" */ 0x00fb, /* \"ü\" */ 0x00fc,\n      /* \"ũ\" */ 0x0169, /* \"ū\" */ 0x016b, /* \"ŭ\" */ 0x016d, /* \"ů\" */ 0x016f,\n      /* \"ű\" */ 0x0171, /* \"ų\" */ 0x0173, /* \"ư\" */ 0x01b0, /* \"ǔ\" */ 0x01d4,\n      /* \"ǖ\" */ 0x01d6, /* \"ǘ\" */ 0x01d8, /* \"ǚ\" */ 0x01da, /* \"ǜ\" */ 0x01dc,\n      /* \"ȕ\" */ 0x0215, /* \"ȗ\" */ 0x0217, /* \"ʉ\" */ 0x0289, /* \"ṳ\" */ 0x1e73,\n      /* \"ṵ\" */ 0x1e75, /* \"ṷ\" */ 0x1e77, /* \"ṹ\" */ 0x1e79, /* \"ṻ\" */ 0x1e7b,\n      /* \"ụ\" */ 0x1ee5, /* \"ủ\" */ 0x1ee7, /* \"ứ\" */ 0x1ee9, /* \"ừ\" */ 0x1eeb,\n      /* \"ử\" */ 0x1eed, /* \"ữ\" */ 0x1eef, /* \"ự\" */ 0x1ef1, /* \"ⓤ\" */ 0x24e4,\n      /* \"ｕ\" */ 0xff55,\n    ],\n  ],\n  [\n    [/* \"v\" */ 0x0076],\n    [\n      /* \"ʋ\" */ 0x028b, /* \"ʌ\" */ 0x028c, /* \"ṽ\" */ 0x1e7d, /* \"ṿ\" */ 0x1e7f,\n      /* \"ⓥ\" */ 0x24e5, /* \"ꝟ\" */ 0xa75f, /* \"ｖ\" */ 0xff56,\n    ],\n  ],\n  [[/* \"v\" */ 0x0076, /* \"y\" */ 0x0079], [/* \"ꝡ\" */ 0xa761]],\n  [\n    [/* \"w\" */ 0x0077],\n    [\n      /* \"ŵ\" */ 0x0175, /* \"ẁ\" */ 0x1e81, /* \"ẃ\" */ 0x1e83, /* \"ẅ\" */ 0x1e85,\n      /* \"ẇ\" */ 0x1e87, /* \"ẉ\" */ 0x1e89, /* \"ẘ\" */ 0x1e98, /* \"ⓦ\" */ 0x24e6,\n      /* \"ⱳ\" */ 0x2c73, /* \"ｗ\" */ 0xff57,\n    ],\n  ],\n  [\n    [/* \"x\" */ 0x0078],\n    [/* \"ẋ\" */ 0x1e8b, /* \"ẍ\" */ 0x1e8d, /* \"ⓧ\" */ 0x24e7, /* \"ｘ\" */ 0xff58],\n  ],\n  [\n    [/* \"y\" */ 0x0079],\n    [\n      /* \"ý\" */ 0x00fd, /* \"ÿ\" */ 0x00ff, /* \"ŷ\" */ 0x0177, /* \"ƴ\" */ 0x01b4,\n      /* \"ȳ\" */ 0x0233, /* \"ɏ\" */ 0x024f, /* \"ẏ\" */ 0x1e8f, /* \"ẙ\" */ 0x1e99,\n      /* \"ỳ\" */ 0x1ef3, /* \"ỵ\" */ 0x1ef5, /* \"ỷ\" */ 0x1ef7, /* \"ỹ\" */ 0x1ef9,\n      /* \"ỿ\" */ 0x1eff, /* \"ⓨ\" */ 0x24e8, /* \"ｙ\" */ 0xff59,\n    ],\n  ],\n  [\n    [/* \"z\" */ 0x007a],\n    [\n      /* \"ź\" */ 0x017a, /* \"ż\" */ 0x017c, /* \"ž\" */ 0x017e, /* \"ƶ\" */ 0x01b6,\n      /* \"ȥ\" */ 0x0225, /* \"ɀ\" */ 0x0240, /* \"ẑ\" */ 0x1e91, /* \"ẓ\" */ 0x1e93,\n      /* \"ẕ\" */ 0x1e95, /* \"ⓩ\" */ 0x24e9, /* \"ⱬ\" */ 0x2c6c, /* \"ꝣ\" */ 0xa763,\n      /* \"ｚ\" */ 0xff5a,\n    ],\n  ],\n  // ----- Punctuators -----\n  [\n    [/* \".\" */ 0x002e, /* \".\" */ 0x002e, /* \".\" */ 0x002e],\n    [/* HORIZONTAL ELLIPSIS */ 0x2026],\n  ],\n  [[/* \"?\" */ 0x003f, /* \"?\" */ 0x003f], [/* DOUBLE QUESTION MARK */ 0x2047]],\n  [\n    [/* \"?\" */ 0x003f, /* \"!\" */ 0x0021],\n    [/* QUESTION EXCLAMATION MARK */ 0x2048],\n  ],\n]);\n\nconst replaceMap = ((data: [to: CodePoint, from: CodePoint[]][]) => {\n  const map = new Map<CodePoint, CodePoint>();\n  for (const [to, from] of data) {\n    for (const codePoint of from) {\n      map.set(codePoint, to);\n    }\n  }\n  return map;\n})([\n  [/* \"!\" */ 0x0021, [/* INVERTED EXCLAMATION MARK */ 0x00a1]],\n  [\n    /* '\"' */ 0x0022,\n    [\n      /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab,\n      /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb,\n      /* LEFT DOUBLE QUOTATION MARK */ 0x201c,\n      /* RIGHT DOUBLE QUOTATION MARK */ 0x201d,\n      /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e,\n      /* DOUBLE HIGH-REVERSED-9 QUOTATION MARK */ 0x201f,\n      /* SINGLE LEFT-POINTING ANGLE QUOTATION MARK */ 0x2039,\n      /* SINGLE RIGHT-POINTING ANGLE QUOTATION MARK */ 0x203a,\n    ],\n  ],\n  [\n    /* \"'\" */ 0x0027,\n    [\n      /* LEFT SINGLE QUOTATION MARK */ 0x2018,\n      /* RIGHT SINGLE QUOTATION MARK */ 0x2019,\n    ],\n  ],\n  [\n    /* \"-\" */ 0x002d,\n    [\n      /* HYPHEN */ 0x2010, /* NON-BREAKING HYPHEN */ 0x2011,\n      /* FIGURE DASH */ 0x2012, /* EN DASH */ 0x2013, /* EM DASH */ 0x2014,\n    ],\n  ],\n  [/* \"?\" */ 0x003f, [/* INVERTED QUESTION MARK */ 0x00bf]],\n]);\n","import { type CodePoint } from \"./types.ts\";\n\nexport const isControl = (codePoint: CodePoint): boolean => codePoint < 0x0020;\n\nexport const isLinebreak = (codePoint: CodePoint): boolean =>\n  codePoint === /* LINE FEED */ 0x000a ||\n  codePoint === /* LINE TABULATION */ 0x000b ||\n  codePoint === /* FORM FEED */ 0x000c ||\n  codePoint === /* CARRIAGE RETURN */ 0x000d ||\n  codePoint === /* LINE SEPARATOR */ 0x2028 ||\n  codePoint === /* PARAGRAPH SEPARATOR */ 0x2029;\n\nexport const isWhitespace = (codePoint: CodePoint): boolean =>\n  codePoint === /* CHARACTER TABULATION */ 0x0009 ||\n  codePoint === /* LINE FEED */ 0x000a ||\n  codePoint === /* LINE TABULATION */ 0x000b ||\n  codePoint === /* FORM FEED */ 0x000c ||\n  codePoint === /* CARRIAGE RETURN */ 0x000d ||\n  codePoint === /* SPACE */ 0x0020 ||\n  codePoint === /* NO-BREAK SPACE */ 0x00a0 ||\n  codePoint === /* EN QUAD */ 0x2000 ||\n  codePoint === /* EM QUAD */ 0x2001 ||\n  codePoint === /* EN SPACE */ 0x2002 ||\n  codePoint === /* EM SPACE */ 0x2003 ||\n  codePoint === /* THREE-PER-EM SPACE */ 0x2004 ||\n  codePoint === /* FOUR-PER-EM SPACE */ 0x2005 ||\n  codePoint === /* SIX-PER-EM SPACE */ 0x2006 ||\n  codePoint === /* FIGURE SPACE */ 0x2007 ||\n  codePoint === /* PUNCTUATION SPACE */ 0x2008 ||\n  codePoint === /* THIN SPACE */ 0x2009 ||\n  codePoint === /* HAIR SPACE */ 0x200a ||\n  codePoint === /* LINE SEPARATOR */ 0x2028 ||\n  codePoint === /* PARAGRAPH SEPARATOR */ 0x2029;\n","import { toCodePoints } from \"./codepoints.ts\";\nimport { isWhitespace } from \"./whitespace.ts\";\n\nexport type TextStats = {\n  readonly numWhitespace: number;\n  readonly numCharacters: number;\n  readonly numWords: number;\n  readonly numUniqueWords: number;\n  readonly avgWordLength: number;\n  readonly wordCount: readonly WordCount[];\n};\n\nexport type WordCount = {\n  readonly word: string;\n  readonly count: number;\n};\n\nexport const textStatsOf = (\n  locale: string | Intl.Locale,\n  text: string | readonly string[],\n): TextStats => {\n  if (typeof locale === \"string\") {\n    locale = new Intl.Locale(locale);\n  }\n  const words = new Intl.Segmenter(locale, { granularity: \"word\" });\n  const graphemes = new Intl.Segmenter(locale, { granularity: \"grapheme\" });\n  const collator = new Intl.Collator(locale);\n  const counts = new Map<string, number>();\n  const lengths = new Map<string, number>();\n  let numWhitespace = 0;\n  let numCharacters = 0;\n  let numWords = 0;\n  let lenWords = 0;\n\n  const wordLength = (word: string): number => {\n    let length = lengths.get(word);\n    if (length == null) {\n      length = 0;\n      for (const grapheme of graphemes.segment(word)) {\n        length += 1;\n      }\n      lengths.set(word, length);\n    }\n    return length;\n  };\n\n  const append = (text: string): void => {\n    for (const { segment, isWordLike } of words.segment(text.normalize())) {\n      if (isWordLike) {\n        numWords += 1;\n        const word = segment.toLocaleLowerCase(locale);\n        counts.set(word, (counts.get(word) ?? 0) + 1);\n        const length = wordLength(word);\n        lenWords += length;\n        numCharacters += length;\n      } else {\n        if (segment === \" \") {\n          numWhitespace += 1;\n        } else {\n          for (const codePoint of toCodePoints(segment)) {\n            if (isWhitespace(codePoint)) {\n              numWhitespace += 1;\n            } else {\n              numCharacters += 1;\n            }\n          }\n        }\n      }\n    }\n  };\n\n  if (Array.isArray(text)) {\n    for (const item of text) {\n      append(item as string);\n    }\n  } else {\n    append(text as string);\n  }\n\n  const numUniqueWords = counts.size;\n  const avgWordLength = numWords > 0 ? lenWords / numWords : 0;\n  const wordCount = Array.from(counts.entries())\n    .map(([word, count]) => ({ word, count }))\n    .sort((a, b) => b.count - a.count || collator.compare(a.word, b.word));\n\n  return {\n    numWhitespace,\n    numCharacters,\n    numWords,\n    numUniqueWords,\n    avgWordLength,\n    wordCount,\n  };\n};\n","// extracted by mini-css-extract-plugin\nvar _1 = \"PSNkE1HYZR\";\nvar _2 = \"RZBhBwap41\";\nexport { _1 as \"disabled\", _2 as \"root\" }\n","import { clsx } from \"clsx\";\nimport { type ReactNode, useImperativeHandle, useRef } from \"react\";\nimport { sizeClassName } from \"../../styles/index.ts\";\nimport { getBoundingBox } from \"../../utils/index.ts\";\nimport * as iconStyles from \"../icon/Icon.module.less\";\nimport * as styles from \"./Button.module.less\";\nimport { type ButtonProps } from \"./Button.types.ts\";\n\nexport function Button({\n  anchor,\n  children,\n  disabled,\n  icon,\n  label,\n  ref,\n  size,\n  tabIndex,\n  title,\n  ...props\n}: ButtonProps): ReactNode {\n  const element = useRef<HTMLButtonElement>(null);\n  useImperativeHandle(ref, () => ({\n    focus() {\n      element.current?.focus();\n    },\n    blur() {\n      element.current?.blur();\n    },\n  }));\n  useImperativeHandle(anchor, () => ({\n    getBoundingBox() {\n      return getBoundingBox(element.current!);\n    },\n  }));\n  return (\n    <button\n      {...props}\n      ref={element}\n      className={clsx(\n        styles.root,\n        iconStyles.altIcon,\n        disabled && styles.disabled,\n        sizeClassName(size),\n      )}\n      disabled={disabled}\n      tabIndex={tabIndex}\n      title={title}\n    >\n      {icon} {label || children}\n    </button>\n  );\n}\n","// extracted by mini-css-extract-plugin\nvar _1 = \"WtyiKCiKF_\";\nvar _2 = \"MyDeEnW3iB\";\nvar _3 = \"xmvyJyjriM\";\nvar _4 = \"ukvzW7jVft\";\nvar _5 = \"TS1e3yDYYY\";\nvar _6 = \"paSSvjSMNG\";\nvar _7 = \"aUxVEyALWp\";\nvar _8 = \"TeJFw85Mqq\";\nvar _9 = \"eiloanlgyu\";\nexport { _1 as \"disabled\", _2 as \"item\", _3 as \"item_active\", _4 as \"item_inactive\", _5 as \"root\", _6 as \"spacer\", _7 as \"spacer_first\", _8 as \"spacer_last\", _9 as \"spacer_middle\" }\n","import { clsx } from \"clsx\";\nimport { Children, type ReactElement, type ReactNode, useState } from \"react\";\nimport { useHotkeysHandler } from \"../../hooks/use-hotkeys.ts\";\nimport * as styles from \"./TabList.module.less\";\nimport { type TabListProps, type TabProps } from \"./TabList.types.ts\";\n\nexport function TabList({\n  disabled,\n  children,\n  selectedIndex = 0,\n  onBlur,\n  onFocus,\n  onSelect,\n}: TabListProps): ReactNode {\n  const [focused, setFocused] = useState(false);\n  const tabs = Children.toArray(children) as ReactElement<TabProps>[];\n  const selectedTab = tabs[selectedIndex];\n  const select = (selectedIndex: number): void => {\n    if (!disabled && onSelect != null) {\n      if (selectedIndex < 0) {\n        selectedIndex = tabs.length - 1;\n      } else if (selectedIndex >= tabs.length) {\n        selectedIndex = 0;\n      }\n      onSelect(selectedIndex);\n    }\n  };\n  const selectPrev = () => {\n    select(selectedIndex - 1);\n  };\n  const selectNext = () => {\n    select(selectedIndex + 1);\n  };\n  const hotkeys = useHotkeysHandler({\n    [\"ArrowLeft\"]: selectPrev,\n    [\"ArrowUp\"]: selectPrev,\n    [\"ArrowRight\"]: selectNext,\n    [\"ArrowDown\"]: selectNext,\n  });\n  const items: ReactNode[] = [];\n  items.push(\n    <span\n      key=\"spacer-first\"\n      className={clsx(styles.spacer, styles.spacer_first)}\n    />,\n  );\n  tabs.forEach((tab, index) => {\n    const selected = tab === selectedTab;\n    if (index > 0) {\n      items.push(\n        <span\n          key={`spacer-${index}`}\n          className={clsx(styles.spacer, styles.spacer_middle)}\n        />,\n      );\n    }\n    items.push(\n      <span\n        key={`item-${index}`}\n        ref={(element) => {\n          if (focused && selected) {\n            element?.focus();\n          }\n        }}\n        className={clsx(\n          styles.item,\n          selected ? styles.item_active : styles.item_inactive,\n          disabled && styles.disabled,\n        )}\n        tabIndex={!disabled && selected ? 0 : undefined}\n        title={tab.props.title}\n        onFocus={(event) => {\n          setFocused(true);\n          if (onFocus != null) {\n            onFocus(event);\n          }\n        }}\n        onBlur={(event) => {\n          setFocused(false);\n          if (onBlur != null) {\n            onBlur(event);\n          }\n        }}\n        onClick={(event) => {\n          event.preventDefault();\n          select(index);\n          setFocused(true);\n        }}\n        onKeyDown={hotkeys}\n      >\n        {tab.props.label}\n      </span>,\n    );\n  });\n  items.push(\n    <span\n      key=\"spacer-last\"\n      className={clsx(styles.spacer, styles.spacer_last)}\n    />,\n  );\n  return (\n    <>\n      <div className={styles.root}>{items}</div>\n      {selectedTab.props.children}\n    </>\n  );\n}\n\nexport function Tab(props: TabProps): ReactNode {\n  return null;\n}\n","import { type ClassName } from \"../components/index.ts\";\nimport * as styles from \"./size.module.less\";\n\nexport const styleSizeFit = styles.sizeFit;\nexport const styleSizeFill = styles.sizeFill;\nexport const styleSizeFillAlt = styles.sizeFillAlt;\nexport const styleSizeFull = styles.sizeFull;\n\nexport const styleWidth6 = styles.width6;\nexport const styleWidth10 = styles.width10;\nexport const styleWidth16 = styles.width16;\nexport const styleWidth24 = styles.width24;\nexport const styleWidth32 = styles.width32;\n\nexport type SizeName =\n  | \"default\"\n  | \"fill\"\n  | \"fillAlt\"\n  | \"full\"\n  | 6\n  | 10\n  | 16\n  | 24\n  | 32;\n\nexport const sizeClassName = (value?: SizeName | null): ClassName => {\n  switch (value) {\n    case \"fill\":\n      return styleSizeFill;\n    case \"fillAlt\":\n      return styleSizeFillAlt;\n    case \"full\":\n      return styleSizeFull;\n    case 6:\n      return styleWidth6;\n    case 10:\n      return styleWidth10;\n    case 16:\n      return styleWidth16;\n    case 24:\n      return styleWidth24;\n    case 32:\n      return styleWidth32;\n  }\n  return null;\n};\n","// extracted by mini-css-extract-plugin\nvar _1 = \"VAfnykso3N\";\nvar _2 = \"Pmf0OPzbah\";\nvar _3 = \"cEXZOu3wBk\";\nvar _4 = \"Hidh9ZyJGJ\";\nvar _5 = \"PpI9xqsrhc\";\nvar _6 = \"to4ZaCklzk\";\nvar _7 = \"okLkPYzGdi\";\nvar _8 = \"ns48PBWk_h\";\nvar _9 = \"dol6GfdQ4h\";\nexport { _1 as \"sizeFill\", _2 as \"sizeFillAlt\", _3 as \"sizeFit\", _4 as \"sizeFull\", _5 as \"width10\", _6 as \"width16\", _7 as \"width24\", _8 as \"width32\", _9 as \"width6\" }\n","// extracted by mini-css-extract-plugin\nvar _1 = \"MAtOUBFxmN\";\nvar _2 = \"ZDbcWk2lfx\";\nvar _3 = \"cSm7eHWoTi\";\nvar _4 = \"zmO9xAqXTi\";\nvar _5 = \"FfAOYTgUGj\";\nvar _6 = \"z_wTW1ohCL\";\nexport { _1 as \"flexGrow1\", _2 as \"flexGrow2\", _3 as \"flexGrow3\", _4 as \"flexGrow4\", _5 as \"flexGrow5\", _6 as \"root\" }\n","import { type ReactNode } from \"react\";\nimport { sizeClassName, styleSizeFill } from \"../../styles/size.ts\";\nimport * as styles from \"./FieldList.module.less\";\nimport { type FieldListProps, type FieldProps } from \"./FieldList.types.ts\";\n\nexport function FieldList(props: FieldListProps): ReactNode {\n  const { as: Component = \"div\", title, children } = props;\n  return (\n    <Component className={styles.root} title={title}>\n      {children}\n    </Component>\n  );\n}\n\nexport function Field(props: FieldProps): ReactNode {\n  const { as: Component = \"span\", size, title, children } = props;\n  return (\n    <Component className={sizeClassName(size)} title={title}>\n      {children}\n    </Component>\n  );\n}\n\nField.Filler = function Filler(): ReactNode {\n  return <span className={styleSizeFill} />;\n};\n","import { type ClassName } from \"@mkboard/widget\";\r\nimport { type ElementType, type HTMLAttributes, type ReactNode } from \"react\";\r\nimport { type PhoneticModel } from \"./phoneticmodel.ts\";\r\n\r\nexport function Alphabet({\r\n  as: Component = \"strong\",\r\n  className,\r\n  id,\r\n  title,\r\n  model: { language, letters },\r\n}: {\r\n  readonly as?: ElementType<HTMLAttributes<HTMLElement>>;\r\n  readonly className?: ClassName;\r\n  readonly id?: string;\r\n  readonly title?: string;\r\n  readonly model: PhoneticModel;\r\n}): ReactNode {\r\n  return (\r\n    <Component\r\n      id={id}\r\n      className={className}\r\n      title={title}\r\n      dir={language.direction}\r\n    >\r\n      {letters.map(({ label }) => label).join(\"\")}\r\n    </Component>\r\n  );\r\n}\r\n","import { type CodePoint, type CodePointSet } from \"@mkboard/unicode\";\r\n\r\nexport type HasLetter = {\r\n  readonly letter: Letter;\r\n};\r\n\r\nexport type LetterLike = Letter | HasLetter;\r\n\r\nexport class Letter {\r\n  constructor(\r\n    /** Unicode character code point. */\r\n    readonly codePoint: CodePoint,\r\n    /** Relative frequency. */\r\n    readonly f: number,\r\n    /** Letter display label. */\r\n    readonly label: string = String.fromCodePoint(codePoint),\r\n  ) {}\r\n\r\n  toString() {\r\n    return this.label;\r\n  }\r\n}\r\n\r\nexport namespace Letter {\r\n  export const digits: readonly Letter[] = [\r\n    new Letter(/* \"0\" */ 0x0030, 0.0),\r\n    new Letter(/* \"1\" */ 0x0031, 0.301),\r\n    new Letter(/* \"2\" */ 0x0032, 0.176),\r\n    new Letter(/* \"3\" */ 0x0033, 0.125),\r\n    new Letter(/* \"4\" */ 0x0034, 0.097),\r\n    new Letter(/* \"5\" */ 0x0035, 0.079),\r\n    new Letter(/* \"6\" */ 0x0036, 0.067),\r\n    new Letter(/* \"7\" */ 0x0037, 0.058),\r\n    new Letter(/* \"8\" */ 0x0038, 0.051),\r\n    new Letter(/* \"9\" */ 0x0039, 0.046),\r\n  ];\r\n  export const punctuators: readonly Letter[] = [\r\n    new Letter(/* \",\" */ 0x002c, 9.0),\r\n    new Letter(/* \".\" */ 0x002e, 8.0),\r\n    new Letter(/* \"!\" */ 0x0021, 2.0),\r\n    new Letter(/* \"?\" */ 0x003f, 2.0),\r\n    new Letter(/* \";\" */ 0x003b, 1.0),\r\n    new Letter(/* \":\" */ 0x003a, 1.0),\r\n    new Letter(/* \"'\" */ 0x0027, 1.0),\r\n    new Letter(/* '\"' */ 0x0022, 1.0),\r\n    new Letter(/* \"-\" */ 0x002d, 1.0),\r\n  ];\r\n  export const specials: readonly Letter[] = [\r\n    // new Letter(/* \"!\" */ 0x0021, 1),\r\n    // new Letter(/* '\"' */ 0x0022, 1),\r\n    new Letter(/* \"#\" */ 0x0023, 1),\r\n    new Letter(/* \"$\" */ 0x0024, 1),\r\n    new Letter(/* \"%\" */ 0x0025, 1),\r\n    new Letter(/* \"&\" */ 0x0026, 1),\r\n    // new Letter(/* \"'\" */ 0x0027, 1),\r\n    new Letter(/* \"(\" */ 0x0028, 1),\r\n    new Letter(/* \")\" */ 0x0029, 1),\r\n    new Letter(/* \"*\" */ 0x002a, 1),\r\n    new Letter(/* \"+\" */ 0x002b, 1),\r\n    // new Letter(/* \",\" */ 0x002c, 1),\r\n    new Letter(/* \"-\" */ 0x002d, 1),\r\n    // new Letter(/* \".\" */ 0x002e, 1),\r\n    new Letter(/* \"/\" */ 0x002f, 1),\r\n    // new Letter(/* \":\" */ 0x003a, 1),\r\n    // new Letter(/* \";\" */ 0x003b, 1),\r\n    new Letter(/* \"<\" */ 0x003c, 1),\r\n    new Letter(/* \"=\" */ 0x003d, 1),\r\n    new Letter(/* \">\" */ 0x003e, 1),\r\n    // new Letter(/* \"?\" */ 0x003f, 1),\r\n    new Letter(/* \"@\" */ 0x0040, 1),\r\n    new Letter(/* \"[\" */ 0x005b, 1),\r\n    new Letter(/* \"\\\" */ 0x005c, 1),\r\n    new Letter(/* \"]\" */ 0x005d, 1),\r\n    new Letter(/* \"^\" */ 0x005e, 1),\r\n    new Letter(/* \"_\" */ 0x005f, 1),\r\n    new Letter(/* \"`\" */ 0x0060, 1),\r\n    new Letter(/* \"{\" */ 0x007b, 1),\r\n    new Letter(/* \"|\" */ 0x007c, 1),\r\n    new Letter(/* \"}\" */ 0x007d, 1),\r\n    new Letter(/* \"~\" */ 0x007e, 1),\r\n  ];\r\n\r\n  // For paired characters, the frequency is halved to account for the fact that they are used in pairs.\r\n  export const programming: readonly Letter[] = [\r\n    new Letter(/* \"(\" */ 0x0028, 2.5),\r\n    new Letter(/* \")\" */ 0x0029, 2.4),\r\n    new Letter(/* \"{\" */ 0x007b, 1.8),\r\n    new Letter(/* \"}\" */ 0x007d, 1.7),\r\n    new Letter(/* '\"' */ 0x0022, 1.7),\r\n    new Letter(/* \"'\" */ 0x0027, 1.7),\r\n    new Letter(/* \",\" */ 0x002c, 1.6),\r\n    new Letter(/* \";\" */ 0x003b, 1.5),\r\n    new Letter(/* \"[\" */ 0x005b, 1.5),\r\n    new Letter(/* \"]\" */ 0x005d, 1.5),\r\n    new Letter(/* \":\" */ 0x003a, 1.4),\r\n    new Letter(/* \".\" */ 0x002e, 1.3),\r\n    new Letter(/* \"=\" */ 0x003d, 1.2),\r\n    new Letter(/* \"+\" */ 0x002b, 1.1),\r\n    new Letter(/* \"-\" */ 0x002d, 1.0),\r\n    new Letter(/* \"*\" */ 0x002a, 0.9),\r\n    new Letter(/* \"/\" */ 0x002f, 0.8),\r\n    new Letter(/* \"%\" */ 0x0025, 0.7),\r\n    new Letter(/* \"|\" */ 0x007c, 0.6),\r\n    new Letter(/* \"&\" */ 0x0026, 0.5),\r\n    new Letter(/* \"!\" */ 0x0021, 0.4),\r\n    new Letter(/* \"?\" */ 0x003f, 0.3),\r\n    new Letter(/* \"<\" */ 0x003c, 0.2),\r\n    new Letter(/* \">\" */ 0x003e, 0.1),\r\n    new Letter(/* \"_\" */ 0x005f, 0.1),\r\n    new Letter(/* \"#\" */ 0x0023, 0.1),\r\n    new Letter(/* \"@\" */ 0x0040, 0.1),\r\n    new Letter(/* \"$\" */ 0x0024, 0.1),\r\n    new Letter(/* \"^\" */ 0x005e, 0.1),\r\n    new Letter(/* \"~\" */ 0x007e, 0.1),\r\n    new Letter(/* \"\\\" */ 0x005c, 0.1),\r\n    new Letter(/* \"`\" */ 0x0060, 0.1),\r\n  ];\r\n\r\n  export const toLetter = (letter: LetterLike): Letter => {\r\n    return \"letter\" in letter ? letter.letter : letter;\r\n  };\r\n\r\n  export const codePointOrder = (letters: Iterable<Letter>): Letter[] => {\r\n    return [...letters].sort((a, b) => a.codePoint - b.codePoint);\r\n  };\r\n\r\n  export const frequencyOrder = (letters: Iterable<Letter>): Letter[] => {\r\n    return [...letters].sort((a, b) => b.f - a.f || a.codePoint - b.codePoint);\r\n  };\r\n\r\n  export const weightedFrequencyOrder = (\r\n    letters: Iterable<Letter>,\r\n    weight: (letter: Letter) => number,\r\n  ): Letter[] => {\r\n    return [...letters].sort(\r\n      (a, b) => weight(a) - weight(b) || b.f - a.f || a.codePoint - b.codePoint,\r\n    );\r\n  };\r\n\r\n  export const restrict = (\r\n    letters: Iterable<Letter>,\r\n    codePoints: CodePointSet,\r\n  ): Letter[] => {\r\n    return [...letters].filter(({ codePoint }) => codePoints.has(codePoint));\r\n  };\r\n\r\n  export const normalize = (letters: readonly Letter[]): Letter[] => {\r\n    const sum = letters.reduce((sum, { f }) => sum + f, 0);\r\n    return letters.map(\r\n      ({ codePoint, f, label }) =>\r\n        new Letter(codePoint, sum > 0 ? f / sum : 0, label),\r\n    );\r\n  };\r\n}\r\n","import { DataError, Reader, Writer } from \"@mkboard/binary\";\r\nimport { type Language, Ngram1, Ngram2 } from \"@mkboard/keyboard\";\r\nimport { type CodePoint } from \"@mkboard/unicode\";\r\nimport { Letter } from \"./letter.ts\";\r\n\r\nconst signature = Object.freeze([\r\n  0x6b, 0x65, 0x79, 0x62, 0x72, 0x2e, 0x63, 0x6f, 0x6d,\r\n]);\r\n\r\nexport type Entry = {\r\n  readonly codePoint: CodePoint;\r\n  readonly frequency: number;\r\n};\r\n\r\nexport type Segment = readonly Entry[];\r\n\r\nexport class TransitionTable {\r\n  static load(buffer: Uint8Array): TransitionTable {\r\n    const reader = new Reader(buffer);\r\n    readSignature(reader);\r\n    const chain = readChain(reader);\r\n    const segments = readSegments(reader, chain);\r\n    if (reader.remaining() > 0) {\r\n      throw new DataError();\r\n    }\r\n    return new TransitionTable(chain, segments);\r\n  }\r\n\r\n  readonly chain: Chain;\r\n  readonly segments: readonly Segment[];\r\n\r\n  constructor(chain: Chain, segments: readonly Segment[]) {\r\n    if (segments.length !== chain.segments) {\r\n      throw new Error();\r\n    }\r\n    this.chain = chain;\r\n    this.segments = segments;\r\n  }\r\n\r\n  get order(): number {\r\n    return this.chain.order;\r\n  }\r\n\r\n  get alphabet(): readonly CodePoint[] {\r\n    return this.chain.alphabet;\r\n  }\r\n\r\n  get size(): number {\r\n    return this.chain.size;\r\n  }\r\n\r\n  segment(chain: readonly CodePoint[]): Segment {\r\n    return this.segments[this.chain.segmentIndex(chain)];\r\n  }\r\n\r\n  compress(): Uint8Array {\r\n    const writer = new Writer();\r\n    writeSignature(writer);\r\n    writeChain(writer, this.chain);\r\n    writeSegments(writer, this.chain, this.segments);\r\n    return writer.buffer();\r\n  }\r\n\r\n  letters({ letterName }: Language): Letter[] {\r\n    const map = new Map<CodePoint, number>(\r\n      this.alphabet.map((codePoint) => [codePoint, 0]),\r\n    );\r\n    for (const segment of this.segments) {\r\n      for (const { codePoint, frequency } of segment) {\r\n        map.set(codePoint, (map.get(codePoint) ?? 0) + frequency);\r\n      }\r\n    }\r\n    return [...map.entries()].map(\r\n      ([codePoint, f]) => new Letter(codePoint, f, letterName(codePoint)),\r\n    );\r\n  }\r\n\r\n  toNgram1(): Ngram1 {\r\n    const ngram = new Ngram1(this.alphabet);\r\n    for (const segment of this.segments) {\r\n      for (const { codePoint, frequency } of segment) {\r\n        ngram.add(codePoint, frequency);\r\n      }\r\n    }\r\n    return ngram;\r\n  }\r\n\r\n  toNgram2(): Ngram2 {\r\n    const ngram = new Ngram2(this.alphabet);\r\n    let index = 0;\r\n    for (const segment of this.segments) {\r\n      const codePoint0 = this.chain.codePoint(index);\r\n      for (const { codePoint, frequency } of segment) {\r\n        ngram.add(codePoint0, codePoint, frequency);\r\n      }\r\n      index += 1;\r\n      if (index === this.chain.size) {\r\n        index = 0;\r\n      }\r\n    }\r\n    return ngram;\r\n  }\r\n}\r\n\r\nexport class Chain {\r\n  readonly order: number;\r\n  readonly alphabet: readonly CodePoint[];\r\n  readonly size: number;\r\n  readonly segments: number;\r\n  readonly width: number;\r\n  readonly offsets: readonly number[];\r\n\r\n  constructor(order: number, alphabet: readonly CodePoint[]) {\r\n    this.order = order;\r\n    this.alphabet = alphabet;\r\n    this.size = this.alphabet.length;\r\n    this.segments = Math.pow(this.size, this.order - 1);\r\n    this.width = Math.pow(this.size, this.order);\r\n    this.offsets = offsets(this.size, this.order);\r\n  }\r\n\r\n  segmentIndex(chain: readonly CodePoint[]): number {\r\n    const { order, offsets } = this;\r\n    const { length } = chain;\r\n    let index = 0;\r\n    for (let i = 0; i < order - 1; i++) {\r\n      const codePoint = chain[length - order + i + 1] || 0x0020;\r\n      index += this.index(codePoint) * offsets[i + 1];\r\n    }\r\n    return index;\r\n  }\r\n\r\n  entryIndex(chain: readonly CodePoint[]): number {\r\n    const { order, offsets } = this;\r\n    const { length } = chain;\r\n    let index = 0;\r\n    for (let i = 0; i < order; i++) {\r\n      const codePoint = chain[length - order + i] || 0x0020;\r\n      index += this.index(codePoint) * offsets[i];\r\n    }\r\n    return index;\r\n  }\r\n\r\n  codePoint(index: number): CodePoint {\r\n    return this.alphabet[index];\r\n  }\r\n\r\n  index(codePoint: CodePoint): number {\r\n    return this.alphabet.indexOf(codePoint);\r\n  }\r\n}\r\n\r\nfunction writeSignature(writer: Writer): void {\r\n  for (const c of signature) {\r\n    writer.putUint8(c);\r\n  }\r\n}\r\n\r\nfunction readSignature(reader: Reader): void {\r\n  for (const c of signature) {\r\n    if (reader.getUint8() !== c) {\r\n      throw new DataError();\r\n    }\r\n  }\r\n}\r\n\r\nfunction writeChain(writer: Writer, chain: Chain): void {\r\n  writer.putUint8(chain.order);\r\n  writer.putUint8(chain.size);\r\n  for (let i = 0; i < chain.size; i++) {\r\n    writer.putUint16(chain.alphabet[i]);\r\n  }\r\n}\r\n\r\nfunction readChain(reader: Reader): Chain {\r\n  const order = reader.getUint8();\r\n  const size = reader.getUint8();\r\n  const alphabet = [];\r\n  for (let i = 0; i < size; i++) {\r\n    alphabet.push(reader.getUint16());\r\n  }\r\n  return new Chain(order, alphabet);\r\n}\r\n\r\nfunction writeSegments(\r\n  writer: Writer,\r\n  chain: Chain,\r\n  segments: readonly Segment[],\r\n): void {\r\n  for (let segmentIndex = 0; segmentIndex < chain.segments; segmentIndex++) {\r\n    const segment = segments[segmentIndex];\r\n    writer.putUint8(segment.length);\r\n    for (const { codePoint, frequency } of segment) {\r\n      writer.putUint8(chain.index(codePoint));\r\n      writer.putUint8(frequency);\r\n    }\r\n  }\r\n}\r\n\r\nfunction readSegments(reader: Reader, chain: Chain): Segment[] {\r\n  const segments = [];\r\n  for (let segmentIndex = 0; segmentIndex < chain.segments; segmentIndex++) {\r\n    const segment = [];\r\n    const length = reader.getUint8();\r\n    if (length > chain.size) {\r\n      throw new DataError();\r\n    }\r\n    for (let entryIndex = 0; entryIndex < length; entryIndex++) {\r\n      const index = reader.getUint8();\r\n      if (index >= chain.size) {\r\n        throw new DataError();\r\n      }\r\n      const frequency = reader.getUint8();\r\n      if (frequency === 0) {\r\n        throw new DataError();\r\n      }\r\n      segment.push({ codePoint: chain.codePoint(index), frequency });\r\n    }\r\n    segments.push(segment);\r\n  }\r\n  return segments;\r\n}\r\n\r\nfunction offsets(size: number, order: number): number[] {\r\n  const offsets = new Array<number>(order);\r\n  for (let i = 0; i < order; i++) {\r\n    offsets[i] = Math.pow(size, order - i - 1);\r\n  }\r\n  return offsets;\r\n}\r\n","import { toCodePoints } from \"@mkboard/unicode\";\r\n\r\nconst X = 23;\r\nconst Y = 13;\r\n\r\nexport function scrambleWord(word: string): string {\r\n  const a = [...toCodePoints(word)];\r\n  const { length } = a;\r\n  const s = new Array(length);\r\n  for (let i = 0; i < length; i++) {\r\n    s[(X * i + Y) % length] = a[i];\r\n  }\r\n  return String.fromCodePoint(...s);\r\n}\r\n\r\nexport function unscrambleWord(word: string): string {\r\n  const a = [...toCodePoints(word)];\r\n  const { length } = a;\r\n  const s = new Array(length);\r\n  for (let i = 0; i < length; i++) {\r\n    s[i] = a[(X * i + Y) % length];\r\n  }\r\n  return String.fromCodePoint(...s);\r\n}\r\n","import { Language } from \"@mkboard/keyboard\";\r\nimport AR from \"./blacklist-ar.json\" with { type: \"json\" };\r\nimport BE from \"./blacklist-be.json\" with { type: \"json\" };\r\nimport DE from \"./blacklist-de.json\" with { type: \"json\" };\r\nimport EN from \"./blacklist-en.json\" with { type: \"json\" };\r\nimport ES from \"./blacklist-es.json\" with { type: \"json\" };\r\nimport FA from \"./blacklist-fa.json\" with { type: \"json\" };\r\nimport FR from \"./blacklist-fr.json\" with { type: \"json\" };\r\nimport HE from \"./blacklist-he.json\" with { type: \"json\" };\r\nimport IT from \"./blacklist-it.json\" with { type: \"json\" };\r\nimport NL from \"./blacklist-nl.json\" with { type: \"json\" };\r\nimport PL from \"./blacklist-pl.json\" with { type: \"json\" };\r\nimport PT from \"./blacklist-pt.json\" with { type: \"json\" };\r\nimport RU from \"./blacklist-ru.json\" with { type: \"json\" };\r\nimport SV from \"./blacklist-sv.json\" with { type: \"json\" };\r\nimport TR from \"./blacklist-tr.json\" with { type: \"json\" };\r\nimport UK from \"./blacklist-uk.json\" with { type: \"json\" };\r\nimport { unscrambleWord } from \"./scramble.ts\";\r\n\r\nconst blacklistByLanguage = ((items: [Language, string[]][]) =>\r\n  new Map<Language, Set<string>>(\r\n    items.map(([language, list]) => [\r\n      language,\r\n      new Set(list.map(unscrambleWord)),\r\n    ]),\r\n  ))([\r\n  [Language.AR, AR],\r\n  [Language.BE, BE],\r\n  [Language.DE, DE],\r\n  [Language.EN, EN],\r\n  [Language.ES, ES],\r\n  [Language.FA, FA],\r\n  [Language.FR, FR],\r\n  [Language.HE, HE],\r\n  [Language.IT, IT],\r\n  [Language.NL, NL],\r\n  [Language.PL, PL],\r\n  [Language.PT, PT],\r\n  [Language.RU, RU],\r\n  [Language.SV, SV],\r\n  [Language.TR, TR],\r\n  [Language.UK, UK],\r\n]);\r\n\r\nexport type Blacklist = { readonly allow: (word: string) => boolean };\r\n\r\nexport function getBlacklist(language: Language): Blacklist {\r\n  const blacklist = blacklistByLanguage.get(language) ?? null;\r\n  if (blacklist != null && blacklist.size > 0) {\r\n    return new (class implements Blacklist {\r\n      allow(word: string): boolean {\r\n        return !blacklist.has(language.lowerCase(word));\r\n      }\r\n    })();\r\n  } else {\r\n    return new (class implements Blacklist {\r\n      allow(word: string): boolean {\r\n        return true;\r\n      }\r\n    })();\r\n  }\r\n}\r\n","import { type Language, type Ngram1, type Ngram2 } from \"@mkboard/keyboard\";\r\nimport { randomSample, type RNG, weightedRandomSample } from \"@mkboard/rand\";\r\nimport { type CodePoint, type CodePointSet } from \"@mkboard/unicode\";\r\nimport { type Filter } from \"./filter.ts\";\r\nimport { Letter } from \"./letter.ts\";\r\nimport { TransitionTable } from \"./transitiontable.ts\";\r\n\r\nconst minLength = 3;\r\nconst maxLength = 10;\r\n\r\nexport abstract class PhoneticModel {\r\n  constructor(\r\n    readonly language: Language,\r\n    readonly letters: readonly Letter[],\r\n  ) {}\r\n\r\n  abstract nextWord(filter: Filter, random?: RNG): string;\r\n\r\n  abstract ngram1(): Ngram1;\r\n\r\n  abstract ngram2(): Ngram2;\r\n\r\n  static restrict(\r\n    model: PhoneticModel,\r\n    codePoints: CodePointSet,\r\n  ): PhoneticModel {\r\n    return new (class extends PhoneticModel {\r\n      constructor() {\r\n        super(model.language, Letter.restrict(model.letters, codePoints));\r\n      }\r\n\r\n      override nextWord(filter: Filter, random?: RNG): string {\r\n        return model.nextWord(filter, random);\r\n      }\r\n\r\n      override ngram1(): Ngram1 {\r\n        return model.ngram1();\r\n      }\r\n\r\n      override ngram2(): Ngram2 {\r\n        return model.ngram2();\r\n      }\r\n    })();\r\n  }\r\n}\r\n\r\nexport namespace PhoneticModel {\r\n  export type Loader = {\r\n    (language: Language): Promise<PhoneticModel>;\r\n  };\r\n}\r\n\r\nexport function makePhoneticModel(\r\n  language: Language,\r\n  data: TransitionTable | Uint8Array,\r\n): PhoneticModel {\r\n  const table =\r\n    data instanceof TransitionTable ? data : TransitionTable.load(data);\r\n  const letters = Letter.normalize(\r\n    table.letters(language).filter(({ codePoint }) => codePoint !== 0x0020),\r\n  );\r\n  const prefixList = new PrefixList(table);\r\n\r\n  const nextWord = (filter: Filter, random: RNG): CodePoint[] => {\r\n    const prefixes = prefixList.findPrefixes(filter);\r\n    const word: CodePoint[] = [];\r\n    let attempt = 0;\r\n\r\n    const retry = (): boolean => {\r\n      if (attempt < 5) {\r\n        attempt++;\r\n        word.length = 0;\r\n        if (prefixes.length > 0) {\r\n          word.push(...randomSample(prefixes, random).codePoints);\r\n        }\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    retry();\r\n\r\n    while (true) {\r\n      const entries = table\r\n        .segment(word)\r\n        .filter(({ codePoint }) => {\r\n          if (codePoint === 0x0020) {\r\n            if (word.length < minLength) {\r\n              // Remove the space character if the word is still too short.\r\n              return false;\r\n            }\r\n          } else {\r\n            if (!filter.includes(codePoint)) {\r\n              // Remove a letter if it does not match the filter.\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        })\r\n        .map(({ codePoint, frequency }) => {\r\n          if (codePoint === 0x0020) {\r\n            // Boost the space character to generate shorter words.\r\n            frequency = frequency * Math.pow(1.3, word.length);\r\n          }\r\n          return { codePoint, frequency };\r\n        });\r\n\r\n      if (entries.length === 0) {\r\n        // Cannot continue a word from this prefix.\r\n        if (retry()) {\r\n          continue;\r\n        } else {\r\n          return word;\r\n        }\r\n      }\r\n\r\n      const entry = weightedRandomSample(\r\n        entries,\r\n        ({ frequency }) => frequency,\r\n        random,\r\n      );\r\n      if (entry.codePoint === 0x0020) {\r\n        // A whole word was generated.\r\n        return word;\r\n      }\r\n\r\n      if (word.length > maxLength) {\r\n        // A word is too long already.\r\n        if (retry()) {\r\n          continue;\r\n        } else {\r\n          return word;\r\n        }\r\n      }\r\n\r\n      word.push(entry.codePoint);\r\n    }\r\n  };\r\n\r\n  return new (class extends PhoneticModel {\r\n    constructor() {\r\n      super(language, letters);\r\n    }\r\n\r\n    override nextWord(filter: Filter, random: RNG = Math.random): string {\r\n      return String.fromCodePoint(...nextWord(filter, random));\r\n    }\r\n\r\n    override ngram1(): Ngram1 {\r\n      return table.toNgram1();\r\n    }\r\n\r\n    override ngram2(): Ngram2 {\r\n      return table.toNgram2();\r\n    }\r\n  })();\r\n}\r\n\r\nclass Prefix {\r\n  constructor(readonly codePoints: readonly CodePoint[]) {}\r\n\r\n  matches(filter: Filter): boolean {\r\n    return this.codePoints.every((codePoint) => filter.includes(codePoint));\r\n  }\r\n}\r\n\r\nclass PrefixList {\r\n  readonly table: TransitionTable;\r\n  readonly map: Map<CodePoint, Prefix[]>;\r\n\r\n  constructor(table: TransitionTable) {\r\n    this.table = table;\r\n    this.map = new Map<CodePoint, Prefix[]>(\r\n      table.alphabet.map((codePoint) => [codePoint, []]),\r\n    );\r\n\r\n    const walk = (word: CodePoint[]): void => {\r\n      for (const { codePoint } of this.table.segment(word)) {\r\n        if (codePoint !== 0x0020) {\r\n          word.push(codePoint);\r\n\r\n          const prefix = new Prefix([...word]);\r\n          for (const index of new Set(word)) {\r\n            this.map.get(codePoint)!.push(prefix);\r\n          }\r\n\r\n          if (word.length < minLength) {\r\n            walk(word);\r\n          }\r\n\r\n          word.pop();\r\n        }\r\n      }\r\n    };\r\n\r\n    walk([]);\r\n  }\r\n\r\n  findPrefixes(filter: Filter): Prefix[] {\r\n    const { focusedCodePoint } = filter;\r\n    if (focusedCodePoint != null) {\r\n      const prefixes = this.map\r\n        .get(focusedCodePoint)!\r\n        .filter((prefix) => prefix.matches(filter));\r\n      if (prefixes.length > 0) {\r\n        return prefixes;\r\n      } else {\r\n        return [new Prefix([focusedCodePoint])];\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n}\r\n","import { type Ngram1, type Ngram2 } from \"@mkboard/keyboard\";\r\nimport { type RNG } from \"@mkboard/rand\";\r\nimport { getBlacklist } from \"./blacklist/blacklist.ts\";\r\nimport { type Filter } from \"./filter.ts\";\r\nimport { PhoneticModel } from \"./phoneticmodel.ts\";\r\n\r\nexport function censor(model: PhoneticModel): PhoneticModel {\r\n  const { language, letters } = model;\r\n\r\n  const blacklist = getBlacklist(language);\r\n\r\n  return new (class extends PhoneticModel {\r\n    constructor() {\r\n      super(language, letters);\r\n    }\r\n\r\n    override nextWord(filter: Filter, random?: RNG): string {\r\n      while (true) {\r\n        const word = model.nextWord(filter, random);\r\n        if (blacklist.allow(word)) {\r\n          return word;\r\n        }\r\n      }\r\n    }\r\n\r\n    override ngram1(): Ngram1 {\r\n      return model.ngram1();\r\n    }\r\n\r\n    override ngram2(): Ngram2 {\r\n      return model.ngram2();\r\n    }\r\n  })();\r\n}\r\n","import { createContext, useContext } from \"react\";\nimport { type PhoneticModel } from \"./phoneticmodel.ts\";\n\nexport const PhoneticModelContext = createContext<PhoneticModel>(null!);\n\nexport function usePhoneticModel(): PhoneticModel {\n  const value = useContext(PhoneticModelContext);\n  if (value == null) {\n    throw new Error(\n      process.env.NODE_ENV !== \"production\"\n        ? \"PhoneticModelContext is missing\"\n        : undefined,\n    );\n  }\n  return value;\n}\n","import { Language, Ngram1, Ngram2 } from \"@mkboard/keyboard\";\r\nimport {\r\n  FakeRNGStream,\r\n  randomSample,\r\n  type RNG,\r\n  type RNGStream,\r\n} from \"@mkboard/rand\";\r\nimport { type Filter } from \"./filter.ts\";\r\nimport { Letter } from \"./letter.ts\";\r\nimport { PhoneticModel } from \"./phoneticmodel.ts\";\r\n\r\nexport class FakePhoneticModel extends PhoneticModel {\r\n  static readonly loader: PhoneticModel.Loader = async () =>\r\n    new FakePhoneticModel();\r\n\r\n  static readonly letter1 = new Letter(/* \"a\" */ 0x0061, 0.1, \"A\");\r\n  static readonly letter2 = new Letter(/* \"b\" */ 0x0062, 0.09, \"B\");\r\n  static readonly letter3 = new Letter(/* \"c\" */ 0x0063, 0.08, \"C\");\r\n  static readonly letter4 = new Letter(/* \"d\" */ 0x0064, 0.07, \"D\");\r\n  static readonly letter5 = new Letter(/* \"e\" */ 0x0065, 0.06, \"E\");\r\n  static readonly letter6 = new Letter(/* \"f\" */ 0x0066, 0.05, \"F\");\r\n  static readonly letter7 = new Letter(/* \"g\" */ 0x0067, 0.04, \"G\");\r\n  static readonly letter8 = new Letter(/* \"h\" */ 0x0068, 0.03, \"H\");\r\n  static readonly letter9 = new Letter(/* \"i\" */ 0x0069, 0.02, \"I\");\r\n  static readonly letter10 = new Letter(/* \"j\" */ 0x006a, 0.01, \"J\");\r\n\r\n  static readonly letters: readonly Letter[] = [\r\n    FakePhoneticModel.letter1,\r\n    FakePhoneticModel.letter2,\r\n    FakePhoneticModel.letter3,\r\n    FakePhoneticModel.letter4,\r\n    FakePhoneticModel.letter5,\r\n    FakePhoneticModel.letter6,\r\n    FakePhoneticModel.letter7,\r\n    FakePhoneticModel.letter8,\r\n    FakePhoneticModel.letter9,\r\n    FakePhoneticModel.letter10,\r\n  ];\r\n\r\n  readonly words: readonly string[];\r\n  readonly rng: RNGStream;\r\n\r\n  constructor(\r\n    words: readonly string[] = [\"abc\", \"def\", \"ghi\"],\r\n    rng: RNGStream = FakeRNGStream(words.length),\r\n  ) {\r\n    super(Language.EN, FakePhoneticModel.letters);\r\n    this.words = [...words];\r\n    this.rng = rng;\r\n  }\r\n\r\n  override nextWord(filter: Filter, rng: RNG = this.rng): string {\r\n    return randomSample(this.words, rng);\r\n  }\r\n\r\n  override ngram1(): Ngram1 {\r\n    const alphabet = this.letters.map(({ codePoint }) => codePoint);\r\n    const { length } = alphabet;\r\n    const ngram = new Ngram1(alphabet);\r\n    for (let i = 0; i < length; i++) {\r\n      ngram.set(alphabet[i], 1);\r\n    }\r\n    return ngram;\r\n  }\r\n\r\n  override ngram2(): Ngram2 {\r\n    const alphabet = this.letters.map(({ codePoint }) => codePoint);\r\n    const { length } = alphabet;\r\n    const ngram = new Ngram2(alphabet);\r\n    for (let i = 0; i < length; i++) {\r\n      for (let j = 0; j < length; j++) {\r\n        ngram.set(alphabet[i], alphabet[j], 1);\r\n      }\r\n    }\r\n    return ngram;\r\n  }\r\n}\r\n","import { type RNGStream } from \"../types.ts\";\n\ntype Mark = number;\n\nexport const FakeRNGStream = (length: number): RNGStream => {\n  let index = 0;\n\n  const rng: RNGStream<Mark> = (): number => {\n    const r = index / length;\n    index += 1;\n    if (index === length) {\n      index = 0;\n    }\n    return r;\n  };\n  rng.mark = (): Mark => {\n    return index;\n  };\n  rng.reset = (mark: Mark): void => {\n    index = mark;\n  };\n\n  return rng;\n};\n","import {\r\n  type CodePoint,\r\n  type CodePointSet,\r\n  type HasCodePoint,\r\n} from \"@mkboard/unicode\";\r\nimport { Letter, type LetterLike } from \"./letter.ts\";\r\n\r\nexport class Filter {\r\n  static readonly empty = new Filter(null, null);\r\n\r\n  /**\r\n   * Codepoints of the letters from which to generate words.\r\n   */\r\n  readonly codePoints: CodePointSet | null;\r\n  /**\r\n   * Codepoint of the letter which must appear in each generated word.\r\n   */\r\n  readonly focusedCodePoint: CodePoint | null;\r\n\r\n  constructor(\r\n    letters0: readonly LetterLike[] | null = null,\r\n    focused0: LetterLike | null = null,\r\n  ) {\r\n    const letters = letters0 && letters0.map(Letter.toLetter);\r\n    const focused = focused0 && Letter.toLetter(focused0);\r\n    if (letters != null && letters.length === 0) {\r\n      throw new Error();\r\n    }\r\n    if (letters != null && focused != null && !letters.includes(focused)) {\r\n      throw new Error();\r\n    }\r\n    this.codePoints = letters && new Set(letters.map(codePointOf));\r\n    this.focusedCodePoint = focused && codePointOf(focused);\r\n  }\r\n\r\n  /**\r\n   * Returns a value indicating whether the given codepoint\r\n   * is allowed by this filter.\r\n   *\r\n   * Empty filter allows all characters.\r\n   */\r\n  includes(codePoint: CodePoint): boolean {\r\n    return this.codePoints == null || this.codePoints.has(codePoint);\r\n  }\r\n}\r\n\r\nconst codePointOf = ({ codePoint }: HasCodePoint): CodePoint => {\r\n  return codePoint;\r\n};\r\n","// extracted by mini-css-extract-plugin\nvar _1 = \"AvKY7QpGGs\";\nvar _2 = \"gOjMxKiXCc\";\nexport { _1 as \"disabled\", _2 as \"root\" }\n","import { clsx } from \"clsx\";\nimport {\n  type ReactNode,\n  type RefObject,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n} from \"react\";\nimport { sizeClassName } from \"../../styles/index.ts\";\nimport * as styles from \"./TextField.module.less\";\nimport { type TextFieldProps } from \"./TextField.types.ts\";\n\nexport function TextField({\n  disabled,\n  error,\n  maxLength,\n  name,\n  placeholder,\n  readOnly,\n  ref,\n  rows,\n  size,\n  tabIndex,\n  title,\n  type = \"text\",\n  value,\n  onChange,\n  onInput,\n  ...props\n}: TextFieldProps): ReactNode {\n  const element = useRef<HTMLTextAreaElement | HTMLInputElement>(null);\n  useImperativeHandle(ref, () => ({\n    focus() {\n      element.current?.focus();\n    },\n    blur() {\n      element.current?.blur();\n    },\n    select() {\n      element.current?.select();\n    },\n  }));\n  useEffect(() => {\n    element.current?.setCustomValidity(error ?? \"\");\n  }, [error]);\n  if (type === \"textarea\") {\n    return (\n      <textarea\n        {...props}\n        ref={element as RefObject<HTMLTextAreaElement>}\n        className={clsx(\n          styles.root,\n          disabled && styles.disabled,\n          sizeClassName(size),\n        )}\n        disabled={disabled}\n        maxLength={maxLength}\n        name={name}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        rows={rows}\n        tabIndex={tabIndex}\n        title={title}\n        value={value}\n        onChange={(event) => {\n          onChange?.(event.target.value);\n        }}\n        onInput={({ nativeEvent }) => {\n          onInput?.(nativeEvent as InputEvent);\n        }}\n      />\n    );\n  } else {\n    return (\n      <input\n        {...props}\n        ref={element as RefObject<HTMLInputElement>}\n        className={clsx(\n          styles.root,\n          disabled && styles.disabled,\n          sizeClassName(size),\n        )}\n        disabled={disabled}\n        maxLength={maxLength}\n        name={name}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        tabIndex={tabIndex}\n        title={title}\n        type={type}\n        value={value}\n        onChange={(event) => {\n          onChange?.(event.target.value);\n        }}\n        onInput={({ nativeEvent }) => {\n          onInput?.(nativeEvent as InputEvent);\n        }}\n      />\n    );\n  }\n}\n","export class DataError extends Error {\n  override name = \"DataError\";\n\n  constructor(message?: string, options?: ErrorOptions) {\n    super(message, options);\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"DataError\";\n  }\n}\n","export function asUint8Array(\n  buffer: ArrayBufferLike | ArrayBufferView,\n): Uint8Array {\n  if (buffer instanceof Uint8Array) {\n    return buffer;\n  }\n  if (ArrayBuffer.isView(buffer)) {\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n  }\n  return new Uint8Array(buffer);\n}\n","import { DataError } from \"./errors.ts\";\nimport { decode, encode, encodedByteCount } from \"./utf8.ts\";\nimport { asUint8Array } from \"./util.ts\";\n\nexport class Writer {\n  #dataView: DataView;\n  #byteOffset: number;\n\n  constructor(byteLength: number = 64) {\n    this.#dataView = new DataView(new ArrayBuffer(Math.max(byteLength, 64)));\n    this.#byteOffset = 0;\n  }\n\n  #ensureSize(byteLength: number): void {\n    if (this.#dataView.byteLength < byteLength) {\n      let totalSize = 64;\n      while (totalSize < byteLength) {\n        totalSize *= totalSize;\n      }\n      const buffer = new ArrayBuffer(totalSize);\n      new Uint8Array(buffer).set(new Uint8Array(this.#dataView.buffer));\n      this.#dataView = new DataView(buffer);\n    }\n  }\n\n  #ensureAvailable(byteLength: number): void {\n    this.#ensureSize(this.#byteOffset + byteLength);\n  }\n\n  putInt8(value: number): this {\n    if (!Number.isInteger(value) || value < -0x80 || value > 0x7f) {\n      throw new TypeError(\"Value is not int8\");\n    }\n    this.#ensureAvailable(1);\n    this.#dataView.setInt8(this.#byteOffset, value);\n    this.#byteOffset += 1;\n    return this;\n  }\n\n  putUint8(value: number): this {\n    if (!Number.isInteger(value) || value < 0 || value > 0xff) {\n      throw new TypeError(\"Value is not uint8\");\n    }\n    this.#ensureAvailable(1);\n    this.#dataView.setUint8(this.#byteOffset, value);\n    this.#byteOffset += 1;\n    return this;\n  }\n\n  putInt16(value: number): this {\n    if (!Number.isInteger(value) || value < -0x8000 || value > 0x7fff) {\n      throw new TypeError(\"Value is not int16\");\n    }\n    this.#ensureAvailable(2);\n    this.#dataView.setInt16(this.#byteOffset, value, false);\n    this.#byteOffset += 2;\n    return this;\n  }\n\n  putUint16(value: number): this {\n    if (!Number.isInteger(value) || value < 0 || value > 0xffff) {\n      throw new TypeError(\"Value is not uint16\");\n    }\n    this.#ensureAvailable(2);\n    this.#dataView.setUint16(this.#byteOffset, value, false);\n    this.#byteOffset += 2;\n    return this;\n  }\n\n  putInt32(value: number): this {\n    if (!Number.isInteger(value) || value < -0x80000000 || value > 0x7fffffff) {\n      throw new TypeError(\"Value is not int32\");\n    }\n    this.#ensureAvailable(4);\n    this.#dataView.setInt32(this.#byteOffset, value, false);\n    this.#byteOffset += 4;\n    return this;\n  }\n\n  putUint32(value: number): this {\n    if (!Number.isInteger(value) || value < 0 || value > 0xffffffff) {\n      throw new TypeError(\"Value is not uint32\");\n    }\n    this.#ensureAvailable(4);\n    this.#dataView.setUint32(this.#byteOffset, value, false);\n    this.#byteOffset += 4;\n    return this;\n  }\n\n  putFloat32(value: number): this {\n    this.#ensureAvailable(4);\n    this.#dataView.setFloat32(this.#byteOffset, value, false);\n    this.#byteOffset += 4;\n    return this;\n  }\n\n  putFloat64(value: number): this {\n    this.#ensureAvailable(8);\n    this.#dataView.setFloat64(this.#byteOffset, value, false);\n    this.#byteOffset += 8;\n    return this;\n  }\n\n  putIntVlq(value: number): this {\n    if (!Number.isInteger(value) || value < -0x80000000 || value > 0x7fffffff) {\n      throw new TypeError(\"Value is not int32\");\n    }\n    this.putUintVlq(((value << 1) ^ (value >> 31)) >>> 0);\n    return this;\n  }\n\n  putUintVlq(value: number): this {\n    if (!Number.isInteger(value) || value < 0 || value > 0xffffffff) {\n      throw new TypeError(\"Value is not uint32\");\n    }\n    this.#putVlq(value);\n    return this;\n  }\n\n  #putVlq(value: number): void {\n    if (value > 266338304) {\n      this.putUint8(((value >>> 28) & 15) | 128);\n    }\n    if (value > 2080768) {\n      this.putUint8(((value >>> 21) & 127) | 128);\n    }\n    if (value > 16256) {\n      this.putUint8(((value >>> 14) & 127) | 128);\n    }\n    if (value > 127) {\n      this.putUint8(((value >>> 7) & 127) | 128);\n    }\n    this.putUint8(value & 127);\n  }\n\n  putString(value: string): this {\n    const byteLength = encodedByteCount(value);\n    this.putUintVlq(byteLength);\n    this.#ensureAvailable(byteLength);\n    encode(value, this.#dataView, this.#byteOffset);\n    this.#byteOffset += byteLength;\n    return this;\n  }\n\n  putBuffer(buffer: ArrayBufferLike | ArrayBufferView): this {\n    const array = asUint8Array(buffer);\n    this.#ensureAvailable(array.byteLength);\n    new Uint8Array(this.#dataView.buffer).set(array, this.#byteOffset);\n    this.#byteOffset += array.byteLength;\n    return this;\n  }\n\n  buffer(): Uint8Array {\n    return new Uint8Array(this.#dataView.buffer, 0, this.#byteOffset);\n  }\n}\n\nexport class Reader {\n  readonly #dataView: DataView;\n  #byteOffset: number = 0;\n\n  constructor(buffer: ArrayBufferLike | ArrayBufferView) {\n    if (ArrayBuffer.isView(buffer)) {\n      this.#dataView = new DataView(\n        buffer.buffer,\n        buffer.byteOffset,\n        buffer.byteLength,\n      );\n    } else {\n      this.#dataView = new DataView(buffer);\n    }\n  }\n\n  #ensureAvailable(byteLength: number): void {\n    if (this.#byteOffset + byteLength > this.#dataView.byteLength) {\n      throw new DataError(\"Premature end of data\");\n    }\n  }\n\n  getInt8(): number {\n    this.#ensureAvailable(1);\n    const value = this.#dataView.getInt8(this.#byteOffset);\n    this.#byteOffset += 1;\n    return value;\n  }\n\n  getUint8(): number {\n    this.#ensureAvailable(1);\n    const value = this.#dataView.getUint8(this.#byteOffset);\n    this.#byteOffset += 1;\n    return value;\n  }\n\n  getInt16(): number {\n    this.#ensureAvailable(2);\n    const value = this.#dataView.getInt16(this.#byteOffset, false);\n    this.#byteOffset += 2;\n    return value;\n  }\n\n  getUint16(): number {\n    this.#ensureAvailable(2);\n    const value = this.#dataView.getUint16(this.#byteOffset, false);\n    this.#byteOffset += 2;\n    return value;\n  }\n\n  getInt32(): number {\n    this.#ensureAvailable(4);\n    const value = this.#dataView.getInt32(this.#byteOffset, false);\n    this.#byteOffset += 4;\n    return value;\n  }\n\n  getUint32(): number {\n    this.#ensureAvailable(4);\n    const value = this.#dataView.getUint32(this.#byteOffset, false);\n    this.#byteOffset += 4;\n    return value;\n  }\n\n  getFloat32(): number {\n    this.#ensureAvailable(4);\n    const value = this.#dataView.getFloat32(this.#byteOffset, false);\n    this.#byteOffset += 4;\n    return value;\n  }\n\n  getFloat64(): number {\n    this.#ensureAvailable(8);\n    const value = this.#dataView.getFloat64(this.#byteOffset, false);\n    this.#byteOffset += 8;\n    return value;\n  }\n\n  getIntVlq(): number {\n    const value = this.getUintVlq();\n    return (value >>> 1) ^ -(value & 1); // from zig-zag back to two's-complement\n  }\n\n  getUintVlq(): number {\n    return this.#getVlq();\n  }\n\n  #getVlq(): number {\n    let value = 0;\n    const b0 = this.getUint8();\n    value = ((value << 7) | (b0 & 0x7f)) >>> 0;\n    if ((b0 & 0x80) === 0) {\n      return value;\n    }\n    const b1 = this.getUint8();\n    value = ((value << 7) | (b1 & 0x7f)) >>> 0;\n    if ((b1 & 0x80) === 0) {\n      return value;\n    }\n    const b2 = this.getUint8();\n    value = ((value << 7) | (b2 & 0x7f)) >>> 0;\n    if ((b2 & 0x80) === 0) {\n      return value;\n    }\n    const b3 = this.getUint8();\n    value = ((value << 7) | (b3 & 0x7f)) >>> 0;\n    if ((b3 & 0x80) === 0) {\n      return value;\n    }\n    const b4 = this.getUint8();\n    value = ((value << 7) | (b4 & 0x7f)) >>> 0;\n    if ((b4 & 0x80) === 0) {\n      if ((b0 & 0x7f) > 15) {\n        throw new DataError(\"Too many leading bits\");\n      }\n      return value;\n    }\n    throw new DataError(\"Too many trailing bits\");\n  }\n\n  getString(): string {\n    const byteLength = this.getUintVlq();\n    this.#ensureAvailable(byteLength);\n    const value = decode(this.#dataView, this.#byteOffset, byteLength);\n    this.#byteOffset += byteLength;\n    return value;\n  }\n\n  getBuffer(byteLength: number): Uint8Array {\n    this.#ensureAvailable(byteLength);\n    const buffer = new Uint8Array(\n      this.#dataView.buffer,\n      this.#byteOffset,\n      byteLength,\n    );\n    this.#byteOffset += byteLength;\n    return buffer;\n  }\n\n  position(): number {\n    return this.#byteOffset;\n  }\n\n  remaining(): number {\n    return this.#dataView.byteLength - this.#byteOffset;\n  }\n}\n","import { DataError } from \"./errors.ts\";\n\n/**\n * Get number of UTF8 bytes for the specified string.\n * @param value A string.\n * @return Number of UTF8 bytes.\n */\nexport function encodedByteCount(value: string): number {\n  // length   byte[0]    byte[1]    byte[2]    byte[3]\n  // 1        0b0xxxxxxx\n  // 2        0b110xxxxx 0b10xxxxxx\n  // 3        0b1110xxxx 0b10xxxxxx 0b10xxxxxx\n  // 4        0b11110xxx 0b10xxxxxx 0b10xxxxxx 0b10xxxxxx\n\n  let byteCount = 0;\n  let i = 0;\n  while (i < value.length) {\n    const codePoint = value.codePointAt(i) ?? 0;\n    if (codePoint <= 0x7f) {\n      byteCount += 1;\n      i += 1;\n    } else if (codePoint <= 0x7ff) {\n      byteCount += 2;\n      i += 1;\n    } else if (codePoint <= 0xffff) {\n      byteCount += 3;\n      i += 1;\n    } else if (codePoint <= 0x10ffff) {\n      byteCount += 4;\n      i += 2;\n    }\n  }\n  return byteCount;\n}\n\n/**\n * Write string as UTF8 bytes.\n * @param value A string to encode.\n * @param buffer An array to write bytes to.\n * @param byteOffset Byte offset in the array.\n * @return Updated byte offset in the array.\n */\nexport function encode(\n  value: string,\n  buffer: DataView,\n  byteOffset: number,\n): number {\n  let i = 0;\n  while (i < value.length) {\n    const codePoint = value.codePointAt(i) ?? 0;\n    if (codePoint <= 0x7f) {\n      buffer.setUint8(byteOffset++, codePoint);\n      i += 1;\n    } else if (codePoint <= 0x7ff) {\n      buffer.setUint8(byteOffset++, ((codePoint >> 6) & 0x1f) | 0xc0);\n      buffer.setUint8(byteOffset++, ((codePoint >> 0) & 0x3f) | 0x80);\n      i += 1;\n    } else if (codePoint <= 0xffff) {\n      buffer.setUint8(byteOffset++, ((codePoint >> 12) & 0x0f) | 0xe0);\n      buffer.setUint8(byteOffset++, ((codePoint >> 6) & 0x3f) | 0x80);\n      buffer.setUint8(byteOffset++, ((codePoint >> 0) & 0x3f) | 0x80);\n      i += 1;\n    } else if (codePoint <= 0x10ffff) {\n      buffer.setUint8(byteOffset++, ((codePoint >> 18) & 0x7f) | 0xf0);\n      buffer.setUint8(byteOffset++, ((codePoint >> 12) & 0x3f) | 0x80);\n      buffer.setUint8(byteOffset++, ((codePoint >> 6) & 0x3f) | 0x80);\n      buffer.setUint8(byteOffset++, ((codePoint >> 0) & 0x3f) | 0x80);\n      i += 2;\n    }\n  }\n  return byteOffset;\n}\n\n/**\n * Read string from UTF8 bytes.\n * @param buffer An array to read bytes from.\n * @param byteOffset Byte offset in the array.\n * @param byteLength Number of bytes to read.\n * @return String from UTF8 bytes.\n */\nexport function decode(\n  buffer: DataView,\n  byteOffset: number,\n  byteLength: number,\n): string {\n  let value = \"\";\n  const endOffset = byteOffset + byteLength;\n  while (byteOffset < endOffset) {\n    const b0 = buffer.getUint8(byteOffset++);\n    if (b0 < 0x80) {\n      value += String.fromCodePoint(b0);\n    } else if ((b0 & 0xe0) === 0xc0) {\n      if (byteOffset + 1 > endOffset) {\n        throw new DataError(\"Truncated UTF-8 stream\");\n      }\n      const b1 = buffer.getUint8(byteOffset++);\n      const codePoint = ((b0 & 0x1f) << 6) | ((b1 & 0x3f) << 0);\n      value += String.fromCodePoint(codePoint);\n    } else if ((b0 & 0xf0) === 0xe0) {\n      if (byteOffset + 2 > endOffset) {\n        throw new DataError(\"Truncated UTF-8 stream\");\n      }\n      const b1 = buffer.getUint8(byteOffset++);\n      const b2 = buffer.getUint8(byteOffset++);\n      const codePoint =\n        ((b0 & 0x0f) << 12) | ((b1 & 0x3f) << 6) | ((b2 & 0x3f) << 0);\n      value += String.fromCodePoint(codePoint);\n    } else if ((b0 & 0xf8) === 0xf0) {\n      if (byteOffset + 3 > endOffset) {\n        throw new DataError(\"Truncated UTF-8 stream\");\n      }\n      const b1 = buffer.getUint8(byteOffset++);\n      const b2 = buffer.getUint8(byteOffset++);\n      const b3 = buffer.getUint8(byteOffset++);\n      const codePoint =\n        ((b0 & 0x07) << 18) |\n        ((b1 & 0x3f) << 12) |\n        ((b2 & 0x3f) << 6) |\n        ((b3 & 0x3f) << 0);\n      if (codePoint > 0x10ffff) {\n        throw new DataError(\"Invalid code point\");\n      }\n      value += String.fromCodePoint(codePoint);\n    } else {\n      throw new DataError(\"Broken UTF-8 stream\");\n    }\n  }\n  return value;\n}\n","import { asUint8Array } from \"./util.ts\";\n\nconst table: readonly number[] = (() => {\n  const table: number[] = [];\n  for (let i = 0; i < 256; i++) {\n    let c = i;\n    for (let j = 0; j < 8; j++) {\n      c = c & 1 ? 0xedb88320 ^ (c >>> 1) : c >>> 1;\n    }\n    table[i] = c;\n  }\n  return table;\n})();\n\n/**\n * Calculate CRC32 of the specified array.\n */\nexport function crc32(buffer: ArrayBufferLike | ArrayBufferView): number {\n  const array = asUint8Array(buffer);\n  let crc = 0xffffffff;\n  for (let i = 0; i < array.length; i++) {\n    crc = (crc >>> 8) ^ table[(crc ^ array[i]) & 0xff];\n  }\n  return (crc ^ 0xffffffff) >>> 0;\n}\n","import { crc32 } from \"./crc32.ts\";\nimport { DataError } from \"./errors.ts\";\nimport { asUint8Array } from \"./util.ts\";\n\nexport function scramble(\n  buffer: ArrayBufferLike | ArrayBufferView,\n): Uint8Array {\n  const array = asUint8Array(buffer);\n  const k = key();\n  const r = new Uint8Array(array.length + 8);\n  setUint32(r, 0, k);\n  setUint32(r, 4, crc32(array));\n  r.set(array, 8);\n  update(k, r);\n  return r;\n}\n\nexport function unscramble(\n  buffer: ArrayBufferLike | ArrayBufferView,\n): Uint8Array {\n  const array = asUint8Array(buffer);\n  if (array.length < 8) {\n    throw new DataError();\n  }\n  const k = getUint32(array, 0);\n  update(k, array);\n  const c = getUint32(array, 4);\n  const r = array.subarray(8);\n  if (crc32(r) !== c) {\n    throw new DataError();\n  }\n  return r;\n}\n\nfunction update(k: number, a: Uint8Array): void {\n  const g = stream(k);\n  for (let i = 4; i < a.length; i++) {\n    a[i] = a[i] ^ g();\n  }\n}\n\nfunction key(): number {\n  return Math.floor(Math.random() * 0x100000000);\n}\n\nfunction stream(seed: number): () => number {\n  let v = (modMultiply(seed, 0x7fffffed) + 0x00c39ec3) >>> 0;\n  return function (): number {\n    return (v = (modMultiply(v, 0x0019660d) + 0x3c6ef35f) >>> 0);\n  };\n}\n\nfunction getUint32(a: Uint8Array, p: number): number {\n  const v0 = (a[p + 0] << 0x18) >>> 0;\n  const v1 = (a[p + 1] << 0x10) >>> 0;\n  const v2 = (a[p + 2] << 0x08) >>> 0;\n  const v3 = (a[p + 3] << 0x00) >>> 0;\n  return (v0 | v1 | v2 | v3) >>> 0;\n}\n\nfunction setUint32(a: Uint8Array, p: number, v: number): void {\n  a[p + 0] = v >>> 0x18;\n  a[p + 1] = v >>> 0x10;\n  a[p + 2] = v >>> 0x08;\n  a[p + 3] = v >>> 0x00;\n}\n\n/**\n * Multiply modulo 0xFFFFFFFF.\n */\nfunction modMultiply(a: number, b: number): number {\n  a = a >>> 0;\n  b = b >>> 0;\n  let r = 0;\n  for (let i = 0; i < 32; i++) {\n    if (((b >>> i) & 1) === 1) {\n      r += a << i;\n    }\n  }\n  return r >>> 0;\n}\n"],"names":["ErrorAlert","error","severity","AggregateError","errors","map","child","index","String","report","parseCldr","text","Error","characterKeys","forwardMap","Map","reverseMap","key","value","makeDeadCharacter","result","codePoint","dead","get","warnings","push","formatDeadCharacter","fromCodePoint","LayoutBuilder","isKey","includes","allKeys","from","dict","builder","a","b","c","d","Object","entries","setAll","constructor","that","character","this","set","Symbol","iterator","characters","valid","size","TypeError","id","getOne","mod","None","Shift","Alt","ShiftAlt","setOne","fix","toJSON","keymap","list","length","at","pop","every","isCodePoint","isDead","isSpecial","special","parseKeymap","layout","JSON","parse","parseCharacterList","Array","isArray","parseCharacter","isLigature","parseKlc","state","section","Section","INIT","line0","split","line","stripComments","trim","test","KBD","ATTRIBUTES","SHIFTSTATE","LAYOUT","LIGATURE","DEADKEY","KEYNAME","KEYNAME_EXT","KEYNAME_DEAD","DESCRIPTIONS","LANGUAGENAMES","ENDKBD","shiftstate","altgr","SC_to_VK","VK_to_SC","Number","SC","VK","CAP","arg","toKeyId","v","codePointAt","m","exec","parseInt","parseCodePoint","i","modifier","MOD","ligature","s","ch","charAt","substring","shiftState","decodeText","data","TextDecoder","buffer","Uint8Array","sniffTextEncoding","decode","CustomLayoutContext","createContext","useCustomLayout","useContext","undefined","CustomLayoutProvider","children","EN_US","customLayout","setCustomLayout","useState","keyboard","setKeyboard","useEffect","geometry","geometryDict","custom","language","Provider","setLayout","_2","_5","_6","_7","_8","_9","_a","_b","_c","_f","_10","keySize","getKeyCenter","shape","x","w","y","h","getFrameSize","cols","rows","shapes","values","Math","max","margin","Surface","ref","props","overflow","makeKeyComponent","letterName","className","width","height","homing","cx","cy","r","label","labels","makeLabel","ta","tb","tc","td","ab","cd","makeCodePointLabel","makeDeadLabel","makeLigatureLabel","zoneClassName","clsx","hand","handClassNameOf","finger","fingerClassNameOf","zoneClassNameOf","KeyComponent","depressed","toggled","showColors","displayName","memo","pos","align","ha","va","textAnchor","dominantBaseline","direction","KeyLayer","depressedKeys","toggledKeys","onKeyHoverIn","onKeyHoverOut","onKeyClick","svgRef","useRef","useMemo","MemoizedKeyElements","getKeyElements","onMouseOver","event","relayEvent","current","onMouseOut","onClick","select","root","target","handler","Element","contains","dataset","parentElement","component","state0","state1","state2","state3","state4","state5","state6","state7","Component","VirtualKeyboard","moving","viewBox","style","aspectRatio","rx","ry","CharacterInfo","ModifierInfo","KeyDetails","FieldList","LayoutJson","TextField","type","stringify","readOnly","LayoutTable","LayoutView","keyId","setKeyId","setIndex","TabList","selectedIndex","onSelect","LiveInputInfo","inputData","NameValue","name","LiveImport","onChange","setInputData","onKeyDown","code","preventDefault","shift","getModifierState","alt","onKeyUp","onInput","lastKey","inputType","CustomLayoutDesigner","DesignPane","exportRef","importRef","href","download","hidden","inlineSize","blockSize","accept","el","files","async","Blob","arrayBuffer","parser","importLayout","then","catch","err","console","finally","Para","Button","json","exportLayout","blob","setAttribute","URL","createObjectURL","click","Filler","HeatmapLayer","histogram","f","getShape","min","sort","normalize","items","combo","getCombo","flatten","KeyboardStats","stats","homeRow","topRow","bottomRow","handSwitches","fingerSwitches","formatMessage","useIntl","formatPercents","title","PointersLayer","suffix","delay","setCombo","tasks","delayed","cancelAll","svg","animate","querySelectorAll","beginElement","pointers","unshift","pointer","l","prefix","attributeName","to","dur","repeatCount","restart","TransitionsLayer","markerWidth","markerHeight","refX","refY","orient","markerUnits","fill","stroke","codePoint0","codePoint1","slice","shape0","shape1","x0","y0","x1","dx","dy","y1","theta","atan2","sqrt","mx","my","X1","cos","Y1","sin","X2","Y2","modifierStyle","opacity","markerEnd","ZonesLayer","findHomingKey","zone","inZone","LeftHand","center","RightHand","STANDARD_MOD","ANGLE_MOD","Backquote","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","Digit0","Minus","Equal","Backspace","Tab","KeyQ","KeyW","KeyE","KeyR","KeyT","KeyY","KeyU","KeyI","KeyO","KeyP","BracketLeft","BracketRight","Backslash","CapsLock","KeyA","KeyS","KeyD","KeyF","KeyG","KeyH","KeyJ","KeyK","KeyL","Semicolon","Quote","Enter","ShiftLeft","KeyZ","KeyX","KeyC","KeyV","KeyB","KeyN","KeyM","Comma","Period","Slash","ShiftRight","ControlLeft","AltLeft","Space","AltRight","ControlRight","ANGLE_WIDE_MOD","SYMMETRIC_MOD","IntlBackslash","ZoneMod","static","STANDARD","SYMMETRIC","first","next","toString","Geometry","form","zones","ALL","ANSI_101","ANSI_101_FULL","ISO_102","ISO_102_FULL","KOREAN_103","KOREAN_103_FULL","BRAZILIAN_104","BRAZILIAN_104_FULL","JAPANESE_106","JAPANESE_106_FULL","MATRIX","EXTRA","Insert","Home","PageUp","Delete","End","PageDown","ArrowUp","ArrowLeft","ArrowDown","ArrowRight","NumLock","NumpadDivide","NumpadMultiply","NumpadSubtract","Numpad7","Numpad8","Numpad9","NumpadAdd","Numpad4","Numpad5","Numpad6","Numpad1","Numpad2","Numpad3","NumpadEnter","Numpad0","NumpadDecimal","IntlRo","IntlHanZen","IntlYen","IntlMuhenkan","IntlHenkan","IntlHiraKata","Lang2","Lang1","KeyModifier","complexity","complexityOf","KeyCharacters","getCodePoint","Boolean","KeyCombo","KeyShape","row","geometryConf","characterConf","selectZone","fingerZones","handZones","rowZones","inAnyZone","ids","some","inAllZones","subset","Language","AR","BE","CS","DA","DE","EL","EN","ES","FA","FR","HE","HR","HU","IT","LT","NB","NL","PL","PT","RO","RU","SL","SV","TH","TR","UK","script","alphabet","locale","collator","compare","upperCase","lowerCase","capitalCase","Intl","Locale","maximize","Collator","freeze","toLocaleUpperCase","toLocaleLowerCase","Keyboard","characterDict","combos","addCombo","addDeadCombo","getCharacters","getCodePoints","weights","codePoints","Set","has","weight","getExampleText","getExampleLetters","filter","oldCombo","combinedCodePoint","nullMod","angleMod","remapZones","angleWideMod","fromEntries","Layout","xid","family","emulate","geometries","EN_DVORAK","EN_DVORAK_PROG","EN_COLEMAK","EN_COLEMAK_DH_ANSI","EN_COLEMAK_DH_ANSI_WIDE","EN_COLEMAK_DH_ISO","EN_COLEMAK_DH_ISO_WIDE","EN_COLEMAK_DH_MATRIX","EN_WORKMAN","EN_CANARY","EN_CANARY_MATRIX","EN_NERPS","EN_NERPS_MATRIX","EN_NIGHT_MATRIX","EN_HANDS_DOWN_NEU","EN_HANDS_DOWN_PROMETHIUM","EN_STURDY","EN_NORMAN","EN_HALMAK","EN_ENGRAM","EN_GALLIUM","EN_GALLIUM_MATRIX","EN_GRAPHITE","EN_APT_v3","EN_FOCAL","EN_ENTHIUM_V6","EN_ENTHIUM_V10","EN_UK","EN_JP","EN_MTGAP","EL_GR","CS_CZ","DA_DK","DE_DE","DE_CH","DE_NEO_2","DE_BONE","DE_MINE","DE_NOTED","DE_CMOS","DE_ADNW_BUT_XCV","FR_FR","FR_CA","FR_CH","FR_BEPO","FR_ERGO_L","FR_ERGOPTI","FR_ERGLACE","FR_OPTIMOT_ERGO","HE_IL","HE_IL_ARKN","HU_HU","IT_IT","LT_LT","NB_NO","NB_DVORAK","NB_KVIKK","NB_SKARP","NL_NL","NL_BE","ES_ES","ES_MX","PL_PL","PL_FWYR","PT_BR","PT_PT","BE_BY","SL_SI","SV_SE","UK_UA","RU_RU","TR_TR_Q","TR_TR_F","AR_SA","AR_SA_102","FA_IR","FA_IR_LEGACY","TH_TH","TH_PAT","TH_MAN","RO_RO","findLayout","localeId","region","toLowerCase","startsWith","selectableLayouts","selectLayout","Emulation","keyboardProps","emulation","Forward","colors","KeyboardOptions","settings","default","withLanguage","withLayout","withGeometry","withZones","selectableLanguages","selectableGeometries","selectableZones","save","layouts","ThumbClusterRight1","ThumbClusterLeft1","ThumbClusterLeft2","ThumbClusterRight2","loadKeyboard","args","options","loadImpl","KeyboardContext","useKeyboard","KeyboardProvider","filterText","ws","append","space","char","letter","Ngram1","Float64Array","add","indexOf","Ngram2","j","sum","reduce","computeStats","ng1","ng2","keysInZone","useFormattedNames","dn","formatLanguageName","formatLayoutName","replaceAll","regionId","formatRegionName","formatFullLayoutName","useHotkeys","useHotkeysHandler","parseHotkeyMap","useCallback","hotkey","altKey","ctrlKey","ctrl","metaKey","meta","shiftKey","stopPropagation","spec","parseHotkey","hotkeyCache","parsed","keys","_1","_3","_4","asName","asValue","isValidElement","Name","Value","delta","Spacer","OptionListButton","disabled","focused","open","option","tabIndex","element","OptionListMenu","selectedOption","item","role","OptionList","onBlur","onFocus","setFocused","setOpen","handleOpen","handleNavigate","handleSelect","find","setSelectedOption","dir","useOptionList","randomSample","random","weightedRandomSample","toCodePoints","done","charCount","toCombined","toBase","isDiacritic","combineDiacritic","base","combining","baseList","combinedList","combined","formatCodePoint","padStart","expand","expandMap","replace","replaceMap","isControl","isLinebreak","isWhitespace","textStatsOf","words","Segmenter","granularity","graphemes","counts","lengths","numWhitespace","numCharacters","numWords","lenWords","wordLength","word","grapheme","segment","isWordLike","numUniqueWords","avgWordLength","wordCount","count","anchor","icon","useImperativeHandle","focus","blur","getBoundingBox","tabs","Children","toArray","selectedTab","selectPrev","selectNext","hotkeys","forEach","tab","selected","styleSizeFit","styleSizeFill","styleSizeFillAlt","sizeClassName","as","Field","Alphabet","model","letters","join","Letter","digits","punctuators","specials","programming","toLetter","codePointOrder","frequencyOrder","weightedFrequencyOrder","restrict","signature","load","reader","getUint8","readSignature","chain","order","getUint16","readChain","segments","segmentIndex","entryIndex","frequency","readSegments","remaining","compress","writer","putUint8","writeSignature","putUint16","writeChain","writeSegments","toNgram1","ngram","toNgram2","offsets","pow","unscrambleWord","blacklistByLanguage","minLength","maxLength","PhoneticModel","super","nextWord","ngram1","ngram2","makePhoneticModel","table","prefixList","PrefixList","prefixes","findPrefixes","attempt","retry","entry","Prefix","matches","walk","focusedCodePoint","censor","blacklist","allow","getBlacklist","PhoneticModelContext","FakePhoneticModel","letter1","letter2","letter3","letter4","letter5","letter6","letter7","letter8","letter9","letter10","rng","mark","reset","FakeRNGStream","Filter","letters0","focused0","codePointOf","placeholder","setCustomValidity","nativeEvent","message","toStringTag","ArrayBuffer","isView","byteOffset","byteLength","Writer","DataView","totalSize","putInt8","isInteger","setInt8","setUint8","putInt16","setInt16","setUint16","putInt32","setInt32","putUint32","setUint32","putFloat32","setFloat32","putFloat64","setFloat64","putIntVlq","putUintVlq","putString","byteCount","encodedByteCount","encode","putBuffer","array","Reader","getInt8","getInt16","getInt32","getUint32","getFloat32","getFloat64","getIntVlq","getUintVlq","b0","b1","b2","b3","b4","getString","endOffset","getBuffer","position","scramble","k","floor","crc","update","g","seed","modMultiply","stream","p"],"sourceRoot":""}