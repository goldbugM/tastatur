{"version":3,"file":"db264f601f2ec19e.js","mappings":"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","sources":["webpack://tastatur.com/./packages/mkboard-phonetic-model-loader/lib/loader.ts","webpack://tastatur.com/./packages/mkboard-phonetic-model-loader/lib/assets.ts","webpack://tastatur.com/./packages/mkboard-phonetic-model-loader/lib/PhoneticModelLoader.tsx","webpack://tastatur.com/./packages/mkboard-content-books/lib/load.ts","webpack://tastatur.com/./packages/mkboard-content-books/lib/BookContentLoader.tsx","webpack://tastatur.com/./packages/mkboard-widget/lib/hooks/use-deferred.tsx","webpack://tastatur.com/./packages/mkboard-widget/lib/components/view/ViewSwitch.tsx","webpack://tastatur.com/./packages/mkboard-widget/lib/components/explainer/ExplainerBoundary.tsx","webpack://tastatur.com/./packages/mkboard-result-loader/lib/errors.ts","webpack://tastatur.com/./packages/mkboard-result-loader/lib/internal/debug.tsx","webpack://tastatur.com/./packages/mkboard-result-loader/lib/internal/ResultProvider.tsx","webpack://tastatur.com/./packages/mkboard-result-io/lib/errors.ts","webpack://tastatur.com/./packages/mkboard-result-io/lib/header.ts","webpack://tastatur.com/./packages/mkboard-result-io/lib/binary.ts","webpack://tastatur.com/./packages/mkboard-result-io/lib/legacyjson.ts","webpack://tastatur.com/./packages/mkboard-result-io/lib/sync.ts","webpack://tastatur.com/./packages/mkboard-result-loader/lib/internal/indexeddb/errors.ts","webpack://tastatur.com/./packages/mkboard-result-loader/lib/internal/indexeddb/idb.ts","webpack://tastatur.com/./packages/mkboard-result-loader/lib/internal/local.ts","webpack://tastatur.com/./packages/mkboard-publicid/lib/index.ts","webpack://tastatur.com/./packages/mkboard-result-loader/lib/internal/remotesync.ts","webpack://tastatur.com/./packages/mkboard-result-io/lib/file.ts","webpack://tastatur.com/./packages/mkboard-result-loader/lib/internal/storage.ts","webpack://tastatur.com/./packages/mkboard-result-loader/lib/ResultLoader.tsx","webpack://tastatur.com/./packages/mkboard-result-loader/lib/internal/loader.ts","webpack://tastatur.com/./packages/mkboard-content-words/lib/load.ts","webpack://tastatur.com/./packages/mkboard-content-words/lib/WordListLoader.tsx"],"sourcesContent":["import { type Language } from \"@mkboard/keyboard\";\r\nimport {\r\n  censor,\r\n  makePhoneticModel,\r\n  type PhoneticModel,\r\n} from \"@mkboard/phonetic-model\";\r\nimport { expectType, request } from \"@mkboard/request\";\r\nimport { modelAssetPath } from \"./assets.ts\";\r\n\r\nexport const loaderImpl: PhoneticModel.Loader = async (\r\n  language: Language,\r\n): Promise<PhoneticModel> => {\r\n  const response = await request\r\n    .use(expectType(\"application/octet-stream\"))\r\n    .GET(modelAssetPath(language))\r\n    .send();\r\n  const body = await response.arrayBuffer();\r\n  const model = makePhoneticModel(language, new Uint8Array(body));\r\n  return censor(model);\r\n};\r\n","import { Language } from \"@mkboard/keyboard\";\r\nimport AR from \"@mkboard/phonetic-model/assets/model-ar.data\";\r\nimport BE from \"@mkboard/phonetic-model/assets/model-be.data\";\r\nimport CS from \"@mkboard/phonetic-model/assets/model-cs.data\";\r\nimport DA from \"@mkboard/phonetic-model/assets/model-da.data\";\r\nimport DE from \"@mkboard/phonetic-model/assets/model-de.data\";\r\nimport EL from \"@mkboard/phonetic-model/assets/model-el.data\";\r\nimport EN from \"@mkboard/phonetic-model/assets/model-en.data\";\r\nimport ES from \"@mkboard/phonetic-model/assets/model-es.data\";\r\nimport FA from \"@mkboard/phonetic-model/assets/model-fa.data\";\r\nimport FR from \"@mkboard/phonetic-model/assets/model-fr.data\";\r\nimport HE from \"@mkboard/phonetic-model/assets/model-he.data\";\r\nimport HR from \"@mkboard/phonetic-model/assets/model-hr.data\";\r\nimport HU from \"@mkboard/phonetic-model/assets/model-hu.data\";\r\nimport IT from \"@mkboard/phonetic-model/assets/model-it.data\";\r\nimport LT from \"@mkboard/phonetic-model/assets/model-lt.data\";\r\nimport NB from \"@mkboard/phonetic-model/assets/model-nb.data\";\r\nimport NL from \"@mkboard/phonetic-model/assets/model-nl.data\";\r\nimport PL from \"@mkboard/phonetic-model/assets/model-pl.data\";\r\nimport PT from \"@mkboard/phonetic-model/assets/model-pt.data\";\r\nimport RO from \"@mkboard/phonetic-model/assets/model-ro.data\";\r\nimport RU from \"@mkboard/phonetic-model/assets/model-ru.data\";\r\nimport SL from \"@mkboard/phonetic-model/assets/model-sl.data\";\r\nimport SV from \"@mkboard/phonetic-model/assets/model-sv.data\";\r\nimport TH from \"@mkboard/phonetic-model/assets/model-th.data\";\r\nimport TR from \"@mkboard/phonetic-model/assets/model-tr.data\";\r\nimport UK from \"@mkboard/phonetic-model/assets/model-uk.data\";\r\n\r\nexport function modelAssetPath(language: Language): string {\r\n  switch (language) {\r\n    case Language.AR:\r\n      return AR;\r\n    case Language.BE:\r\n      return BE;\r\n    case Language.CS:\r\n      return CS;\r\n    case Language.DA:\r\n      return DA;\r\n    case Language.DE:\r\n      return DE;\r\n    case Language.EL:\r\n      return EL;\r\n    case Language.EN:\r\n      return EN;\r\n    case Language.ES:\r\n      return ES;\r\n    case Language.FA:\r\n      return FA;\r\n    case Language.FR:\r\n      return FR;\r\n    case Language.HE:\r\n      return HE;\r\n    case Language.HR:\r\n      return HR;\r\n    case Language.HU:\r\n      return HU;\r\n    case Language.IT:\r\n      return IT;\r\n    case Language.LT:\r\n      return LT;\r\n    case Language.NB:\r\n      return NB;\r\n    case Language.NL:\r\n      return NL;\r\n    case Language.PL:\r\n      return PL;\r\n    case Language.PT:\r\n      return PT;\r\n    case Language.RO:\r\n      return RO;\r\n    case Language.RU:\r\n      return RU;\r\n    case Language.SL:\r\n      return SL;\r\n    case Language.SV:\r\n      return SV;\r\n    case Language.TH:\r\n      return TH;\r\n    case Language.TR:\r\n      return TR;\r\n    case Language.UK:\r\n      return UK;\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n","import { catchError } from \"@mkboard/debug\";\r\nimport { type Language } from \"@mkboard/keyboard\";\r\nimport { LoadingProgress } from \"@mkboard/pages-shared\";\r\nimport {\r\n  type PhoneticModel,\r\n  PhoneticModelContext,\r\n} from \"@mkboard/phonetic-model\";\r\nimport { type ReactNode, useEffect, useState } from \"react\";\r\nimport { loaderImpl } from \"./loader.ts\";\r\n\r\nexport function PhoneticModelLoader({\r\n  language,\r\n  children,\r\n  fallback = <LoadingProgress />,\r\n}: {\r\n  readonly language: Language;\r\n  readonly children: (result: PhoneticModel) => ReactNode;\r\n  readonly fallback?: ReactNode;\r\n}): ReactNode {\r\n  return (\r\n    <Loader key={language.id} language={language} fallback={fallback}>\r\n      {children}\r\n    </Loader>\r\n  );\r\n}\r\n\r\nexport namespace PhoneticModelLoader {\r\n  export let loader: PhoneticModel.Loader = loaderImpl;\r\n}\r\n\r\nfunction Loader({\r\n  language,\r\n  children,\r\n  fallback,\r\n}: {\r\n  readonly language: Language;\r\n  readonly children: (result: PhoneticModel) => ReactNode;\r\n  readonly fallback?: ReactNode;\r\n}): ReactNode {\r\n  const result = useLoader(language);\r\n  if (result == null) {\r\n    return fallback;\r\n  } else {\r\n    return (\r\n      <PhoneticModelContext.Provider value={result}>\r\n        {children(result)}\r\n      </PhoneticModelContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nfunction useLoader(language: Language): PhoneticModel | null {\r\n  const [result, setResult] = useState<PhoneticModel | null>(null);\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n\r\n    PhoneticModelLoader.loader(language)\r\n      .then((result) => {\r\n        if (!didCancel) {\r\n          setResult(result);\r\n        }\r\n      })\r\n      .catch(catchError);\r\n\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, [language]);\r\n\r\n  return result;\r\n}\r\n","import { Book, type Content } from \"@mkboard/content\";\r\n\r\nexport async function loadContent(book: Book): Promise<Content> {\r\n  switch (book) {\r\n    case Book.EN_ALICE_WONDERLAND:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"book-en-alice-wonderland\" */\r\n          \"./data/en-alice-wonderland.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default as any;\r\n    case Book.EN_JEKYLL_HYDE:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"book-en-jekyll-hyde\" */\r\n          \"./data/en-jekyll-hyde.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default as any;\r\n    case Book.EN_CALL_WILD:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"book-en-call-wild\" */\r\n          \"./data/en-call-wild.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default as any;\r\n    case Book.ES_MARIANELA:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"book-es-marianela\" */\r\n          \"./data/es-marianela.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default as any;\r\n    case Book.DE_ALICE_WONDERLAND:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"book-de-alice-wonderland\" */\r\n          \"./data/de-alice-wonderland.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default as any;\r\n    case Book.FR_ALICE_WONDERLAND:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"book-fr-alice-wonderland\" */\r\n          \"./data/fr-alice-wonderland.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default as any;\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n","import { type Book, type BookContent } from \"@mkboard/content\";\r\nimport { catchError } from \"@mkboard/debug\";\r\nimport { type ReactNode, useEffect, useState } from \"react\";\r\nimport { loadContent } from \"./load.ts\";\r\n\r\nexport function BookContentLoader({\r\n  book,\r\n  children,\r\n  fallback,\r\n}: {\r\n  readonly book: Book;\r\n  readonly children: (result: BookContent) => ReactNode;\r\n  readonly fallback?: ReactNode;\r\n}): ReactNode {\r\n  return (\r\n    <Loader key={book.id} book={book} fallback={fallback}>\r\n      {children}\r\n    </Loader>\r\n  );\r\n}\r\n\r\nfunction Loader({\r\n  book,\r\n  children,\r\n  fallback,\r\n}: {\r\n  readonly book: Book;\r\n  readonly children: (result: BookContent) => ReactNode;\r\n  readonly fallback?: ReactNode;\r\n}): ReactNode {\r\n  const result = useLoader(book);\r\n  if (result == null) {\r\n    return fallback;\r\n  } else {\r\n    return children(result);\r\n  }\r\n}\r\n\r\nfunction useLoader(book: Book): BookContent | null {\r\n  const [bookContent, setBookContent] = useState<BookContent | null>(null);\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n\r\n    loadContent(book)\r\n      .then((content) => {\r\n        if (!didCancel) {\r\n          setBookContent({ book, content });\r\n        }\r\n      })\r\n      .catch(catchError);\r\n\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, [book]);\r\n\r\n  return bookContent;\r\n}\r\n","import {\n  type ComponentType,\n  type FC,\n  memo,\n  type ReactNode,\n  useEffect,\n  useState,\n} from \"react\";\n\ntype Unknown = unknown;\n\nexport const useDeferred = <T extends Unknown>(value: T): T => {\n  const [deferred, setDeferred] = useState<T>(value);\n  useEffect(() => {\n    const id = requestAnimationFrame(() => {\n      setDeferred(value);\n    });\n    return () => {\n      cancelAnimationFrame(id);\n    };\n  }, [value]);\n  return deferred;\n};\n\nexport const withDeferred = <P extends Record<string, Unknown>>(\n  WrappedComponent: ComponentType<P>,\n): FC<P> => {\n  const DeferredComponent: FC<P> = (props: P): ReactNode => {\n    const deferredProps = useDeferred(props);\n    return <WrappedComponent {...deferredProps} />;\n  };\n  DeferredComponent.displayName = `Deferred${\n    WrappedComponent.displayName || WrappedComponent.name || \"Component\"\n  }`;\n  return memo(DeferredComponent);\n};\n","import {\n  createContext,\n  type FunctionComponent,\n  useContext,\n  useState,\n} from \"react\";\n\nexport type ViewName = string;\nexport type ViewProps = Record<string, any>;\nexport type ViewMap = { readonly [name: ViewName]: FunctionComponent<any> };\n\nexport const ViewContext = createContext<{\n  readonly setView: (name: ViewName, props?: ViewProps) => void;\n}>({\n  setView: (name) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(`Switch view to [${name}]`);\n    }\n  },\n});\n\nexport function useView<T extends ViewMap>(views: T) {\n  return useContext(ViewContext) as {\n    readonly setView: (name: keyof T, props?: ViewProps) => void;\n  };\n}\n\nexport function ViewSwitch({ views }: { readonly views: ViewMap }) {\n  const [[name, props], setView] = useState(\n    () => [Object.keys(views)[0], {}] as [ViewName, ViewProps],\n  );\n  const View = views[name];\n  if (View == null) {\n    throw new Error(\n      process.env.NODE_ENV !== \"production\"\n        ? `Unknown view [${name}]`\n        : undefined,\n    );\n  }\n  return (\n    <ViewContext.Provider\n      value={{\n        setView: (name, props = {}) => {\n          setView([name, props]);\n        },\n      }}\n    >\n      <View {...props} />\n    </ViewContext.Provider>\n  );\n}\n","import { type ReactNode, useState } from \"react\";\nimport { ExplainerStateContext } from \"./context.ts\";\n\nexport function ExplainerBoundary({\n  defaultVisible = true,\n  children,\n}: {\n  readonly defaultVisible?: boolean;\n  readonly children: ReactNode;\n}): ReactNode {\n  const [explainersVisible, setExplainersVisible] = useState(defaultVisible);\n  return (\n    <ExplainerStateContext.Provider\n      value={{\n        explainersVisible,\n        toggleExplainers: (v) => {\n          setExplainersVisible(v ?? !explainersVisible);\n        },\n      }}\n    >\n      {children}\n    </ExplainerStateContext.Provider>\n  );\n}\n","export class DatabaseError extends Error {\n  override name = \"DatabaseError\";\n\n  constructor(message?: string, options?: ErrorOptions) {\n    super(message, options);\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"DatabaseError\";\n  }\n}\n","import { ErrorAlert } from \"@mkboard/debug\";\r\n\r\n/**\r\n * Database errors are recoverable. This handler will show a friendly\r\n * error message, but will not crash the application.\r\n */\r\nexport function catchError(error: unknown) {\r\n  console.error(error);\r\n  if (process.env.REPORT_ERRORS === \"true\") {\r\n    ErrorAlert.toast(\r\n      <>\r\n        <p>Oh no! Database error!</p>\r\n        <p>This is likely a temporary problem and will be resolved soon.</p>\r\n      </>,\r\n      error,\r\n    );\r\n  }\r\n}\r\n","import { type Result, ResultContext } from \"@mkboard/result\";\r\nimport { type ReactNode, useState } from \"react\";\r\nimport { catchError } from \"./debug.tsx\";\r\nimport { type ResultStorage } from \"./types.ts\";\r\n\r\nexport function ResultProvider({\r\n  storage,\r\n  initialResults,\r\n  children,\r\n}: {\r\n  readonly storage: ResultStorage;\r\n  readonly initialResults: readonly Result[];\r\n  readonly children: ReactNode;\r\n}): ReactNode {\r\n  const [results, setResults] = useState(initialResults);\r\n  return (\r\n    <ResultContext.Provider\r\n      value={{\r\n        results,\r\n        appendResults: (newResults) => {\r\n          setResults([...results, ...newResults]);\r\n          storage.append(newResults).catch(catchError);\r\n        },\r\n        clearResults: () => {\r\n          setResults([]);\r\n          storage.clear().catch(catchError);\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </ResultContext.Provider>\r\n  );\r\n}\r\n","export class InvalidFormatError extends Error {\n  override name = \"InvalidFormatError\";\n\n  constructor(message?: string, options?: ErrorOptions) {\n    super(message, options);\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"InvalidFormatError\";\n  }\n}\n","import { type Reader, Writer } from \"@mkboard/binary\";\r\n\r\nexport const HEADER_SIGNATURE = 0x4b455942;\r\nexport const HEADER_VERSION = 2;\r\nexport const HEADER = new Writer()\r\n  .putInt32(HEADER_SIGNATURE)\r\n  .putInt32(HEADER_VERSION)\r\n  .buffer();\r\n\r\nexport function validateHeader(reader: Reader): boolean {\r\n  return (\r\n    reader.remaining() >= HEADER.byteLength &&\r\n    reader.getUint32() === HEADER_SIGNATURE &&\r\n    reader.getUint32() === HEADER_VERSION\r\n  );\r\n}\r\n","import { type Reader, type Writer } from \"@mkboard/binary\";\r\nimport { Layout } from \"@mkboard/keyboard\";\r\nimport { Result, TextType } from \"@mkboard/result\";\r\nimport { Histogram, type Sample } from \"@mkboard/textinput\";\r\nimport { InvalidFormatError } from \"./errors.ts\";\r\nimport { validateHeader } from \"./header.ts\";\r\n\r\nexport function writeResult(writer: Writer, result: Result): void {\r\n  const samples = [...result.histogram];\r\n  writer.putUint8(result.layout.xid);\r\n  writer.putUint8(result.textType.xid);\r\n  writer.putUint32(Math.round(result.timeStamp / 1000));\r\n  writer.putUintVlq(result.time);\r\n  writer.putUintVlq(result.length);\r\n  writer.putUintVlq(result.errors);\r\n  writer.putUintVlq(samples.length);\r\n  for (const sample of samples) {\r\n    writer.putUintVlq(sample.codePoint);\r\n    writer.putUintVlq(sample.hitCount);\r\n    writer.putUintVlq(sample.missCount);\r\n    writer.putUintVlq(sample.timeToType);\r\n  }\r\n}\r\n\r\nexport function writeResults(writer: Writer, results: Iterable<Result>): void {\r\n  for (const result of results) {\r\n    writeResult(writer, result);\r\n  }\r\n}\r\n\r\nexport function readResult(reader: Reader): Result {\r\n  const layoutXId = reader.getUint8();\r\n  const textTypeXId = reader.getUint8();\r\n  const timestamp = reader.getUint32() * 1000;\r\n  const time = reader.getUintVlq();\r\n  const length = reader.getUintVlq();\r\n  const errors = reader.getUintVlq();\r\n  const size = reader.getUintVlq();\r\n  const samples: Sample[] = [];\r\n  for (let i = 0; i < size; i++) {\r\n    const codePoint = reader.getUintVlq();\r\n    const hitCount = reader.getUintVlq();\r\n    const missCount = reader.getUintVlq();\r\n    const timeToType = reader.getUintVlq();\r\n    samples.push({\r\n      codePoint,\r\n      hitCount,\r\n      missCount,\r\n      timeToType,\r\n    });\r\n  }\r\n  return new Result(\r\n    Layout.ALL.xget(layoutXId),\r\n    TextType.ALL.xget(textTypeXId),\r\n    timestamp,\r\n    length,\r\n    time,\r\n    errors,\r\n    new Histogram(samples),\r\n  );\r\n}\r\n\r\nexport function* readResults(reader: Reader): Iterable<Result> {\r\n  while (reader.remaining() > 0) {\r\n    yield readResult(reader);\r\n  }\r\n}\r\n\r\nexport function* readStructuredContent(reader: Reader): Iterable<Result> {\r\n  if (reader.remaining() > 0) {\r\n    if (!validateHeader(reader)) {\r\n      throw new InvalidFormatError(\"Invalid header\");\r\n    }\r\n    try {\r\n      yield* readResults(reader);\r\n    } catch (err: any) {\r\n      throw new InvalidFormatError(\"Invalid data format\", { cause: err });\r\n    }\r\n  }\r\n}\r\n","import { Layout } from \"@mkboard/keyboard\";\r\nimport { isPlainObject, isString } from \"@mkboard/lang\";\r\nimport { Result, TextType } from \"@mkboard/result\";\r\nimport { Histogram } from \"@mkboard/textinput\";\r\n\r\nexport type ResultJson = {\r\n  readonly l: string;\r\n  readonly m: string;\r\n  readonly ts: number;\r\n  readonly n: number;\r\n  readonly t: number;\r\n  readonly e: number;\r\n  readonly h: HistogramtJson;\r\n};\r\n\r\nexport type HistogramtJson = {\r\n  readonly [codePoint: number]: {\r\n    readonly h: number;\r\n    readonly m: number;\r\n    readonly t: number;\r\n  };\r\n};\r\n\r\nexport function resultToJson(result: Result): ResultJson {\r\n  return {\r\n    l: result.layout.id,\r\n    m: result.textType.id,\r\n    ts: result.timeStamp,\r\n    n: result.length,\r\n    t: result.time,\r\n    e: result.errors,\r\n    h: histogramToJson(result.histogram),\r\n  };\r\n}\r\n\r\nexport function histogramToJson(histogram: Histogram): HistogramtJson {\r\n  const json: {\r\n    [codePoint: number]: {\r\n      h: number;\r\n      m: number;\r\n      t: number;\r\n    };\r\n  } = {};\r\n  for (const { codePoint, hitCount, missCount, timeToType } of histogram) {\r\n    json[codePoint] = {\r\n      h: hitCount,\r\n      m: missCount,\r\n      t: timeToType,\r\n    };\r\n  }\r\n  return json;\r\n}\r\n\r\nexport function resultFromJson(json: ResultJson): Result | null {\r\n  if (!isPlainObject(json)) {\r\n    return null;\r\n  }\r\n  const {\r\n    l: layoutId,\r\n    m: textTypeId,\r\n    ts: timeStamp,\r\n    n: length,\r\n    t: time,\r\n    e: errors,\r\n    h: histogramJson,\r\n  } = json;\r\n  if (\r\n    !(\r\n      isString(layoutId) &&\r\n      isString(textTypeId) &&\r\n      Number.isSafeInteger(timeStamp) &&\r\n      Number.isSafeInteger(length) &&\r\n      Number.isSafeInteger(time) &&\r\n      Number.isSafeInteger(errors)\r\n    )\r\n  ) {\r\n    return null;\r\n  }\r\n  const histogram = histogramFromJson(histogramJson);\r\n  if (histogram == null) {\r\n    return null;\r\n  }\r\n  try {\r\n    return new Result(\r\n      Layout.ALL.get(fixLegacyLayoutId(layoutId)),\r\n      TextType.ALL.get(fixTextTypeId(textTypeId)),\r\n      timeStamp,\r\n      length,\r\n      time,\r\n      errors,\r\n      histogram,\r\n    );\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function histogramFromJson(json: HistogramtJson): Histogram | null {\r\n  if (!isPlainObject(json)) {\r\n    return null;\r\n  }\r\n  const samples = [];\r\n  for (const [key, sample] of Object.entries(json)) {\r\n    const codePoint = Number(key);\r\n    if (\r\n      !(Number.isSafeInteger(codePoint) && codePoint > 0 && codePoint <= 65535)\r\n    ) {\r\n      return null;\r\n    }\r\n    if (!isPlainObject(sample)) {\r\n      return null;\r\n    }\r\n    const {\r\n      h: hitCount,\r\n      m: missCount,\r\n      t: timeToType,\r\n    } = sample as {\r\n      readonly h: number;\r\n      readonly m: number;\r\n      readonly t: number;\r\n    };\r\n    if (\r\n      !(\r\n        Number.isSafeInteger(hitCount) &&\r\n        Number.isSafeInteger(missCount) &&\r\n        Number.isFinite(timeToType)\r\n      )\r\n    ) {\r\n      return null;\r\n    }\r\n    samples.push({\r\n      codePoint,\r\n      hitCount,\r\n      missCount,\r\n      timeToType: Math.round(timeToType),\r\n    });\r\n  }\r\n  return new Histogram(samples);\r\n}\r\n\r\nfunction fixLegacyLayoutId(id: string): string {\r\n  // Fix layout identifiers that were changed in cfafe818d5edd3d72a738183730dae049b967ebc\r\n  switch (id) {\r\n    case \"be\":\r\n      return Layout.BE_BY.id;\r\n    case \"cz\":\r\n      return Layout.CS_CZ.id;\r\n    case \"de\":\r\n      return Layout.DE_DE.id;\r\n    case \"fr\":\r\n      return Layout.FR_FR.id;\r\n    case \"it\":\r\n      return Layout.IT_IT.id;\r\n    case \"pl\":\r\n      return Layout.PL_PL.id;\r\n    case \"ru\":\r\n      return Layout.RU_RU.id;\r\n    case \"se\":\r\n      return Layout.SV_SE.id;\r\n    case \"ua\":\r\n      return Layout.UK_UA.id;\r\n    case \"uk\":\r\n      return Layout.EN_UK.id;\r\n    case \"us\":\r\n      return Layout.EN_US.id;\r\n    case \"us-canary-matrix\":\r\n      return Layout.EN_CANARY_MATRIX.id;\r\n    case \"us-colemak\":\r\n      return Layout.EN_COLEMAK.id;\r\n    case \"us-colemak-dh\":\r\n      return Layout.EN_COLEMAK_DH_ANSI.id;\r\n    case \"us-colemak-dh-matrix\":\r\n      return Layout.EN_COLEMAK_DH_MATRIX.id;\r\n    case \"us-dvorak\":\r\n      return Layout.EN_DVORAK.id;\r\n    case \"us-workman\":\r\n      return Layout.EN_WORKMAN.id;\r\n    default:\r\n      return id;\r\n  }\r\n}\r\n\r\nfunction fixTextTypeId(id: string): string {\r\n  switch (id) {\r\n    case \"guided\":\r\n      return TextType.GENERATED.id;\r\n    case \"custom\":\r\n      return TextType.NATURAL.id;\r\n    default:\r\n      return id;\r\n  }\r\n}\r\n","import { Reader, scramble, unscramble, Writer } from \"@mkboard/binary\";\r\nimport { type Result } from \"@mkboard/result\";\r\nimport { readStructuredContent, writeResults } from \"./binary.ts\";\r\nimport { HEADER } from \"./header.ts\";\r\n\r\nexport function formatMessage(results: Iterable<Result>): Uint8Array {\r\n  const writer = new Writer();\r\n  writer.putBuffer(HEADER);\r\n  writeResults(writer, results);\r\n  return scramble(writer.buffer());\r\n}\r\n\r\nexport function parseMessage(buffer: Uint8Array): Iterable<Result> {\r\n  return readStructuredContent(new Reader(unscramble(buffer)));\r\n}\r\n","export class AbortedError extends Error {\n  override readonly name = \"AbortedError\";\n\n  constructor(message: string, options?: ErrorOptions) {\n    super(message, options);\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"AbortedError\";\n  }\n}\n\nexport class BlockedError extends Error {\n  override readonly name = \"BlockedError\";\n\n  constructor(message: string, options?: ErrorOptions) {\n    super(message, options);\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"BlockedError\";\n  }\n}\n","import { AbortedError, BlockedError } from \"./errors.ts\";\n\nexport type Migration = {\n  (\n    db: DBDatabase,\n    tx: DBTransaction,\n    oldVersion: number,\n    newVersion: number | null,\n  ): Promise<void>;\n};\n\nexport class DBNamedFactory {\n  readonly #name: string;\n  readonly #version: number;\n  readonly #factory: DBFactory;\n\n  constructor(factory: IDBFactory, name: string, version: number) {\n    this.#name = name;\n    this.#version = version;\n    this.#factory = new DBFactory(factory);\n  }\n\n  get name(): string {\n    return this.#name;\n  }\n\n  get version(): number {\n    return this.#version;\n  }\n\n  openDatabase(migration: Migration): Promise<DBDatabase> {\n    return this.#factory.openDatabase(this.#name, this.#version, migration);\n  }\n\n  deleteDatabase(): Promise<void> {\n    return this.#factory.deleteDatabase(this.#name);\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"DBNamedFactory\";\n  }\n}\n\nexport class DBFactory {\n  readonly #factory: IDBFactory;\n\n  constructor(factory: IDBFactory) {\n    this.#factory = factory;\n  }\n\n  openDatabase(\n    name: string,\n    version: number,\n    migration: Migration,\n  ): Promise<DBDatabase> {\n    const request = this.#factory.open(name, version);\n    return new Promise<DBDatabase>((resolve, reject) => {\n      request.onerror = (ev) => {\n        console.error(\"IndexedDB open database error\", request.error);\n        reject(request.error);\n      };\n      request.onblocked = (ev) => {\n        reject(new BlockedError(\"Database is blocked\"));\n      };\n      request.onupgradeneeded = (ev) => {\n        const db = new DBDatabase(request.result as IDBDatabase);\n        const tx = new DBTransaction(request.transaction as IDBTransaction);\n        migration(db, tx, ev.oldVersion, ev.newVersion)\n          .then(() => tx.completed)\n          .then(\n            () => {\n              resolve(db);\n            },\n            (error) => {\n              reject(error);\n            },\n          );\n      };\n      request.onsuccess = (ev) => {\n        const db = new DBDatabase(request.result as IDBDatabase);\n        resolve(db);\n      };\n    });\n  }\n\n  deleteDatabase(name: string): Promise<void> {\n    const request = this.#factory.deleteDatabase(name);\n    return new Promise<void>((resolve, reject) => {\n      request.onerror = (ev) => {\n        console.error(\"IndexedDB delete database error\", request.error);\n        reject(request.error);\n      };\n      request.onblocked = (ev) => {\n        reject(new BlockedError(\"Database is blocked\"));\n      };\n      request.onsuccess = (ev) => {\n        resolve();\n      };\n    });\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"DBFactory\";\n  }\n}\n\nexport class DBDatabase {\n  readonly #db: IDBDatabase;\n\n  constructor(db: IDBDatabase) {\n    this.#db = db;\n  }\n\n  get name(): string {\n    return this.#db.name;\n  }\n\n  get version(): number {\n    return this.#db.version;\n  }\n\n  get objectStoreNames(): string[] {\n    return Array.from(this.#db.objectStoreNames);\n  }\n\n  createObjectStore(\n    name: string,\n    options?: IDBObjectStoreParameters,\n  ): DBObjectStore {\n    return new DBObjectStore(this.#db.createObjectStore(name, options));\n  }\n\n  deleteObjectStore(name: string): void {\n    this.#db.deleteObjectStore(name);\n  }\n\n  transaction(\n    storeNames: string | string[],\n    mode?: IDBTransactionMode,\n    options?: IDBTransactionOptions,\n  ): DBTransaction {\n    return new DBTransaction(this.#db.transaction(storeNames, mode, options));\n  }\n\n  close(): void {\n    this.#db.close();\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"DBDatabase\";\n  }\n}\n\nexport class DBTransaction {\n  readonly #tx: IDBTransaction;\n  readonly completed: Promise<void>;\n\n  constructor(tx: IDBTransaction) {\n    this.#tx = tx;\n    this.completed = promisifyTransaction(tx);\n  }\n\n  get mode(): IDBTransactionMode {\n    return this.#tx.mode;\n  }\n\n  get durability(): IDBTransactionDurability {\n    return this.#tx.durability;\n  }\n\n  get error(): DOMException | null {\n    return this.#tx.error;\n  }\n\n  abort(): void {\n    this.#tx.abort();\n  }\n\n  commit(): void {\n    this.#tx.commit();\n  }\n\n  objectStore(name: string): DBObjectStore {\n    return new DBObjectStore(this.#tx.objectStore(name));\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"DBTransaction\";\n  }\n}\n\nexport class DBObjectStore {\n  readonly #store: IDBObjectStore;\n\n  constructor(store: IDBObjectStore) {\n    this.#store = store;\n  }\n\n  get name(): string {\n    return this.#store.name;\n  }\n\n  get autoIncrement(): boolean {\n    return this.#store.autoIncrement;\n  }\n\n  get indexNames(): string[] {\n    return Array.from(this.#store.indexNames);\n  }\n\n  get keyPath(): string | string[] {\n    return this.#store.keyPath;\n  }\n\n  createIndex(\n    name: string,\n    keyPath: string | string[],\n    options?: IDBIndexParameters,\n  ): DBIndex {\n    return new DBIndex(this.#store.createIndex(name, keyPath, options));\n  }\n\n  deleteIndex(name: string): void {\n    this.#store.deleteIndex(name);\n  }\n\n  index(name: string): DBIndex {\n    return new DBIndex(this.#store.index(name));\n  }\n\n  count(key?: IDBValidKey | IDBKeyRange): Promise<number> {\n    return promisifyRequest<number>(this.#store.count(key));\n  }\n\n  get(key: IDBValidKey): Promise<any> {\n    return promisifyRequest(this.#store.get(key));\n  }\n\n  getAll(\n    query?: IDBValidKey | IDBKeyRange | null,\n    count?: number,\n  ): Promise<any[]> {\n    return promisifyRequest(this.#store.getAll(query, count));\n  }\n\n  getAllKeys(\n    query?: IDBValidKey | IDBKeyRange | null,\n    count?: number,\n  ): Promise<IDBValidKey[]> {\n    return promisifyRequest(this.#store.getAllKeys(query, count));\n  }\n\n  add(value: any, key?: IDBValidKey): Promise<IDBValidKey> {\n    return promisifyRequest<IDBValidKey>(this.#store.add(value, key));\n  }\n\n  put(value: any, key?: IDBValidKey): Promise<IDBValidKey> {\n    return promisifyRequest<IDBValidKey>(this.#store.put(value, key));\n  }\n\n  delete(key: IDBValidKey | IDBKeyRange): Promise<void> {\n    return promisifyRequest<void>(this.#store.delete(key));\n  }\n\n  clear(): Promise<void> {\n    return promisifyRequest<void>(this.#store.clear());\n  }\n\n  openCursor(\n    query?: IDBValidKey | IDBKeyRange | null,\n    direction?: IDBCursorDirection,\n  ): Promise<IDBCursorWithValue | null> {\n    return promisifyRequest(this.#store.openCursor(query, direction));\n  }\n\n  openKeyCursor(\n    query?: IDBValidKey | IDBKeyRange | null,\n    direction?: IDBCursorDirection,\n  ): Promise<IDBCursor | null> {\n    return promisifyRequest(this.#store.openKeyCursor(query, direction));\n  }\n\n  readAll<T>(\n    parse: (key: IDBValidKey, value: any) => T | null,\n    query?: IDBValidKey | IDBKeyRange | null,\n    direction?: IDBCursorDirection,\n  ): Promise<T[]> {\n    return readAll(parse, this.#store.openCursor(query, direction));\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"DBObjectStore\";\n  }\n}\n\nexport class DBIndex {\n  readonly #index: IDBIndex;\n\n  constructor(idx: IDBIndex) {\n    this.#index = idx;\n  }\n\n  get name(): string {\n    return this.#index.name;\n  }\n\n  get keyPath(): string | string[] {\n    return this.#index.keyPath;\n  }\n\n  get multiEntry(): boolean {\n    return this.#index.multiEntry;\n  }\n\n  get unique(): boolean {\n    return this.#index.unique;\n  }\n\n  count(query?: IDBValidKey | IDBKeyRange): Promise<number> {\n    return promisifyRequest(this.#index.count(query));\n  }\n\n  get(query: IDBValidKey | IDBKeyRange): Promise<any> {\n    return promisifyRequest(this.#index.get(query));\n  }\n\n  getAll(\n    query?: IDBValidKey | IDBKeyRange | null,\n    count?: number,\n  ): Promise<any[]> {\n    return promisifyRequest(this.#index.getAll(query, count));\n  }\n\n  getAllKeys(\n    query?: IDBValidKey | IDBKeyRange | null,\n    count?: number,\n  ): Promise<IDBValidKey[]> {\n    return promisifyRequest(this.#index.getAllKeys(query, count));\n  }\n\n  openCursor(\n    query?: IDBValidKey | IDBKeyRange | null,\n    direction?: IDBCursorDirection,\n  ): Promise<IDBCursorWithValue | null> {\n    return promisifyRequest(this.#index.openCursor(query, direction));\n  }\n\n  openKeyCursor(\n    query?: IDBValidKey | IDBKeyRange | null,\n    direction?: IDBCursorDirection,\n  ): Promise<IDBCursor | null> {\n    return promisifyRequest(this.#index.openKeyCursor(query, direction));\n  }\n\n  readAll<T>(\n    parse: (key: IDBValidKey, value: any) => T | null,\n    query?: IDBValidKey | IDBKeyRange | null,\n    direction?: IDBCursorDirection,\n  ): Promise<T[]> {\n    return readAll(parse, this.#index.openCursor(query, direction));\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"DBIndex\";\n  }\n}\n\nfunction promisifyRequest<V>(request: IDBRequest): Promise<V> {\n  return new Promise<V>((resolve, reject) => {\n    request.onerror = (ev) => {\n      console.error(\"IndexedDB request error\", request.error);\n      reject(request.error);\n    };\n    request.onsuccess = (ev) => {\n      resolve(request.result as V);\n    };\n  });\n}\n\nfunction promisifyTransaction(tx: IDBTransaction): Promise<void> {\n  return new Promise((resolve, reject) => {\n    tx.onerror = (ev) => {\n      console.error(\"IndexedDB transaction error\", tx.error);\n      reject(tx.error);\n    };\n    tx.onabort = (ev) => {\n      reject(new AbortedError(\"Operation aborted\"));\n    };\n    tx.oncomplete = (ev) => {\n      resolve();\n    };\n  });\n}\n\nfunction readAll<T>(\n  parse: (key: IDBValidKey, value: any) => T | null,\n  request: IDBRequest<IDBCursorWithValue | null>,\n): Promise<T[]> {\n  return new Promise<T[]>((resolve, reject) => {\n    const result: T[] = [];\n\n    request.onerror = (ev) => {\n      reject(request.error);\n    };\n\n    request.onsuccess = (ev) => {\n      const cursor = request.result;\n      if (cursor != null) {\n        const item = parse(cursor.key, cursor.value);\n        if (item != null) {\n          result.push(item);\n        }\n        cursor.continue();\n      } else {\n        resolve(result);\n      }\n    };\n  });\n}\n","import { type Result } from \"@mkboard/result\";\r\nimport { resultFromJson, resultToJson } from \"@mkboard/result-io\";\r\nimport {\r\n  type DBDatabase,\r\n  DBNamedFactory,\r\n  type DBTransaction,\r\n} from \"./indexeddb/index.ts\";\r\nimport { type LocalResultStorage } from \"./types.ts\";\r\n\r\nexport class PersistentResultStorage implements LocalResultStorage {\r\n  readonly #factory = new DBNamedFactory(indexedDB, \"history\", 1);\r\n\r\n  async load(): Promise<Result[]> {\r\n    const db = await this.#factory.openDatabase(migration);\r\n    try {\r\n      const tx = db.transaction(db.name, \"readonly\");\r\n      const store = tx.objectStore(db.name);\r\n      const results = await store.readAll((key, value) => {\r\n        return resultFromJson(value);\r\n      });\r\n      await tx.completed;\r\n      return results;\r\n    } finally {\r\n      db.close();\r\n    }\r\n  }\r\n\r\n  async append(results: readonly Result[]): Promise<void> {\r\n    const db = await this.#factory.openDatabase(migration);\r\n    try {\r\n      const tx = db.transaction(db.name, \"readwrite\");\r\n      const store = tx.objectStore(db.name);\r\n      for (const result of results) {\r\n        await store.add(resultToJson(result));\r\n      }\r\n      await tx.completed;\r\n    } finally {\r\n      db.close();\r\n    }\r\n  }\r\n\r\n  async clear(): Promise<void> {\r\n    return await this.#factory.deleteDatabase();\r\n  }\r\n}\r\n\r\nasync function migration(\r\n  db: DBDatabase,\r\n  tx: DBTransaction,\r\n  oldVersion: number,\r\n  newVersion: number | null,\r\n): Promise<void> {\r\n  db.createObjectStore(db.name, { autoIncrement: true });\r\n}\r\n","import { type NamedUser } from \"@mkboard/pages-shared\";\r\n\r\n/** Inclusive lower bound of the range of valid internal user ids. */\r\nexport const MIN_ID = 0x00000001;\r\n/** Inclusive upper bound of the range of valid internal user ids. */\r\nexport const MAX_ID = 0x0fffffff;\r\n/** Regex pattern to match example user ids. */\r\nexport const EXAMPLE_ID_PATTERN = new RegExp(\"^example([1-9])$\");\r\n\r\n/** Arbitrary offset. */\r\nconst OFFSET = 0x05b4c39f;\r\n/** Arbitrary XOR mask. */\r\nconst MASK = 0x0a531fcd;\r\n/** Multiplicative inverse of C2 modulo MAX_ID + 1. */\r\nconst C1 = 0x0527d98f;\r\n/** Multiplicative inverse of C1 modulo MAX_ID + 1. */\r\nconst C2 = 0x00c9256f;\r\n/** Base 36. */\r\nconst BASE = 36;\r\n/** Base 36 digits. */\r\nconst DIGITS = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n/** Base 36 digits. */\r\n// prettier-ignore\r\nconst INVERSE_DIGITS = [\r\n  null, null, null, null, null, null, null, null, null, null, null, null, null,\r\n  null, null, null, null, null, null, null, null, null, null, null, null, null,\r\n  null, null, null, null, null, null, null, null, null, null, null, null, null,\r\n  null, null, null, null, null, null, null, null, null, 0, 1, 2, 3, 4, 5, 6, 7,\r\n  8, 9, null, null, null, null, null, null, null, 10, 11, 12, 13, 14, 15, 16,\r\n  17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\r\n  null, null, null, null, null, null, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\r\n  20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, null, null,\r\n  null, null, null,\r\n];\r\n\r\nexport class InvalidIdError extends Error {\r\n  constructor() {\r\n    super(\"invalid id\");\r\n  }\r\n\r\n  get [Symbol.toStringTag]() {\r\n    return \"InvalidIdError\";\r\n  }\r\n}\r\n\r\nexport class PublicId {\r\n  static readonly example1 = PublicId.of(\"example1\");\r\n  static readonly example2 = PublicId.of(\"example2\");\r\n  static readonly example3 = PublicId.of(\"example3\");\r\n  static readonly example4 = PublicId.of(\"example4\");\r\n  static readonly example5 = PublicId.of(\"example5\");\r\n  static readonly examples = [\r\n    PublicId.example1,\r\n    PublicId.example2,\r\n    PublicId.example3,\r\n    PublicId.example4,\r\n    PublicId.example5,\r\n  ];\r\n\r\n  static of(publicId: string): PublicId {\r\n    const match = EXAMPLE_ID_PATTERN.exec(publicId);\r\n    if (match != null) {\r\n      return new PublicId(-Number(match[1]));\r\n    } else {\r\n      return new PublicId(fromPublicId(publicId));\r\n    }\r\n  }\r\n\r\n  static parse(publicId: string): PublicId | null {\r\n    try {\r\n      return PublicId.of(publicId);\r\n    } catch {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /** Internal user id. */\r\n  readonly id: number;\r\n  /** Public user id. */\r\n  readonly publicId: string;\r\n  /** Whether user id is of an example profile. */\r\n  readonly example: boolean;\r\n\r\n  constructor(id: number) {\r\n    if (!Number.isInteger(id) || id === 0) {\r\n      throw new InvalidIdError();\r\n    }\r\n    if (id < 0) {\r\n      this.id = -id;\r\n      this.publicId = `example${-id}`;\r\n      this.example = true;\r\n    } else {\r\n      if (id < MIN_ID || id > MAX_ID) {\r\n        throw new InvalidIdError();\r\n      }\r\n      this.id = id;\r\n      this.publicId = toPublicId(id);\r\n      this.example = false;\r\n    }\r\n  }\r\n\r\n  toString(): string {\r\n    return this.publicId;\r\n  }\r\n\r\n  toUser(): NamedUser {\r\n    if (!this.example) {\r\n      throw new Error();\r\n    }\r\n    return Object.freeze<NamedUser>({\r\n      id: this.publicId,\r\n      name: `Example User ${this.id}`,\r\n      imageUrl: null,\r\n      premium: false,\r\n    });\r\n  }\r\n}\r\n\r\nfunction toPublicId(id: number): string {\r\n  return formatWithCheckDigit(toPublicInt(id));\r\n}\r\n\r\nfunction fromPublicId(publicId: string): number {\r\n  return fromPublicInt(parseWithCheckDigit(publicId));\r\n}\r\n\r\nfunction toPublicInt(id: number): number {\r\n  id = modMultiply(id, C1);\r\n  id = id ^ MASK;\r\n  id = id & MAX_ID;\r\n  id = id + OFFSET;\r\n  return id;\r\n}\r\n\r\nfunction fromPublicInt(id: number): number {\r\n  id = id - OFFSET;\r\n  id = id ^ MASK;\r\n  id = modMultiply(id, C2);\r\n  id = id & MAX_ID;\r\n  return id;\r\n}\r\n\r\nfunction parseWithCheckDigit(string: string): number {\r\n  let number = 0;\r\n  let checkSum = 0;\r\n  const checkDigit = toDigit(string, 0);\r\n  for (let i = 1; i < string.length; i++) {\r\n    const digit = toDigit(string, i);\r\n    number = number * BASE + digit;\r\n    checkSum += digit * digitWeight(string.length - i);\r\n  }\r\n  if (number === 0 || checkDigit !== checkSum % BASE) {\r\n    throw new InvalidIdError();\r\n  }\r\n  return number;\r\n}\r\n\r\nfunction formatWithCheckDigit(number: number): string {\r\n  let string = \"\";\r\n  let checkSum = 0;\r\n  do {\r\n    const digit = number % BASE;\r\n    string = DIGITS[digit] + string;\r\n    checkSum += digit * digitWeight(string.length);\r\n  } while ((number = (number / BASE) >>> 0) > 0);\r\n  const checkDigit = checkSum % BASE;\r\n  string = DIGITS[checkDigit] + string;\r\n  return string;\r\n}\r\n\r\n/** Multiply modulo 0xFFFFFFFF. */\r\nfunction modMultiply(a: number, b: number): number {\r\n  a = a >>> 0;\r\n  b = b >>> 0;\r\n  let r = 0;\r\n  for (let n = 0; n < 32; n++) {\r\n    if (((b >>> n) & 1) === 1) {\r\n      r += a << n;\r\n    }\r\n  }\r\n  return r >>> 0;\r\n}\r\n\r\nfunction toDigit(string: string, index: number): number {\r\n  const digit = INVERSE_DIGITS[string.charCodeAt(index)];\r\n  if (digit == null) {\r\n    throw new InvalidIdError();\r\n  }\r\n  return digit;\r\n}\r\n\r\nfunction digitWeight(pos: number): number {\r\n  return (pos & 1) === 0 ? 1 : 3;\r\n}\r\n","import { PublicId } from \"@mkboard/publicid\";\r\nimport { expectType, request } from \"@mkboard/request\";\r\nimport { type Result } from \"@mkboard/result\";\r\nimport { formatMessage, parseFile } from \"@mkboard/result-io\";\r\nimport example1Url from \"../../assets/example1.stats\";\r\nimport example2Url from \"../../assets/example2.stats\";\r\nimport example3Url from \"../../assets/example3.stats\";\r\nimport example4Url from \"../../assets/example4.stats\";\r\nimport example5Url from \"../../assets/example5.stats\";\r\nimport { type ProgressListener, type RemoteResultSync } from \"./types.ts\";\r\n\r\nconst url = \"/_/sync/data\";\r\n\r\nexport class ResultSyncNamedUser implements RemoteResultSync {\r\n  receive(pl: ProgressListener): Promise<Result[]> {\r\n    return receive(url, pl);\r\n  }\r\n\r\n  send(results: readonly Result[], pl: ProgressListener): Promise<void> {\r\n    return send(url, results, pl);\r\n  }\r\n\r\n  clear(): Promise<void> {\r\n    return clear(url);\r\n  }\r\n}\r\n\r\nexport class ResultSyncPublicUser implements RemoteResultSync {\r\n  readonly #userId: string;\r\n\r\n  constructor(userId: string) {\r\n    this.#userId = userId;\r\n  }\r\n\r\n  receive(pl: ProgressListener): Promise<Result[]> {\r\n    return receive(publicUserDataUrl(this.#userId), pl);\r\n  }\r\n\r\n  async send(results: readonly Result[], pl: ProgressListener): Promise<void> {\r\n    throw new Error(\"Disabled\");\r\n  }\r\n\r\n  async clear(): Promise<void> {\r\n    throw new Error(\"Disabled\");\r\n  }\r\n}\r\n\r\nexport class ResultSyncAnonymousUser implements RemoteResultSync {\r\n  async receive(pl: ProgressListener): Promise<Result[]> {\r\n    throw new Error(\"Disabled\");\r\n  }\r\n\r\n  async send(results: readonly Result[], pl: ProgressListener): Promise<void> {\r\n    throw new Error(\"Disabled\");\r\n  }\r\n\r\n  async clear(): Promise<void> {\r\n    throw new Error(\"Disabled\");\r\n  }\r\n}\r\n\r\nasync function receive(path: string, pl: ProgressListener): Promise<Result[]> {\r\n  const response = await request\r\n    .use(expectType(\"application/octet-stream\"))\r\n    .GET(path)\r\n    .on(\"download-progress\", (ev) => {\r\n      pl(ev.total ?? 0, ev.loaded);\r\n    })\r\n    .send();\r\n  return [...parseFile(new Uint8Array(await response.arrayBuffer()))];\r\n}\r\n\r\nasync function send(\r\n  path: string,\r\n  results: readonly Result[],\r\n  pl: ProgressListener,\r\n): Promise<void> {\r\n  const buffer = formatMessage(results);\r\n  const response = await request\r\n    .POST(path)\r\n    .on(\"upload-progress\", (ev) => {\r\n      pl(ev.total ?? 0, ev.loaded);\r\n    })\r\n    .send(buffer, \"application/octet-stream\");\r\n  await response.blob(); // Ignore.\r\n}\r\n\r\nasync function clear(path: string): Promise<void> {\r\n  const response = await request.DELETE(path).send();\r\n  await response.blob(); // Ignore.\r\n}\r\n\r\nfunction publicUserDataUrl(userId: string): string {\r\n  switch (userId) {\r\n    case PublicId.example1.publicId:\r\n      return example1Url;\r\n    case PublicId.example2.publicId:\r\n      return example2Url;\r\n    case PublicId.example3.publicId:\r\n      return example3Url;\r\n    case PublicId.example4.publicId:\r\n      return example4Url;\r\n    case PublicId.example5.publicId:\r\n      return example5Url;\r\n    default:\r\n      return `${url}/${encodeURIComponent(userId)}`;\r\n  }\r\n}\r\n","import { Reader, Writer } from \"@mkboard/binary\";\r\nimport { type Result } from \"@mkboard/result\";\r\nimport { readStructuredContent, writeResults } from \"./binary.ts\";\r\nimport { HEADER } from \"./header.ts\";\r\n\r\nexport function fileHeader(): Uint8Array {\r\n  return HEADER;\r\n}\r\n\r\nexport function fileChunk(results: Iterable<Result>): Uint8Array {\r\n  const writer = new Writer();\r\n  writeResults(writer, results);\r\n  return writer.buffer();\r\n}\r\n\r\nexport function parseFile(buffer: Uint8Array): Iterable<Result> {\r\n  return readStructuredContent(new Reader(buffer));\r\n}\r\n\r\nexport function formatFile(results: Iterable<Result>): Uint8Array {\r\n  const writer = new Writer();\r\n  writer.putBuffer(HEADER);\r\n  writeResults(writer, results);\r\n  return writer.buffer();\r\n}\r\n","import { recoverResults, Result } from \"@mkboard/result\";\r\nimport { DatabaseError } from \"../errors.ts\";\r\nimport { PersistentResultStorage } from \"./local.ts\";\r\nimport { ResultSyncNamedUser, ResultSyncPublicUser } from \"./remotesync.ts\";\r\nimport {\r\n  type LocalResultStorage,\r\n  type ProgressListener,\r\n  type RemoteResultSync,\r\n  type ResultStorage,\r\n} from \"./types.ts\";\r\n\r\nexport type OpenRequest =\r\n  | {\r\n      // Load our own data.\r\n      readonly type: \"private\";\r\n      readonly userId: string | null;\r\n    }\r\n  | {\r\n      // Load data of a public user.\r\n      readonly type: \"public\";\r\n      readonly userId: string;\r\n    };\r\n\r\nexport function openResultStorage(request: OpenRequest): ResultStorage {\r\n  return wrapResultStorage(openRawResultStorage(request));\r\n}\r\n\r\nexport function wrapResultStorage(storage: ResultStorage): ResultStorage {\r\n  return translateErrors(validateResults(storage));\r\n}\r\n\r\nfunction openRawResultStorage(\r\n  request:\r\n    | { readonly type: \"private\"; readonly userId: string | null }\r\n    | {\r\n        readonly type: \"public\";\r\n        readonly userId: string;\r\n      },\r\n) {\r\n  switch (request.type) {\r\n    case \"private\": {\r\n      const { userId } = request;\r\n      if (userId == null) {\r\n        const local = new PersistentResultStorage();\r\n        return new ResultStorageOfAnonymousUser(local);\r\n      } else {\r\n        const local = new PersistentResultStorage();\r\n        const remote = new ResultSyncNamedUser();\r\n        return new ResultStorageOfNamedUser(local, remote);\r\n      }\r\n    }\r\n    case \"public\": {\r\n      const { userId } = request;\r\n      const remote = new ResultSyncPublicUser(userId);\r\n      return new ResultStorageOfPublicUser(remote);\r\n    }\r\n  }\r\n}\r\n\r\nfunction translateErrors(storage: ResultStorage): ResultStorage {\r\n  return new (class ErrorTranslator implements ResultStorage {\r\n    async load(pl?: ProgressListener): Promise<Result[]> {\r\n      try {\r\n        return await storage.load(pl);\r\n      } catch (err: any) {\r\n        throw new DatabaseError(\"Cannot read records from database\", {\r\n          cause: err,\r\n        });\r\n      }\r\n    }\r\n\r\n    async append(\r\n      results: readonly Result[],\r\n      pl?: ProgressListener,\r\n    ): Promise<void> {\r\n      try {\r\n        await storage.append(results, pl);\r\n      } catch (err: any) {\r\n        throw new DatabaseError(\"Cannot add records to database\", {\r\n          cause: err,\r\n        });\r\n      }\r\n    }\r\n\r\n    async clear(): Promise<void> {\r\n      try {\r\n        await storage.clear();\r\n      } catch (err: any) {\r\n        throw new DatabaseError(\"Cannot clear database\", {\r\n          cause: err,\r\n        });\r\n      }\r\n    }\r\n  })();\r\n}\r\n\r\nfunction validateResults(storage: ResultStorage): ResultStorage {\r\n  return new (class ErrorTranslator implements ResultStorage {\r\n    async load(pl?: ProgressListener): Promise<Result[]> {\r\n      return recoverResults(await storage.load(pl));\r\n    }\r\n\r\n    async append(\r\n      results: readonly Result[],\r\n      pl?: ProgressListener,\r\n    ): Promise<void> {\r\n      results = results.filter(Result.isValid);\r\n      if (results.length > 0) {\r\n        await storage.append(results, pl);\r\n      }\r\n    }\r\n\r\n    async clear(): Promise<void> {\r\n      await storage.clear();\r\n    }\r\n  })();\r\n}\r\n\r\nexport class ResultStorageOfAnonymousUser implements ResultStorage {\r\n  readonly #local: LocalResultStorage;\r\n\r\n  constructor(local: LocalResultStorage) {\r\n    this.#local = local;\r\n  }\r\n\r\n  async load(pl = dummy): Promise<Result[]> {\r\n    return await this.#local.load();\r\n  }\r\n\r\n  async append(results: readonly Result[], pl = dummy): Promise<void> {\r\n    await this.#local.append(results);\r\n  }\r\n\r\n  async clear(): Promise<void> {\r\n    await this.#local.clear();\r\n  }\r\n}\r\n\r\nexport class ResultStorageOfNamedUser implements ResultStorage {\r\n  readonly #local: LocalResultStorage;\r\n  readonly #remote: RemoteResultSync;\r\n\r\n  constructor(local: LocalResultStorage, remote: RemoteResultSync) {\r\n    this.#local = local;\r\n    this.#remote = remote;\r\n  }\r\n\r\n  async load(pl = dummy): Promise<Result[]> {\r\n    const results = await this.#remote.receive(pl);\r\n    if (results.length > 0) {\r\n      return results;\r\n    } else {\r\n      const results = await this.#local.load();\r\n      if (results.length > 0) {\r\n        await this.#remote.send(results, pl);\r\n        await this.#local.clear();\r\n        return results;\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n\r\n  async append(results: readonly Result[], pl = dummy): Promise<void> {\r\n    await this.#remote.send(results, pl);\r\n  }\r\n\r\n  async clear(): Promise<void> {\r\n    await this.#remote.clear();\r\n  }\r\n}\r\n\r\nexport class ResultStorageOfPublicUser implements ResultStorage {\r\n  readonly #remote: RemoteResultSync;\r\n\r\n  constructor(remote: RemoteResultSync) {\r\n    this.#remote = remote;\r\n  }\r\n\r\n  async load(pl = dummy): Promise<Result[]> {\r\n    return await this.#remote.receive(pl);\r\n  }\r\n\r\n  async append(results: readonly Result[], pl = dummy): Promise<void> {\r\n    throw new Error(\"Disabled\");\r\n  }\r\n\r\n  async clear(): Promise<void> {\r\n    throw new Error(\"Disabled\");\r\n  }\r\n}\r\n\r\nfunction dummy(total: number, current: number): void {}\r\n","import { LoadingProgress, usePageData } from \"@mkboard/pages-shared\";\r\nimport { type ReactNode, useMemo } from \"react\";\r\nimport { useLoader } from \"./internal/loader.ts\";\r\nimport { ResultProvider } from \"./internal/ResultProvider.tsx\";\r\nimport { openResultStorage } from \"./internal/storage.ts\";\r\nimport { type ResultStorage } from \"./internal/types.ts\";\r\n\r\nexport function ResultLoader({\r\n  children,\r\n}: {\r\n  readonly children: ReactNode;\r\n}): ReactNode {\r\n  const storage = useResultStorage();\r\n  const state = useLoader(storage);\r\n  if (state.type === \"loading\") {\r\n    return <LoadingProgress total={state.total} current={state.current} />;\r\n  } else {\r\n    return (\r\n      <ResultProvider storage={storage} initialResults={state.results}>\r\n        {children}\r\n      </ResultProvider>\r\n    );\r\n  }\r\n}\r\n\r\nfunction useResultStorage(): ResultStorage {\r\n  const pageData = usePageData();\r\n  return useMemo(() => {\r\n    const { publicUser } = pageData;\r\n    return openResultStorage({\r\n      type: \"private\",\r\n      userId: publicUser.id,\r\n    });\r\n  }, [pageData]);\r\n}\r\n","import { catchError } from \"@mkboard/debug\";\r\nimport { type Result } from \"@mkboard/result\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { type ResultStorage } from \"./types.ts\";\r\n\r\nexport type LoaderState =\r\n  | {\r\n      readonly type: \"loading\";\r\n      readonly total: number;\r\n      readonly current: number;\r\n    }\r\n  | {\r\n      readonly type: \"ready\";\r\n      readonly results: readonly Result[];\r\n    };\r\n\r\nexport function useLoader(storage: ResultStorage): LoaderState {\r\n  const [state, setState] = useState<LoaderState>({\r\n    type: \"loading\",\r\n    total: 0,\r\n    current: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n\r\n    const load = async () => {\r\n      const results = await storage.load((total, current) => {\r\n        if (!didCancel) {\r\n          setState({ type: \"loading\", total, current });\r\n        }\r\n      });\r\n      if (!didCancel) {\r\n        setState({ type: \"ready\", results });\r\n      }\r\n    };\r\n\r\n    load().catch(catchError);\r\n\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, [storage]);\r\n\r\n  return state;\r\n}\r\n","import { type WordList } from \"@mkboard/content\";\r\nimport { Language } from \"@mkboard/keyboard\";\r\n\r\nexport async function loadWordList(language: Language): Promise<WordList> {\r\n  switch (language) {\r\n    case Language.AR:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-ar\" */ \"./data/words-ar.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.BE:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-be\" */ \"./data/words-be.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.CS:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-cs\" */ \"./data/words-cs.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.DA:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-da\" */ \"./data/words-da.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.DE:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-de\" */ \"./data/words-de.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.EL:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-el\" */ \"./data/words-el.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.EN:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-en\" */ \"./data/words-en.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.ES:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-es\" */ \"./data/words-es.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.FA:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-fa\" */ \"./data/words-fa.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.FR:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-fr\" */ \"./data/words-fr.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.HE:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-he\" */ \"./data/words-he.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.HR:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-hr\" */ \"./data/words-hr.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.HU:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-hu\" */ \"./data/words-hu.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.IT:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-it\" */ \"./data/words-it.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.LT:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-lt\" */ \"./data/words-lt.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.NB:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-nb\" */ \"./data/words-nb.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.NL:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-nl\" */ \"./data/words-nl.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.PL:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-pl\" */ \"./data/words-pl.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.PT:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-pt\" */ \"./data/words-pt.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.RO:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-ro\" */ \"./data/words-ro.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.RU:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-ru\" */ \"./data/words-ru.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.SL:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-sl\" */ \"./data/words-sl.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.SV:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-sv\" */ \"./data/words-sv.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.TH:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-th\" */ \"./data/words-th.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.TR:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-tr\" */ \"./data/words-tr.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    case Language.UK:\r\n      return (\r\n        await import(\r\n          /* webpackChunkName: \"words-uk\" */ \"./data/words-uk.json\",\r\n          { with: { type: \"json\" } }\r\n        )\r\n      ).default;\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n","import { type WordList } from \"@mkboard/content\";\r\nimport { catchError } from \"@mkboard/debug\";\r\nimport { type Language } from \"@mkboard/keyboard\";\r\nimport { type ReactNode, useEffect, useState } from \"react\";\r\nimport { loadWordList } from \"./load.ts\";\r\n\r\nexport function WordListLoader({\r\n  language,\r\n  children,\r\n  fallback,\r\n}: {\r\n  readonly language: Language;\r\n  readonly children: (result: WordList) => ReactNode;\r\n  readonly fallback?: ReactNode;\r\n}): ReactNode {\r\n  return (\r\n    <Loader key={language.id} language={language} fallback={fallback}>\r\n      {children}\r\n    </Loader>\r\n  );\r\n}\r\n\r\nfunction Loader({\r\n  language,\r\n  children,\r\n  fallback,\r\n}: {\r\n  readonly language: Language;\r\n  readonly children: (result: WordList) => ReactNode;\r\n  readonly fallback?: ReactNode;\r\n}): ReactNode {\r\n  const result = useLoader(language);\r\n  if (result == null) {\r\n    return fallback;\r\n  } else {\r\n    return children(result);\r\n  }\r\n}\r\n\r\nfunction useLoader(language: Language): WordList | null {\r\n  const [wordList, setWordList] = useState<WordList | null>(null);\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n\r\n    loadWordList(language)\r\n      .then((wordList) => {\r\n        if (!didCancel) {\r\n          setWordList(wordList);\r\n        }\r\n      })\r\n      .catch(catchError);\r\n\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, [language]);\r\n\r\n  return wordList;\r\n}\r\n"],"names":["loaderImpl","async","language","response","use","GET","AR","BE","CS","DA","DE","EL","EN","ES","FA","FR","HE","HR","HU","IT","LT","NB","NL","PL","PT","RO","RU","SL","SV","TH","TR","UK","Error","modelAssetPath","send","body","arrayBuffer","model","Uint8Array","PhoneticModelLoader","children","fallback","Loader","id","result","setResult","useState","useEffect","didCancel","loader","then","catch","useLoader","Provider","value","loadContent","book","EN_ALICE_WONDERLAND","default","EN_JEKYLL_HYDE","EN_CALL_WILD","ES_MARIANELA","DE_ALICE_WONDERLAND","FR_ALICE_WONDERLAND","BookContentLoader","bookContent","setBookContent","content","withDeferred","WrappedComponent","DeferredComponent","props","deferredProps","deferred","setDeferred","requestAnimationFrame","cancelAnimationFrame","useDeferred","displayName","name","memo","ViewContext","createContext","setView","useView","views","useContext","ViewSwitch","Object","keys","View","undefined","ExplainerBoundary","defaultVisible","explainersVisible","setExplainersVisible","toggleExplainers","v","DatabaseError","constructor","message","options","super","Symbol","toStringTag","catchError","error","console","process","env","REPORT_ERRORS","toast","storage","initialResults","results","setResults","appendResults","newResults","append","clearResults","clear","InvalidFormatError","HEADER_SIGNATURE","putInt32","buffer","writeResult","writer","samples","histogram","putUint8","layout","xid","textType","putUint32","Math","round","timeStamp","putUintVlq","time","length","errors","sample","codePoint","hitCount","missCount","timeToType","readResult","reader","layoutXId","getUint8","textTypeXId","timestamp","getUint32","getUintVlq","size","i","push","ALL","xget","remaining","byteLength","validateHeader","readResults","err","cause","resultToJson","l","m","ts","n","t","e","h","histogramToJson","json","resultFromJson","layoutId","textTypeId","histogramJson","Number","isSafeInteger","key","entries","isFinite","histogramFromJson","get","BE_BY","CS_CZ","DE_DE","FR_FR","IT_IT","PL_PL","RU_RU","SV_SE","UK_UA","EN_UK","EN_US","EN_CANARY_MATRIX","EN_COLEMAK","EN_COLEMAK_DH_ANSI","EN_COLEMAK_DH_MATRIX","EN_DVORAK","EN_WORKMAN","fixLegacyLayoutId","GENERATED","NATURAL","fixTextTypeId","formatMessage","putBuffer","AbortedError","BlockedError","DBNamedFactory","factory","version","this","DBFactory","openDatabase","migration","deleteDatabase","request","open","Promise","resolve","reject","onerror","ev","onblocked","onupgradeneeded","db","DBDatabase","tx","DBTransaction","transaction","oldVersion","newVersion","completed","onsuccess","objectStoreNames","Array","from","createObjectStore","DBObjectStore","deleteObjectStore","storeNames","mode","close","onabort","oncomplete","promisifyTransaction","durability","abort","commit","objectStore","store","autoIncrement","indexNames","keyPath","createIndex","DBIndex","deleteIndex","index","count","promisifyRequest","getAll","query","getAllKeys","add","put","delete","openCursor","direction","openKeyCursor","readAll","parse","idx","multiEntry","unique","cursor","item","continue","PersistentResultStorage","indexedDB","load","MAX_ID","EXAMPLE_ID_PATTERN","RegExp","OFFSET","MASK","C1","C2","BASE","DIGITS","INVERSE_DIGITS","InvalidIdError","PublicId","static","of","example1","example2","example3","example4","example5","publicId","match","exec","string","number","checkSum","checkDigit","toDigit","digit","digitWeight","parseWithCheckDigit","modMultiply","fromPublicId","example","isInteger","formatWithCheckDigit","toPublicInt","toPublicId","toString","toUser","freeze","imageUrl","premium","a","b","r","charCodeAt","pos","url","ResultSyncNamedUser","receive","pl","path","POST","on","total","loaded","blob","DELETE","ResultSyncPublicUser","userId","encodeURIComponent","publicUserDataUrl","type","local","ResultStorageOfAnonymousUser","remote","ResultStorageOfNamedUser","ResultStorageOfPublicUser","openRawResultStorage","translateErrors","filter","isValid","validateResults","dummy","current","ResultLoader","pageData","useMemo","publicUser","state","setState","loadWordList","WordListLoader","wordList","setWordList"],"sourceRoot":""}